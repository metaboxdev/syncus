(self.webpackChunk_N_E = self.webpackChunk_N_E || []).push([[759], {
    94999: function (t, e, r) {
        "use strict";
        r.d(e, {
            Sg: function () {
                return s
            },
            zt: function () {
                return a
            }
        });
        var n = r(92598)
            , i = r(17213);
        let o = new (r(36288)).Yd("abstract-provider/5.7.0");
        class s extends i.dk {
            static isForkEvent(t) {
                return !!(t && t._isForkEvent)
            }
        }
        class a {
            constructor() {
                o.checkAbstract(new.target, a),
                    (0,
                        i.zG)(this, "_isProvider", !0)
            }
            getFeeData() {
                var t, e, r, o;
                return t = this,
                    e = void 0,
                    r = void 0,
                    o = function* () {
                        let { block: t, gasPrice: e } = yield (0,
                            i.mE)({
                                block: this.getBlock("latest"),
                                gasPrice: this.getGasPrice().catch(t => null)
                            })
                            , r = null
                            , o = null
                            , s = null;
                        return t && t.baseFeePerGas && (r = t.baseFeePerGas,
                            s = n.O$.from("1500000000"),
                            o = t.baseFeePerGas.mul(2).add(s)),
                        {
                            lastBaseFeePerGas: r,
                            maxFeePerGas: o,
                            maxPriorityFeePerGas: s,
                            gasPrice: e
                        }
                    }
                    ,
                    new (r || (r = Promise))(function (n, i) {
                        function s(t) {
                            try {
                                l(o.next(t))
                            } catch (t) {
                                i(t)
                            }
                        }
                        function a(t) {
                            try {
                                l(o.throw(t))
                            } catch (t) {
                                i(t)
                            }
                        }
                        function l(t) {
                            var e;
                            t.done ? n(t.value) : ((e = t.value) instanceof r ? e : new r(function (t) {
                                t(e)
                            }
                            )).then(s, a)
                        }
                        l((o = o.apply(t, e || [])).next())
                    }
                    )
            }
            addListener(t, e) {
                return this.on(t, e)
            }
            removeListener(t, e) {
                return this.off(t, e)
            }
            static isProvider(t) {
                return !!(t && t._isProvider)
            }
        }
    },
    14941: function (t, e, r) {
        "use strict";
        r.d(e, {
            E: function () {
                return u
            },
            b: function () {
                return c
            }
        });
        var n = r(17213)
            , i = r(36288)
            , o = function (t, e, r, n) {
                return new (r || (r = Promise))(function (i, o) {
                    function s(t) {
                        try {
                            l(n.next(t))
                        } catch (t) {
                            o(t)
                        }
                    }
                    function a(t) {
                        try {
                            l(n.throw(t))
                        } catch (t) {
                            o(t)
                        }
                    }
                    function l(t) {
                        var e;
                        t.done ? i(t.value) : ((e = t.value) instanceof r ? e : new r(function (t) {
                            t(e)
                        }
                        )).then(s, a)
                    }
                    l((n = n.apply(t, e || [])).next())
                }
                )
            };
        let s = new i.Yd("abstract-signer/5.7.0")
            , a = ["accessList", "ccipReadEnabled", "chainId", "customData", "data", "from", "gasLimit", "gasPrice", "maxFeePerGas", "maxPriorityFeePerGas", "nonce", "to", "type", "value"]
            , l = [i.Yd.errors.INSUFFICIENT_FUNDS, i.Yd.errors.NONCE_EXPIRED, i.Yd.errors.REPLACEMENT_UNDERPRICED];
        class u {
            constructor() {
                s.checkAbstract(new.target, u),
                    (0,
                        n.zG)(this, "_isSigner", !0)
            }
            getBalance(t) {
                return o(this, void 0, void 0, function* () {
                    return this._checkProvider("getBalance"),
                        yield this.provider.getBalance(this.getAddress(), t)
                })
            }
            getTransactionCount(t) {
                return o(this, void 0, void 0, function* () {
                    return this._checkProvider("getTransactionCount"),
                        yield this.provider.getTransactionCount(this.getAddress(), t)
                })
            }
            estimateGas(t) {
                return o(this, void 0, void 0, function* () {
                    this._checkProvider("estimateGas");
                    let e = yield (0,
                        n.mE)(this.checkTransaction(t));
                    return yield this.provider.estimateGas(e)
                })
            }
            call(t, e) {
                return o(this, void 0, void 0, function* () {
                    this._checkProvider("call");
                    let r = yield (0,
                        n.mE)(this.checkTransaction(t));
                    return yield this.provider.call(r, e)
                })
            }
            sendTransaction(t) {
                return o(this, void 0, void 0, function* () {
                    this._checkProvider("sendTransaction");
                    let e = yield this.populateTransaction(t)
                        , r = yield this.signTransaction(e);
                    return yield this.provider.sendTransaction(r)
                })
            }
            getChainId() {
                return o(this, void 0, void 0, function* () {
                    return this._checkProvider("getChainId"),
                        (yield this.provider.getNetwork()).chainId
                })
            }
            getGasPrice() {
                return o(this, void 0, void 0, function* () {
                    return this._checkProvider("getGasPrice"),
                        yield this.provider.getGasPrice()
                })
            }
            getFeeData() {
                return o(this, void 0, void 0, function* () {
                    return this._checkProvider("getFeeData"),
                        yield this.provider.getFeeData()
                })
            }
            resolveName(t) {
                return o(this, void 0, void 0, function* () {
                    return this._checkProvider("resolveName"),
                        yield this.provider.resolveName(t)
                })
            }
            checkTransaction(t) {
                for (let e in t)
                    -1 === a.indexOf(e) && s.throwArgumentError("invalid transaction key: " + e, "transaction", t);
                let e = (0,
                    n.DC)(t);
                return null == e.from ? e.from = this.getAddress() : e.from = Promise.all([Promise.resolve(e.from), this.getAddress()]).then(e => (e[0].toLowerCase() !== e[1].toLowerCase() && s.throwArgumentError("from address mismatch", "transaction", t),
                    e[0])),
                    e
            }
            populateTransaction(t) {
                return o(this, void 0, void 0, function* () {
                    let e = yield (0,
                        n.mE)(this.checkTransaction(t));
                    null != e.to && (e.to = Promise.resolve(e.to).then(t => o(this, void 0, void 0, function* () {
                        if (null == t)
                            return null;
                        let e = yield this.resolveName(t);
                        return null == e && s.throwArgumentError("provided ENS name resolves to null", "tx.to", t),
                            e
                    })),
                        e.to.catch(t => { }
                        ));
                    let r = null != e.maxFeePerGas || null != e.maxPriorityFeePerGas;
                    if (null != e.gasPrice && (2 === e.type || r) ? s.throwArgumentError("eip-1559 transaction do not support gasPrice", "transaction", t) : (0 === e.type || 1 === e.type) && r && s.throwArgumentError("pre-eip-1559 transaction do not support maxFeePerGas/maxPriorityFeePerGas", "transaction", t),
                        (2 === e.type || null == e.type) && null != e.maxFeePerGas && null != e.maxPriorityFeePerGas)
                        e.type = 2;
                    else if (0 === e.type || 1 === e.type)
                        null == e.gasPrice && (e.gasPrice = this.getGasPrice());
                    else {
                        let t = yield this.getFeeData();
                        if (null == e.type) {
                            if (null != t.maxFeePerGas && null != t.maxPriorityFeePerGas) {
                                if (e.type = 2,
                                    null != e.gasPrice) {
                                    let t = e.gasPrice;
                                    delete e.gasPrice,
                                        e.maxFeePerGas = t,
                                        e.maxPriorityFeePerGas = t
                                } else
                                    null == e.maxFeePerGas && (e.maxFeePerGas = t.maxFeePerGas),
                                        null == e.maxPriorityFeePerGas && (e.maxPriorityFeePerGas = t.maxPriorityFeePerGas)
                            } else
                                null != t.gasPrice ? (r && s.throwError("network does not support EIP-1559", i.Yd.errors.UNSUPPORTED_OPERATION, {
                                    operation: "populateTransaction"
                                }),
                                    null == e.gasPrice && (e.gasPrice = t.gasPrice),
                                    e.type = 0) : s.throwError("failed to get consistent fee data", i.Yd.errors.UNSUPPORTED_OPERATION, {
                                        operation: "signer.getFeeData"
                                    })
                        } else
                            2 === e.type && (null == e.maxFeePerGas && (e.maxFeePerGas = t.maxFeePerGas),
                                null == e.maxPriorityFeePerGas && (e.maxPriorityFeePerGas = t.maxPriorityFeePerGas))
                    }
                    return null == e.nonce && (e.nonce = this.getTransactionCount("pending")),
                        null == e.gasLimit && (e.gasLimit = this.estimateGas(e).catch(t => {
                            if (l.indexOf(t.code) >= 0)
                                throw t;
                            return s.throwError("cannot estimate gas; transaction may fail or may require manual gas limit", i.Yd.errors.UNPREDICTABLE_GAS_LIMIT, {
                                error: t,
                                tx: e
                            })
                        }
                        )),
                        null == e.chainId ? e.chainId = this.getChainId() : e.chainId = Promise.all([Promise.resolve(e.chainId), this.getChainId()]).then(e => (0 !== e[1] && e[0] !== e[1] && s.throwArgumentError("chainId address mismatch", "transaction", t),
                            e[0])),
                        yield (0,
                            n.mE)(e)
                })
            }
            _checkProvider(t) {
                this.provider || s.throwError("missing provider", i.Yd.errors.UNSUPPORTED_OPERATION, {
                    operation: t || "_checkProvider"
                })
            }
            static isSigner(t) {
                return !!(t && t._isSigner)
            }
        }
        class c extends u {
            constructor(t, e) {
                super(),
                    (0,
                        n.zG)(this, "address", t),
                    (0,
                        n.zG)(this, "provider", e || null)
            }
            getAddress() {
                return Promise.resolve(this.address)
            }
            _fail(t, e) {
                return Promise.resolve().then(() => {
                    s.throwError(t, i.Yd.errors.UNSUPPORTED_OPERATION, {
                        operation: e
                    })
                }
                )
            }
            signMessage(t) {
                return this._fail("VoidSigner cannot sign messages", "signMessage")
            }
            signTransaction(t) {
                return this._fail("VoidSigner cannot sign transactions", "signTransaction")
            }
            _signTypedData(t, e, r) {
                return this._fail("VoidSigner cannot sign typed data", "signTypedData")
            }
            connect(t) {
                return new c(this.address, t)
            }
        }
    },
    18994: function (t, e, r) {
        "use strict";
        r.d(e, {
            Kn: function () {
                return f
            },
            CR: function () {
                return m
            },
            hB: function () {
                return g
            },
            vU: function () {
                return p
            },
            UJ: function () {
                return d
            }
        });
        var n = r(57273)
            , i = r(92598)
            , o = r(14184)
            , s = r(7054);
        let a = new (r(36288)).Yd("address/5.7.0");
        function l(t) {
            (0,
                n.A7)(t, 20) || a.throwArgumentError("invalid address", "address", t);
            let e = (t = t.toLowerCase()).substring(2).split("")
                , r = new Uint8Array(40);
            for (let t = 0; t < 40; t++)
                r[t] = e[t].charCodeAt(0);
            let i = (0,
                n.lE)((0,
                    o.w)(r));
            for (let t = 0; t < 40; t += 2)
                i[t >> 1] >> 4 >= 8 && (e[t] = e[t].toUpperCase()),
                    (15 & i[t >> 1]) >= 8 && (e[t + 1] = e[t + 1].toUpperCase());
            return "0x" + e.join("")
        }
        let u = {};
        for (let t = 0; t < 10; t++)
            u[String(t)] = String(t);
        for (let t = 0; t < 26; t++)
            u[String.fromCharCode(65 + t)] = String(10 + t);
        let c = Math.floor(Math.log10 ? Math.log10(9007199254740991) : Math.log(9007199254740991) / Math.LN10);
        function h(t) {
            let e = (t = (t = t.toUpperCase()).substring(4) + t.substring(0, 2) + "00").split("").map(t => u[t]).join("");
            for (; e.length >= c;) {
                let t = e.substring(0, c);
                e = parseInt(t, 10) % 97 + e.substring(t.length)
            }
            let r = String(98 - parseInt(e, 10) % 97);
            for (; r.length < 2;)
                r = "0" + r;
            return r
        }
        function f(t) {
            let e = null;
            if ("string" != typeof t && a.throwArgumentError("invalid address", "address", t),
                t.match(/^(0x)?[0-9a-fA-F]{40}$/))
                "0x" !== t.substring(0, 2) && (t = "0x" + t),
                    e = l(t),
                    t.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && e !== t && a.throwArgumentError("bad address checksum", "address", t);
            else if (t.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {
                for (t.substring(2, 4) !== h(t) && a.throwArgumentError("bad icap checksum", "address", t),
                    e = (0,
                        i.g$)(t.substring(4)); e.length < 40;)
                    e = "0" + e;
                e = l("0x" + e)
            } else
                a.throwArgumentError("invalid address", "address", t);
            return e
        }
        function d(t) {
            try {
                return f(t),
                    !0
            } catch (t) { }
            return !1
        }
        function p(t) {
            let e = (0,
                i.t2)(f(t).substring(2)).toUpperCase();
            for (; e.length < 30;)
                e = "0" + e;
            return "XE" + h("XE00" + e) + e
        }
        function m(t) {
            let e = null;
            try {
                e = f(t.from)
            } catch (e) {
                a.throwArgumentError("missing from address", "transaction", t)
            }
            let r = (0,
                n.G1)((0,
                    n.lE)(i.O$.from(t.nonce).toHexString()));
            return f((0,
                n.p3)((0,
                    o.w)((0,
                        s.encode)([e, r])), 12))
        }
        function g(t, e, r) {
            return 32 !== (0,
                n.E1)(e) && a.throwArgumentError("salt must be 32 bytes", "salt", e),
                32 !== (0,
                    n.E1)(r) && a.throwArgumentError("initCodeHash must be 32 bytes", "initCodeHash", r),
                f((0,
                    n.p3)((0,
                        o.w)((0,
                            n.zo)(["0xff", f(t), e, r])), 12))
        }
    },
    72275: function (t, e, r) {
        "use strict";
        r.d(e, {
            J: function () {
                return i
            },
            c: function () {
                return o
            }
        });
        var n = r(57273);
        function i(t) {
            t = atob(t);
            let e = [];
            for (let r = 0; r < t.length; r++)
                e.push(t.charCodeAt(r));
            return (0,
                n.lE)(e)
        }
        function o(t) {
            t = (0,
                n.lE)(t);
            let e = "";
            for (let r = 0; r < t.length; r++)
                e += String.fromCharCode(t[r]);
            return btoa(e)
        }
    },
    63221: function (t, e, r) {
        "use strict";
        r.d(e, {
            eU: function () {
                return s
            }
        });
        var n = r(57273)
            , i = r(17213);
        class o {
            constructor(t) {
                (0,
                    i.zG)(this, "alphabet", t),
                    (0,
                        i.zG)(this, "base", t.length),
                    (0,
                        i.zG)(this, "_alphabetMap", {}),
                    (0,
                        i.zG)(this, "_leader", t.charAt(0));
                for (let e = 0; e < t.length; e++)
                    this._alphabetMap[t.charAt(e)] = e
            }
            encode(t) {
                let e = (0,
                    n.lE)(t);
                if (0 === e.length)
                    return "";
                let r = [0];
                for (let t = 0; t < e.length; ++t) {
                    let n = e[t];
                    for (let t = 0; t < r.length; ++t)
                        n += r[t] << 8,
                            r[t] = n % this.base,
                            n = n / this.base | 0;
                    for (; n > 0;)
                        r.push(n % this.base),
                            n = n / this.base | 0
                }
                let i = "";
                for (let t = 0; 0 === e[t] && t < e.length - 1; ++t)
                    i += this._leader;
                for (let t = r.length - 1; t >= 0; --t)
                    i += this.alphabet[r[t]];
                return i
            }
            decode(t) {
                if ("string" != typeof t)
                    throw TypeError("Expected String");
                let e = [];
                if (0 === t.length)
                    return new Uint8Array(e);
                e.push(0);
                for (let r = 0; r < t.length; r++) {
                    let n = this._alphabetMap[t[r]];
                    if (void 0 === n)
                        throw Error("Non-base" + this.base + " character");
                    let i = n;
                    for (let t = 0; t < e.length; ++t)
                        i += e[t] * this.base,
                            e[t] = 255 & i,
                            i >>= 8;
                    for (; i > 0;)
                        e.push(255 & i),
                            i >>= 8
                }
                for (let r = 0; t[r] === this._leader && r < t.length - 1; ++r)
                    e.push(0);
                return (0,
                    n.lE)(new Uint8Array(e.reverse()))
            }
        }
        new o("abcdefghijklmnopqrstuvwxyz234567");
        let s = new o("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz")
    },
    68334: function (t, e, r) {
        "use strict";
        r.d(e, {
            i: function () {
                return n
            }
        });
        let n = "bignumber/5.7.0"
    },
    92598: function (t, e, r) {
        "use strict";
        r.d(e, {
            O$: function () {
                return d
            },
            Zm: function () {
                return h
            },
            g$: function () {
                return v
            },
            t2: function () {
                return b
            }
        });
        var n = r(56662)
            , i = r.n(n)
            , o = r(57273)
            , s = r(36288)
            , a = r(68334)
            , l = i().BN;
        let u = new s.Yd(a.i)
            , c = {};
        function h(t) {
            return null != t && (d.isBigNumber(t) || "number" == typeof t && t % 1 == 0 || "string" == typeof t && !!t.match(/^-?[0-9]+$/) || (0,
                o.A7)(t) || "bigint" == typeof t || (0,
                    o._t)(t))
        }
        let f = !1;
        class d {
            constructor(t, e) {
                t !== c && u.throwError("cannot call constructor directly; use BigNumber.from", s.Yd.errors.UNSUPPORTED_OPERATION, {
                    operation: "new (BigNumber)"
                }),
                    this._hex = e,
                    this._isBigNumber = !0,
                    Object.freeze(this)
            }
            fromTwos(t) {
                return m(g(this).fromTwos(t))
            }
            toTwos(t) {
                return m(g(this).toTwos(t))
            }
            abs() {
                return "-" === this._hex[0] ? d.from(this._hex.substring(1)) : this
            }
            add(t) {
                return m(g(this).add(g(t)))
            }
            sub(t) {
                return m(g(this).sub(g(t)))
            }
            div(t) {
                return d.from(t).isZero() && y("division-by-zero", "div"),
                    m(g(this).div(g(t)))
            }
            mul(t) {
                return m(g(this).mul(g(t)))
            }
            mod(t) {
                let e = g(t);
                return e.isNeg() && y("division-by-zero", "mod"),
                    m(g(this).umod(e))
            }
            pow(t) {
                let e = g(t);
                return e.isNeg() && y("negative-power", "pow"),
                    m(g(this).pow(e))
            }
            and(t) {
                let e = g(t);
                return (this.isNegative() || e.isNeg()) && y("unbound-bitwise-result", "and"),
                    m(g(this).and(e))
            }
            or(t) {
                let e = g(t);
                return (this.isNegative() || e.isNeg()) && y("unbound-bitwise-result", "or"),
                    m(g(this).or(e))
            }
            xor(t) {
                let e = g(t);
                return (this.isNegative() || e.isNeg()) && y("unbound-bitwise-result", "xor"),
                    m(g(this).xor(e))
            }
            mask(t) {
                return (this.isNegative() || t < 0) && y("negative-width", "mask"),
                    m(g(this).maskn(t))
            }
            shl(t) {
                return (this.isNegative() || t < 0) && y("negative-width", "shl"),
                    m(g(this).shln(t))
            }
            shr(t) {
                return (this.isNegative() || t < 0) && y("negative-width", "shr"),
                    m(g(this).shrn(t))
            }
            eq(t) {
                return g(this).eq(g(t))
            }
            lt(t) {
                return g(this).lt(g(t))
            }
            lte(t) {
                return g(this).lte(g(t))
            }
            gt(t) {
                return g(this).gt(g(t))
            }
            gte(t) {
                return g(this).gte(g(t))
            }
            isNegative() {
                return "-" === this._hex[0]
            }
            isZero() {
                return g(this).isZero()
            }
            toNumber() {
                try {
                    return g(this).toNumber()
                } catch (t) {
                    y("overflow", "toNumber", this.toString())
                }
                return null
            }
            toBigInt() {
                try {
                    return BigInt(this.toString())
                } catch (t) { }
                return u.throwError("this platform does not support BigInt", s.Yd.errors.UNSUPPORTED_OPERATION, {
                    value: this.toString()
                })
            }
            toString() {
                return arguments.length > 0 && (10 === arguments[0] ? f || (f = !0,
                    u.warn("BigNumber.toString does not accept any parameters; base-10 is assumed")) : 16 === arguments[0] ? u.throwError("BigNumber.toString does not accept any parameters; use bigNumber.toHexString()", s.Yd.errors.UNEXPECTED_ARGUMENT, {}) : u.throwError("BigNumber.toString does not accept parameters", s.Yd.errors.UNEXPECTED_ARGUMENT, {})),
                    g(this).toString(10)
            }
            toHexString() {
                return this._hex
            }
            toJSON(t) {
                return {
                    type: "BigNumber",
                    hex: this.toHexString()
                }
            }
            static from(t) {
                if (t instanceof d)
                    return t;
                if ("string" == typeof t)
                    return t.match(/^-?0x[0-9a-f]+$/i) ? new d(c, p(t)) : t.match(/^-?[0-9]+$/) ? new d(c, p(new l(t))) : u.throwArgumentError("invalid BigNumber string", "value", t);
                if ("number" == typeof t)
                    return t % 1 && y("underflow", "BigNumber.from", t),
                        (t >= 9007199254740991 || t <= -9007199254740991) && y("overflow", "BigNumber.from", t),
                        d.from(String(t));
                if ("bigint" == typeof t)
                    return d.from(t.toString());
                if ((0,
                    o._t)(t))
                    return d.from((0,
                        o.Dv)(t));
                if (t) {
                    if (t.toHexString) {
                        let e = t.toHexString();
                        if ("string" == typeof e)
                            return d.from(e)
                    } else {
                        let e = t._hex;
                        if (null == e && "BigNumber" === t.type && (e = t.hex),
                            "string" == typeof e && ((0,
                                o.A7)(e) || "-" === e[0] && (0,
                                    o.A7)(e.substring(1))))
                            return d.from(e)
                    }
                }
                return u.throwArgumentError("invalid BigNumber value", "value", t)
            }
            static isBigNumber(t) {
                return !!(t && t._isBigNumber)
            }
        }
        function p(t) {
            if ("string" != typeof t)
                return p(t.toString(16));
            if ("-" === t[0])
                return ("-" === (t = t.substring(1))[0] && u.throwArgumentError("invalid hex", "value", t),
                    "0x00" === (t = p(t))) ? t : "-" + t;
            if ("0x" !== t.substring(0, 2) && (t = "0x" + t),
                "0x" === t)
                return "0x00";
            for (t.length % 2 && (t = "0x0" + t.substring(2)); t.length > 4 && "0x00" === t.substring(0, 4);)
                t = "0x" + t.substring(4);
            return t
        }
        function m(t) {
            return d.from(p(t))
        }
        function g(t) {
            let e = d.from(t).toHexString();
            return "-" === e[0] ? new l("-" + e.substring(3), 16) : new l(e.substring(2), 16)
        }
        function y(t, e, r) {
            let n = {
                fault: t,
                operation: e
            };
            return null != r && (n.value = r),
                u.throwError(t, s.Yd.errors.NUMERIC_FAULT, n)
        }
        function v(t) {
            return new l(t, 36).toString(16)
        }
        function b(t) {
            return new l(t, 16).toString(36)
        }
    },
    84844: function (t, e, r) {
        "use strict";
        r.d(e, {
            Ox: function () {
                return m
            },
            S5: function () {
                return p
            },
            xs: function () {
                return y
            }
        });
        var n = r(57273)
            , i = r(36288)
            , o = r(68334)
            , s = r(92598);
        let a = new i.Yd(o.i)
            , l = {}
            , u = s.O$.from(0)
            , c = s.O$.from(-1);
        function h(t, e, r, n) {
            let o = {
                fault: e,
                operation: r
            };
            return void 0 !== n && (o.value = n),
                a.throwError(t, i.Yd.errors.NUMERIC_FAULT, o)
        }
        let f = "0";
        for (; f.length < 256;)
            f += f;
        function d(t) {
            if ("number" != typeof t)
                try {
                    t = s.O$.from(t).toNumber()
                } catch (t) { }
            return "number" == typeof t && t >= 0 && t <= 256 && !(t % 1) ? "1" + f.substring(0, t) : a.throwArgumentError("invalid decimal size", "decimals", t)
        }
        function p(t, e) {
            null == e && (e = 0);
            let r = d(e)
                , n = (t = s.O$.from(t)).lt(u);
            n && (t = t.mul(c));
            let i = t.mod(r).toString();
            for (; i.length < r.length - 1;)
                i = "0" + i;
            i = i.match(/^([0-9]*[1-9]|0)(0*)/)[1];
            let o = t.div(r).toString();
            return t = 1 === r.length ? o : o + "." + i,
                n && (t = "-" + t),
                t
        }
        function m(t, e) {
            null == e && (e = 0);
            let r = d(e);
            "string" == typeof t && t.match(/^-?[0-9.]+$/) || a.throwArgumentError("invalid decimal value", "value", t);
            let n = "-" === t.substring(0, 1);
            n && (t = t.substring(1)),
                "." === t && a.throwArgumentError("missing value", "value", t);
            let i = t.split(".");
            i.length > 2 && a.throwArgumentError("too many decimal points", "value", t);
            let o = i[0]
                , l = i[1];
            for (o || (o = "0"),
                l || (l = "0"); "0" === l[l.length - 1];)
                l = l.substring(0, l.length - 1);
            for (l.length > r.length - 1 && h("fractional component exceeds decimals", "underflow", "parseFixed"),
                "" === l && (l = "0"); l.length < r.length - 1;)
                l += "0";
            let u = s.O$.from(o)
                , f = s.O$.from(l)
                , p = u.mul(r).add(f);
            return n && (p = p.mul(c)),
                p
        }
        class g {
            constructor(t, e, r, n) {
                t !== l && a.throwError("cannot use FixedFormat constructor; use FixedFormat.from", i.Yd.errors.UNSUPPORTED_OPERATION, {
                    operation: "new FixedFormat"
                }),
                    this.signed = e,
                    this.width = r,
                    this.decimals = n,
                    this.name = (e ? "" : "u") + "fixed" + String(r) + "x" + String(n),
                    this._multiplier = d(n),
                    Object.freeze(this)
            }
            static from(t) {
                if (t instanceof g)
                    return t;
                "number" == typeof t && (t = `fixed128x${t}`);
                let e = !0
                    , r = 128
                    , n = 18;
                if ("string" == typeof t) {
                    if ("fixed" === t)
                        ;
                    else if ("ufixed" === t)
                        e = !1;
                    else {
                        let i = t.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);
                        i || a.throwArgumentError("invalid fixed format", "format", t),
                            e = "u" !== i[1],
                            r = parseInt(i[2]),
                            n = parseInt(i[3])
                    }
                } else if (t) {
                    let i = (e, r, n) => null == t[e] ? n : (typeof t[e] !== r && a.throwArgumentError("invalid fixed format (" + e + " not " + r + ")", "format." + e, t[e]),
                        t[e]);
                    e = i("signed", "boolean", e),
                        r = i("width", "number", r),
                        n = i("decimals", "number", n)
                }
                return r % 8 && a.throwArgumentError("invalid fixed format width (not byte aligned)", "format.width", r),
                    n > 80 && a.throwArgumentError("invalid fixed format (decimals too large)", "format.decimals", n),
                    new g(l, e, r, n)
            }
        }
        class y {
            constructor(t, e, r, n) {
                t !== l && a.throwError("cannot use FixedNumber constructor; use FixedNumber.from", i.Yd.errors.UNSUPPORTED_OPERATION, {
                    operation: "new FixedFormat"
                }),
                    this.format = n,
                    this._hex = e,
                    this._value = r,
                    this._isFixedNumber = !0,
                    Object.freeze(this)
            }
            _checkFormat(t) {
                this.format.name !== t.format.name && a.throwArgumentError("incompatible format; use fixedNumber.toFormat", "other", t)
            }
            addUnsafe(t) {
                this._checkFormat(t);
                let e = m(this._value, this.format.decimals)
                    , r = m(t._value, t.format.decimals);
                return y.fromValue(e.add(r), this.format.decimals, this.format)
            }
            subUnsafe(t) {
                this._checkFormat(t);
                let e = m(this._value, this.format.decimals)
                    , r = m(t._value, t.format.decimals);
                return y.fromValue(e.sub(r), this.format.decimals, this.format)
            }
            mulUnsafe(t) {
                this._checkFormat(t);
                let e = m(this._value, this.format.decimals)
                    , r = m(t._value, t.format.decimals);
                return y.fromValue(e.mul(r).div(this.format._multiplier), this.format.decimals, this.format)
            }
            divUnsafe(t) {
                this._checkFormat(t);
                let e = m(this._value, this.format.decimals)
                    , r = m(t._value, t.format.decimals);
                return y.fromValue(e.mul(this.format._multiplier).div(r), this.format.decimals, this.format)
            }
            floor() {
                let t = this.toString().split(".");
                1 === t.length && t.push("0");
                let e = y.from(t[0], this.format)
                    , r = !t[1].match(/^(0*)$/);
                return this.isNegative() && r && (e = e.subUnsafe(v.toFormat(e.format))),
                    e
            }
            ceiling() {
                let t = this.toString().split(".");
                1 === t.length && t.push("0");
                let e = y.from(t[0], this.format)
                    , r = !t[1].match(/^(0*)$/);
                return !this.isNegative() && r && (e = e.addUnsafe(v.toFormat(e.format))),
                    e
            }
            round(t) {
                null == t && (t = 0);
                let e = this.toString().split(".");
                if (1 === e.length && e.push("0"),
                    (t < 0 || t > 80 || t % 1) && a.throwArgumentError("invalid decimal count", "decimals", t),
                    e[1].length <= t)
                    return this;
                let r = y.from("1" + f.substring(0, t), this.format)
                    , n = b.toFormat(this.format);
                return this.mulUnsafe(r).addUnsafe(n).floor().divUnsafe(r)
            }
            isZero() {
                return "0.0" === this._value || "0" === this._value
            }
            isNegative() {
                return "-" === this._value[0]
            }
            toString() {
                return this._value
            }
            toHexString(t) {
                if (null == t)
                    return this._hex;
                t % 8 && a.throwArgumentError("invalid byte width", "width", t);
                let e = s.O$.from(this._hex).fromTwos(this.format.width).toTwos(t).toHexString();
                return (0,
                    n.$m)(e, t / 8)
            }
            toUnsafeFloat() {
                return parseFloat(this.toString())
            }
            toFormat(t) {
                return y.fromString(this._value, t)
            }
            static fromValue(t, e, r) {
                return null != r || null == e || (0,
                    s.Zm)(e) || (r = e,
                        e = null),
                    null == e && (e = 0),
                    null == r && (r = "fixed"),
                    y.fromString(p(t, e), g.from(r))
            }
            static fromString(t, e) {
                null == e && (e = "fixed");
                let r = g.from(e)
                    , i = m(t, r.decimals);
                !r.signed && i.lt(u) && h("unsigned value cannot be negative", "overflow", "value", t);
                let o = null;
                return r.signed ? o = i.toTwos(r.width).toHexString() : (o = i.toHexString(),
                    o = (0,
                        n.$m)(o, r.width / 8)),
                    new y(l, o, p(i, r.decimals), r)
            }
            static fromBytes(t, e) {
                null == e && (e = "fixed");
                let r = g.from(e);
                if ((0,
                    n.lE)(t).length > r.width / 8)
                    throw Error("overflow");
                let i = s.O$.from(t);
                return r.signed && (i = i.fromTwos(r.width)),
                    new y(l, i.toTwos((r.signed ? 0 : 1) + r.width).toHexString(), p(i, r.decimals), r)
            }
            static from(t, e) {
                if ("string" == typeof t)
                    return y.fromString(t, e);
                if ((0,
                    n._t)(t))
                    return y.fromBytes(t, e);
                try {
                    return y.fromValue(t, 0, e)
                } catch (t) {
                    if (t.code !== i.Yd.errors.INVALID_ARGUMENT)
                        throw t
                }
                return a.throwArgumentError("invalid FixedNumber value", "value", t)
            }
            static isFixedNumber(t) {
                return !!(t && t._isFixedNumber)
            }
        }
        let v = y.from(1)
            , b = y.from("0.5")
    },
    57273: function (t, e, r) {
        "use strict";
        r.d(e, {
            lE: function () {
                return u
            },
            zo: function () {
                return c
            },
            xs: function () {
                return v
            },
            E1: function () {
                return g
            },
            p3: function () {
                return y
            },
            Ou: function () {
                return w
            },
            $P: function () {
                return b
            },
            $m: function () {
                return E
            },
            Dv: function () {
                return m
            },
            _t: function () {
                return l
            },
            Zq: function () {
                return s
            },
            A7: function () {
                return d
            },
            gV: function () {
                return _
            },
            N: function () {
                return A
            },
            G1: function () {
                return h
            },
            Bu: function () {
                return f
            }
        });
        let n = new (r(36288)).Yd("bytes/5.7.0");
        function i(t) {
            return !!t.toHexString
        }
        function o(t) {
            return t.slice || (t.slice = function () {
                let e = Array.prototype.slice.call(arguments);
                return o(new Uint8Array(Array.prototype.slice.apply(t, e)))
            }
            ),
                t
        }
        function s(t) {
            return d(t) && !(t.length % 2) || l(t)
        }
        function a(t) {
            return "number" == typeof t && t == t && t % 1 == 0
        }
        function l(t) {
            if (null == t)
                return !1;
            if (t.constructor === Uint8Array)
                return !0;
            if ("string" == typeof t || !a(t.length) || t.length < 0)
                return !1;
            for (let e = 0; e < t.length; e++) {
                let r = t[e];
                if (!a(r) || r < 0 || r >= 256)
                    return !1
            }
            return !0
        }
        function u(t, e) {
            if (e || (e = {}),
                "number" == typeof t) {
                n.checkSafeUint53(t, "invalid arrayify value");
                let e = [];
                for (; t;)
                    e.unshift(255 & t),
                        t = parseInt(String(t / 256));
                return 0 === e.length && e.push(0),
                    o(new Uint8Array(e))
            }
            if (e.allowMissingPrefix && "string" == typeof t && "0x" !== t.substring(0, 2) && (t = "0x" + t),
                i(t) && (t = t.toHexString()),
                d(t)) {
                let r = t.substring(2);
                r.length % 2 && ("left" === e.hexPad ? r = "0" + r : "right" === e.hexPad ? r += "0" : n.throwArgumentError("hex data is odd-length", "value", t));
                let i = [];
                for (let t = 0; t < r.length; t += 2)
                    i.push(parseInt(r.substring(t, t + 2), 16));
                return o(new Uint8Array(i))
            }
            return l(t) ? o(new Uint8Array(t)) : n.throwArgumentError("invalid arrayify value", "value", t)
        }
        function c(t) {
            let e = t.map(t => u(t))
                , r = e.reduce((t, e) => t + e.length, 0)
                , n = new Uint8Array(r);
            return e.reduce((t, e) => (n.set(e, t),
                t + e.length), 0),
                o(n)
        }
        function h(t) {
            let e = u(t);
            if (0 === e.length)
                return e;
            let r = 0;
            for (; r < e.length && 0 === e[r];)
                r++;
            return r && (e = e.slice(r)),
                e
        }
        function f(t, e) {
            (t = u(t)).length > e && n.throwArgumentError("value out of range", "value", arguments[0]);
            let r = new Uint8Array(e);
            return r.set(t, e - t.length),
                o(r)
        }
        function d(t, e) {
            return "string" == typeof t && !!t.match(/^0x[0-9A-Fa-f]*$/) && (!e || t.length === 2 + 2 * e)
        }
        let p = "0123456789abcdef";
        function m(t, e) {
            if (e || (e = {}),
                "number" == typeof t) {
                n.checkSafeUint53(t, "invalid hexlify value");
                let e = "";
                for (; t;)
                    e = p[15 & t] + e,
                        t = Math.floor(t / 16);
                return e.length ? (e.length % 2 && (e = "0" + e),
                    "0x" + e) : "0x00"
            }
            if ("bigint" == typeof t)
                return (t = t.toString(16)).length % 2 ? "0x0" + t : "0x" + t;
            if (e.allowMissingPrefix && "string" == typeof t && "0x" !== t.substring(0, 2) && (t = "0x" + t),
                i(t))
                return t.toHexString();
            if (d(t))
                return t.length % 2 && ("left" === e.hexPad ? t = "0x0" + t.substring(2) : "right" === e.hexPad ? t += "0" : n.throwArgumentError("hex data is odd-length", "value", t)),
                    t.toLowerCase();
            if (l(t)) {
                let e = "0x";
                for (let r = 0; r < t.length; r++) {
                    let n = t[r];
                    e += p[(240 & n) >> 4] + p[15 & n]
                }
                return e
            }
            return n.throwArgumentError("invalid hexlify value", "value", t)
        }
        function g(t) {
            if ("string" != typeof t)
                t = m(t);
            else if (!d(t) || t.length % 2)
                return null;
            return (t.length - 2) / 2
        }
        function y(t, e, r) {
            return ("string" != typeof t ? t = m(t) : (!d(t) || t.length % 2) && n.throwArgumentError("invalid hexData", "value", t),
                e = 2 + 2 * e,
                null != r) ? "0x" + t.substring(e, 2 + 2 * r) : "0x" + t.substring(e)
        }
        function v(t) {
            let e = "0x";
            return t.forEach(t => {
                e += m(t).substring(2)
            }
            ),
                e
        }
        function b(t) {
            let e = w(m(t, {
                hexPad: "left"
            }));
            return "0x" === e ? "0x0" : e
        }
        function w(t) {
            "string" != typeof t && (t = m(t)),
                d(t) || n.throwArgumentError("invalid hex string", "value", t),
                t = t.substring(2);
            let e = 0;
            for (; e < t.length && "0" === t[e];)
                e++;
            return "0x" + t.substring(e)
        }
        function E(t, e) {
            for ("string" != typeof t ? t = m(t) : d(t) || n.throwArgumentError("invalid hex string", "value", t),
                t.length > 2 * e + 2 && n.throwArgumentError("value out of range", "value", arguments[1]); t.length < 2 * e + 2;)
                t = "0x0" + t.substring(2);
            return t
        }
        function A(t) {
            let e = {
                r: "0x",
                s: "0x",
                _vs: "0x",
                recoveryParam: 0,
                v: 0,
                yParityAndS: "0x",
                compact: "0x"
            };
            if (s(t)) {
                let r = u(t);
                64 === r.length ? (e.v = 27 + (r[32] >> 7),
                    r[32] &= 127,
                    e.r = m(r.slice(0, 32)),
                    e.s = m(r.slice(32, 64))) : 65 === r.length ? (e.r = m(r.slice(0, 32)),
                        e.s = m(r.slice(32, 64)),
                        e.v = r[64]) : n.throwArgumentError("invalid signature string", "signature", t),
                    e.v < 27 && (0 === e.v || 1 === e.v ? e.v += 27 : n.throwArgumentError("signature invalid v byte", "signature", t)),
                    e.recoveryParam = 1 - e.v % 2,
                    e.recoveryParam && (r[32] |= 128),
                    e._vs = m(r.slice(32, 64))
            } else {
                if (e.r = t.r,
                    e.s = t.s,
                    e.v = t.v,
                    e.recoveryParam = t.recoveryParam,
                    e._vs = t._vs,
                    null != e._vs) {
                    let r = f(u(e._vs), 32);
                    e._vs = m(r);
                    let i = r[0] >= 128 ? 1 : 0;
                    null == e.recoveryParam ? e.recoveryParam = i : e.recoveryParam !== i && n.throwArgumentError("signature recoveryParam mismatch _vs", "signature", t),
                        r[0] &= 127;
                    let o = m(r);
                    null == e.s ? e.s = o : e.s !== o && n.throwArgumentError("signature v mismatch _vs", "signature", t)
                }
                if (null == e.recoveryParam)
                    null == e.v ? n.throwArgumentError("signature missing v and recoveryParam", "signature", t) : 0 === e.v || 1 === e.v ? e.recoveryParam = e.v : e.recoveryParam = 1 - e.v % 2;
                else if (null == e.v)
                    e.v = 27 + e.recoveryParam;
                else {
                    let r = 0 === e.v || 1 === e.v ? e.v : 1 - e.v % 2;
                    e.recoveryParam !== r && n.throwArgumentError("signature recoveryParam mismatch v", "signature", t)
                }
                null != e.r && d(e.r) ? e.r = E(e.r, 32) : n.throwArgumentError("signature missing or invalid r", "signature", t),
                    null != e.s && d(e.s) ? e.s = E(e.s, 32) : n.throwArgumentError("signature missing or invalid s", "signature", t);
                let r = u(e.s);
                r[0] >= 128 && n.throwArgumentError("signature s out of range", "signature", t),
                    e.recoveryParam && (r[0] |= 128);
                let i = m(r);
                e._vs && (d(e._vs) || n.throwArgumentError("signature invalid _vs", "signature", t),
                    e._vs = E(e._vs, 32)),
                    null == e._vs ? e._vs = i : e._vs !== i && n.throwArgumentError("signature _vs mismatch v and s", "signature", t)
            }
            return e.yParityAndS = e._vs,
                e.compact = e.r + e.yParityAndS.substring(2),
                e
        }
        function _(t) {
            return m(c([(t = A(t)).r, t.s, t.recoveryParam ? "0x1c" : "0x1b"]))
        }
    },
    5572: function (t, e, r) {
        "use strict";
        r.d(e, {
            d: function () {
                return n
            }
        });
        let n = "0x0000000000000000000000000000000000000000"
    },
    53690: function (t, e, r) {
        "use strict";
        r.d(e, {
            $B: function () {
                return c
            },
            Bz: function () {
                return u
            },
            Ce: function () {
                return l
            },
            PS: function () {
                return h
            },
            Py: function () {
                return a
            },
            _Y: function () {
                return o
            },
            fh: function () {
                return s
            },
            tL: function () {
                return i
            }
        });
        var n = r(92598);
        let i = n.O$.from(-1)
            , o = n.O$.from(0)
            , s = n.O$.from(1)
            , a = n.O$.from(2)
            , l = n.O$.from("1000000000000000000")
            , u = n.O$.from("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff")
            , c = n.O$.from("-0x8000000000000000000000000000000000000000000000000000000000000000")
            , h = n.O$.from("0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff")
    },
    76726: function (t, e, r) {
        "use strict";
        r.d(e, {
            R: function () {
                return n
            }
        });
        let n = "0x0000000000000000000000000000000000000000000000000000000000000000"
    },
    10996: function (t, e, r) {
        "use strict";
        r.d(e, {
            i: function () {
                return n
            }
        });
        let n = "hash/5.7.0"
    },
    36339: function (t, e, r) {
        "use strict";
        r.d(e, {
            id: function () {
                return o
            }
        });
        var n = r(14184)
            , i = r(58337);
        function o(t) {
            return (0,
                n.w)((0,
                    i.Y0)(t))
        }
    },
    66007: function (t, e, r) {
        "use strict";
        let n, i;
        r.d(e, {
            Kn: function () {
                return C
            },
            r1: function () {
                return P
            },
            VM: function () {
                return N
            }
        });
        var o, s = r(57273), a = r(58337), l = r(14184), u = r(36288), c = r(10996);
        function h(t, e) {
            null == e && (e = 1);
            let r = []
                , n = r.forEach
                , i = function (t, e) {
                    n.call(t, function (t) {
                        e > 0 && Array.isArray(t) ? i(t, e - 1) : r.push(t)
                    })
                };
            return i(t, e),
                r
        }
        function f(t, e) {
            let r = Array(t);
            for (let n = 0, i = -1; n < t; n++)
                r[n] = i += 1 + e();
            return r
        }
        function d(t, e) {
            let r = f(t(), t)
                , n = t()
                , i = f(n, t)
                , o = function (t, e) {
                    let r = Array(t);
                    for (let n = 0; n < t; n++)
                        r[n] = 1 + e();
                    return r
                }(n, t);
            for (let t = 0; t < n; t++)
                for (let e = 0; e < o[t]; e++)
                    r.push(i[t] + e);
            return e ? r.map(t => e[t]) : r
        }
        function p(t, e, r) {
            let n = Array(t).fill(void 0).map(() => []);
            for (let i = 0; i < e; i++)
                (function (t, e) {
                    let r = Array(t);
                    for (let i = 0, o = 0; i < t; i++) {
                        var n;
                        r[i] = o += 1 & (n = e()) ? ~n >> 1 : n >> 1
                    }
                    return r
                }
                )(t, r).forEach((t, e) => n[e].push(t));
            return n
        }
        let m = (o = function (t) {
            let e = 0;
            function r() {
                return t[e++] << 8 | t[e++]
            }
            let n = r()
                , i = 1
                , o = [0, 1];
            for (let t = 1; t < n; t++)
                o.push(i += r());
            let s = r()
                , a = e;
            e += s;
            let l = 0
                , u = 0;
            function c() {
                return 0 == l && (u = u << 8 | t[e++],
                    l = 8),
                    u >> --l & 1
            }
            let h = 0;
            for (let t = 0; t < 31; t++)
                h = h << 1 | c();
            let f = []
                , d = 0
                , p = 2147483648;
            for (; ;) {
                let t = Math.floor(((h - d + 1) * i - 1) / p)
                    , e = 0
                    , r = n;
                for (; r - e > 1;) {
                    let n = e + r >>> 1;
                    t < o[n] ? r = n : e = n
                }
                if (0 == e)
                    break;
                f.push(e);
                let s = d + Math.floor(p * o[e] / i)
                    , a = d + Math.floor(p * o[e + 1] / i) - 1;
                for (; ((s ^ a) & 1073741824) == 0;)
                    h = h << 1 & 2147483647 | c(),
                        s = s << 1 & 2147483647,
                        a = a << 1 & 2147483647 | 1;
                for (; s & ~a & 536870912;)
                    h = 1073741824 & h | h << 1 & 1073741823 | c(),
                        s = s << 1 ^ 1073741824,
                        a = (1073741824 ^ a) << 1 | 1073741825;
                d = s,
                    p = 1 + a - s
            }
            let m = n - 4;
            return f.map(e => {
                switch (e - m) {
                    case 3:
                        return m + 65792 + (t[a++] << 16 | t[a++] << 8 | t[a++]);
                    case 2:
                        return m + 256 + (t[a++] << 8 | t[a++]);
                    case 1:
                        return m + t[a++];
                    default:
                        return e - 1
                }
            }
            )
        }((0,
            r(72275).J)("AEQF2AO2DEsA2wIrAGsBRABxAN8AZwCcAEwAqgA0AGwAUgByADcATAAVAFYAIQAyACEAKAAYAFgAGwAjABQAMAAmADIAFAAfABQAKwATACoADgAbAA8AHQAYABoAGQAxADgALAAoADwAEwA9ABMAGgARAA4ADwAWABMAFgAIAA8AHgQXBYMA5BHJAS8JtAYoAe4AExozi0UAH21tAaMnBT8CrnIyhrMDhRgDygIBUAEHcoFHUPe8AXBjAewCjgDQR8IICIcEcQLwATXCDgzvHwBmBoHNAqsBdBcUAykgDhAMShskMgo8AY8jqAQfAUAfHw8BDw87MioGlCIPBwZCa4ELatMAAMspJVgsDl8AIhckSg8XAHdvTwBcIQEiDT4OPhUqbyECAEoAS34Aej8Ybx83JgT/Xw8gHxZ/7w8RICxPHA9vBw+Pfw8PHwAPFv+fAsAvCc8vEr8ivwD/EQ8Bol8OEBa/A78hrwAPCU8vESNvvwWfHwNfAVoDHr+ZAAED34YaAdJPAK7PLwSEgDLHAGo1Pz8Pvx9fUwMrpb8O/58VTzAPIBoXIyQJNF8hpwIVAT8YGAUADDNBaX3RAMomJCg9EhUeA29MABsZBTMNJipjOhc19gcIDR8bBwQHEggCWi6DIgLuAQYA+BAFCha3A5XiAEsqM7UFFgFLhAMjFTMYE1Klnw74nRVBG/ASCm0BYRN/BrsU3VoWy+S0vV8LQx+vN8gF2AC2AK5EAWwApgYDKmAAroQ0NDQ0AT+OCg7wAAIHRAbpNgVcBV0APTA5BfbPFgMLzcYL/QqqA82eBALKCjQCjqYCht0/k2+OAsXQAoP3ASTKDgDw6ACKAUYCMpIKJpRaAE4A5womABzZvs0REEKiACIQAd5QdAECAj4Ywg/wGqY2AVgAYADYvAoCGAEubA0gvAY2ALAAbpbvqpyEAGAEpgQAJgAG7gAgAEACmghUFwCqAMpAINQIwC4DthRAAPcycKgApoIdABwBfCisABoATwBqASIAvhnSBP8aH/ECeAKXAq40NjgDBTwFYQU6AXs3oABgAD4XNgmcCY1eCl5tIFZeUqGgyoNHABgAEQAaABNwWQAmABMATPMa3T34ADldyprmM1M2XociUQgLzvwAXT3xABgAEQAaABNwIGFAnADD8AAgAD4BBJWzaCcIAIEBFMAWwKoAAdq9BWAF5wLQpALEtQAKUSGkahR4GnJM+gsAwCgeFAiUAECQ0BQuL8AAIAAAADKeIheclvFqQAAETr4iAMxIARMgAMIoHhQIAn0E0pDQFC4HhznoAAAAIAI2C0/4lvFqQAAETgBJJwYCAy4ABgYAFAA8MBKYEH4eRhTkAjYeFcgACAYAeABsOqyQ5gRwDayqugEgaIIAtgoACgDmEABmBAWGme5OBJJA2m4cDeoAmITWAXwrMgOgAGwBCh6CBXYF1Tzg1wKAAFdiuABRAFwAXQBsAG8AdgBrAHYAbwCEAHEwfxQBVE5TEQADVFhTBwBDANILAqcCzgLTApQCrQL6vAAMAL8APLhNBKkE6glGKTAU4Dr4N2EYEwBCkABKk8rHAbYBmwIoAiU4Ajf/Aq4CowCAANIChzgaNBsCsTgeODcFXrgClQKdAqQBiQGYAqsCsjTsNHsfNPA0ixsAWTWiOAMFPDQSNCk2BDZHNow2TTZUNhk28Jk9VzI3QkEoAoICoQKwAqcAQAAxBV4FXbS9BW47YkIXP1ciUqs05DS/FwABUwJW11e6nHuYZmSh/RAYA8oMKvZ8KASoUAJYWAJ6ILAsAZSoqjpgA0ocBIhmDgDWAAawRDQoAAcuAj5iAHABZiR2AIgiHgCaAU68ACxuHAG0ygM8MiZIAlgBdF4GagJqAPZOHAMuBgoATkYAsABiAHgAMLoGDPj0HpKEBAAOJgAuALggTAHWAeAMEDbd20Uege0ADwAWADkAQgA9OHd+2MUQZBBhBgNNDkxxPxUQArEPqwvqERoM1irQ090ANK4H8ANYB/ADWANYB/AH8ANYB/ADWANYA1gDWBwP8B/YxRBkD00EcgWTBZAE2wiIJk4RhgctCNdUEnQjHEwDSgEBIypJITuYMxAlR0wRTQgIATZHbKx9PQNMMbBU+pCnA9AyVDlxBgMedhKlAC8PeCE1uk6DekxxpQpQT7NX9wBFBgASqwAS5gBJDSgAUCwGPQBI4zTYABNGAE2bAE3KAExdGABKaAbgAFBXAFCOAFBJABI2SWdObALDOq0//QomCZhvwHdTBkIQHCemEPgMNAG2ATwN7kvZBPIGPATKH34ZGg/OlZ0Ipi3eDO4m5C6igFsj9iqEBe5L9TzeC05RaQ9aC2YJ5DpkgU8DIgEOIowK3g06CG4Q9ArKbA3mEUYHOgPWSZsApgcCCxIdNhW2JhFirQsKOXgG/Br3C5AmsBMqev0F1BoiBk4BKhsAANAu6IWxWjJcHU9gBgQLJiPIFKlQIQ0mQLh4SRocBxYlqgKSQ3FKiFE3HpQh9zw+DWcuFFF9B/Y8BhlQC4I8n0asRQ8R0z6OPUkiSkwtBDaALDAnjAnQD4YMunxzAVoJIgmyDHITMhEYN8YIOgcaLpclJxYIIkaWYJsE+KAD9BPSAwwFQAlCBxQDthwuEy8VKgUOgSXYAvQ21i60ApBWgQEYBcwPJh/gEFFH4Q7qCJwCZgOEJewALhUiABginAhEZABgj9lTBi7MCMhqbSN1A2gU6GIRdAeSDlgHqBw0FcAc4nDJXgyGCSiksAlcAXYJmgFgBOQICjVcjKEgQmdUi1kYnCBiQUBd/QIyDGYVoES+h3kCjA9sEhwBNgF0BzoNAgJ4Ee4RbBCWCOyGBTW2M/k6JgRQIYQgEgooA1BszwsoJvoM+WoBpBJjAw00PnfvZ6xgtyUX/gcaMsZBYSHyC5NPzgydGsIYQ1QvGeUHwAP0GvQn60FYBgADpAQUOk4z7wS+C2oIjAlAAEoOpBgH2BhrCnKM0QEyjAG4mgNYkoQCcJAGOAcMAGgMiAV65gAeAqgIpAAGANADWAA6Aq4HngAaAIZCAT4DKDABIuYCkAOUCDLMAZYwAfQqBBzEDBYA+DhuSwLDsgKAa2ajBd5ZAo8CSjYBTiYEBk9IUgOwcuIA3ABMBhTgSAEWrEvMG+REAeBwLADIAPwABjYHBkIBzgH0bgC4AWALMgmjtLYBTuoqAIQAFmwB2AKKAN4ANgCA8gFUAE4FWvoF1AJQSgESMhksWGIBvAMgATQBDgB6BsyOpsoIIARuB9QCEBwV4gLvLwe2AgMi4BPOQsYCvd9WADIXUu5eZwqoCqdeaAC0YTQHMnM9UQAPH6k+yAdy/BZIiQImSwBQ5gBQQzSaNTFWSTYBpwGqKQK38AFtqwBI/wK37gK3rQK3sAK6280C0gK33AK3zxAAUEIAUD9SklKDArekArw5AEQAzAHCO147WTteO1k7XjtZO147WTteO1kDmChYI03AVU0oJqkKbV9GYewMpw3VRMk6ShPcYFJgMxPJLbgUwhXPJVcZPhq9JwYl5VUKDwUt1GYxCC00dhe9AEApaYNCY4ceMQpMHOhTklT5LRwAskujM7ANrRsWREEFSHXuYisWDwojAmSCAmJDXE6wXDchAqH4AmiZAmYKAp+FOBwMAmY8AmYnBG8EgAN/FAN+kzkHOXgYOYM6JCQCbB4CMjc4CwJtyAJtr/CLADRoRiwBaADfAOIASwYHmQyOAP8MwwAOtgJ3MAJ2o0ACeUxEAni7Hl3cRa9G9AJ8QAJ6yQJ9CgJ88UgBSH5kJQAsFklZSlwWGErNAtECAtDNSygDiFADh+dExpEzAvKiXQQDA69Lz0wuJgTQTU1NsAKLQAKK2cIcCB5EaAa4Ao44Ao5dQZiCAo7aAo5deVG1UzYLUtVUhgKT/AKTDQDqAB1VH1WwVdEHLBwplocy4nhnRTw6ApegAu+zWCKpAFomApaQApZ9nQCqWa1aCoJOADwClrYClk9cRVzSApnMApllXMtdCBoCnJw5wzqeApwXAp+cAp65iwAeEDIrEAKd8gKekwC2PmE1YfACntQCoG8BqgKeoCACnk+mY8lkKCYsAiewAiZ/AqD8AqBN2AKmMAKlzwKoAAB+AqfzaH1osgAESmodatICrOQCrK8CrWgCrQMCVx4CVd0CseLYAx9PbJgCsr4OArLpGGzhbWRtSWADJc4Ctl08QG6RAylGArhfArlIFgK5K3hwN3DiAr0aAy2zAzISAr6JcgMDM3ICvhtzI3NQAsPMAsMFc4N0TDZGdOEDPKgDPJsDPcACxX0CxkgCxhGKAshqUgLIRQLJUALJLwJkngLd03h6YniveSZL0QMYpGcDAmH1GfSVJXsMXpNevBICz2wCz20wTFTT9BSgAMeuAs90ASrrA04TfkwGAtwoAtuLAtJQA1JdA1NgAQIDVY2AikABzBfuYUZ2AILPg44C2sgC2d+EEYRKpz0DhqYAMANkD4ZyWvoAVgLfZgLeuXR4AuIw7RUB8zEoAfScAfLTiALr9ALpcXoAAur6AurlAPpIAboC7ooC652Wq5cEAu5AA4XhmHpw4XGiAvMEAGoDjheZlAL3FAORbwOSiAL3mQL52gL4Z5odmqy8OJsfA52EAv77ARwAOp8dn7QDBY4DpmsDptoA0sYDBmuhiaIGCgMMSgFgASACtgNGAJwEgLpoBgC8BGzAEowcggCEDC6kdjoAJAM0C5IKRoABZCgiAIzw3AYBLACkfng9ogigkgNmWAN6AEQCvrkEVqTGAwCsBRbAA+4iQkMCHR072jI2PTbUNsk2RjY5NvA23TZKNiU3EDcZN5I+RTxDRTBCJkK5VBYKFhZfwQCWygU3AJBRHpu+OytgNxa61A40GMsYjsn7BVwFXQVcBV0FaAVdBVwFXQVcBV0FXAVdBVwFXUsaCNyKAK4AAQUHBwKU7oICoW1e7jAEzgPxA+YDwgCkBFDAwADABKzAAOxFLhitA1UFTDeyPkM+bj51QkRCuwTQWWQ8X+0AWBYzsACNA8xwzAGm7EZ/QisoCTAbLDs6fnLfb8H2GccsbgFw13M1HAVkBW/Jxsm9CNRO8E8FDD0FBQw9FkcClOYCoMFegpDfADgcMiA2AJQACB8AsigKAIzIEAJKeBIApY5yPZQIAKQiHb4fvj5BKSRPQrZCOz0oXyxgOywfKAnGbgMClQaCAkILXgdeCD9IIGUgQj5fPoY+dT52Ao5CM0dAX9BTVG9SDzFwWTQAbxBzJF/lOEIQQglCCkKJIAls5AcClQICoKPMODEFxhi6KSAbiyfIRrMjtCgdWCAkPlFBIitCsEJRzAbMAV/OEyQzDg0OAQQEJ36i328/Mk9AybDJsQlq3tDRApUKAkFzXf1d/j9uALYP6hCoFgCTGD8kPsFKQiobrm0+zj0KSD8kPnVCRBwMDyJRTHFgMTJa5rwXQiQ2YfI/JD7BMEJEHGINTw4TOFlIRzwJO0icMQpyPyQ+wzJCRBv6DVgnKB01NgUKj2bwYzMqCoBkznBgEF+zYDIocwRIX+NgHj4HICNfh2C4CwdwFWpTG/lgUhYGAwRfv2Ts8mAaXzVgml/XYIJfuWC4HI1gUF9pYJZgMR6ilQHMAOwLAlDRefC0in4AXAEJA6PjCwc0IamOANMMCAECRQDFNRTZBgd+CwQlRA+r6+gLBDEFBnwUBXgKATIArwAGRAAHA3cDdAN2A3kDdwN9A3oDdQN7A30DfAN4A3oDfQAYEAAlAtYASwMAUAFsAHcKAHcAmgB3AHUAdQB2AHVu8UgAygDAAHcAdQB1AHYAdQALCgB3AAsAmgB3AAsCOwB3AAtu8UgAygDAAHgKAJoAdwB3AHUAdQB2AHUAeAB1AHUAdgB1bvFIAMoAwAALCgCaAHcACwB3AAsCOwB3AAtu8UgAygDAAH4ACwGgALcBpwC6AahdAu0COwLtbvFIAMoAwAALCgCaAu0ACwLtAAsCOwLtAAtu8UgAygDAA24ACwNvAAu0VsQAAzsAABCkjUIpAAsAUIusOggWcgMeBxVsGwL67U/2HlzmWOEeOgALASvuAAseAfpKUpnpGgYJDCIZM6YyARUE9ThqAD5iXQgnAJYJPnOzw0ZAEZxEKsIAkA4DhAHnTAIDxxUDK0lxCQlPYgIvIQVYJQBVqE1GakUAKGYiDToSBA1EtAYAXQJYAIF8GgMHRyAAIAjOe9YncekRAA0KACUrjwE7Ayc6AAYWAqaiKG4McEcqANoN3+Mg9TwCBhIkuCny+JwUQ29L008JluRxu3K+oAdqiHOqFH0AG5SUIfUJ5SxCGfxdipRzqTmT4V5Zb+r1Uo4Vm+NqSSEl2mNvR2JhIa8SpYO6ntdwFXHCWTCK8f2+Hxo7uiG3drDycAuKIMP5bhi06ACnqArH1rz4Rqg//lm6SgJGEVbF9xJHISaR6HxqxSnkw6shDnelHKNEfGUXSJRJ1GcsmtJw25xrZMDK9gXSm1/YMkdX4/6NKYOdtk/NQ3/NnDASjTc3fPjIjW/5sVfVObX2oTDWkr1dF9f3kxBsD3/3aQO8hPfRz+e0uEiJqt1161griu7gz8hDDwtpy+F+BWtefnKHZPAxcZoWbnznhJpy0e842j36bcNzGnIEusgGX0a8ZxsnjcSsPDZ09yZ36fCQbriHeQ72JRMILNl6ePPf2HWoVwgWAm1fb3V2sAY0+B6rAXqSwPBgseVmoqsBTSrm91+XasMYYySI8eeRxH3ZvHkMz3BQ5aJ3iUVbYPNM3/7emRtjlsMgv/9VyTsyt/mK+8fgWeT6SoFaclXqn42dAIsvAarF5vNNWHzKSkKQ/8Hfk5ZWK7r9yliOsooyBjRhfkHP4Q2DkWXQi6FG/9r/IwbmkV5T7JSopHKn1pJwm9tb5Ot0oyN1Z2mPpKXHTxx2nlK08fKk1hEYA8WgVVWL5lgx0iTv+KdojJeU23ZDjmiubXOxVXJKKi2Wjuh2HLZOFLiSC7Tls5SMh4f+Pj6xUSrNjFqLGehRNB8lC0QSLNmkJJx/wSG3MnjE9T1CkPwJI0wH2lfzwETIiVqUxg0dfu5q39Gt+hwdcxkhhNvQ4TyrBceof3Mhs/IxFci1HmHr4FMZgXEEczPiGCx0HRwzAqDq2j9AVm1kwN0mRVLWLylgtoPNapF5cY4Y1wJh/e0BBwZj44YgZrDNqvD/9Hv7GFYdUQeDJuQ3EWI4HaKqavU1XjC/n41kT4L79kqGq0kLhdTZvgP3TA3fS0ozVz+5piZsoOtIvBUFoMKbNcmBL6YxxaUAusHB38XrS8dQMnQwJfUUkpRoGr5AUeWicvBTzyK9g77+yCkf5PAysL7r/JjcZgrbvRpMW9iyaxZvKO6ceZN2EwIxKwVFPuvFuiEPGCoagbMo+SpydLrXqBzNCDGFCrO/rkcwa2xhokQZ5CdZ0AsU3JfSqJ6n5I14YA+P/uAgfhPU84Tlw7cEFfp7AEE8ey4sP12PTt4Cods1GRgDOB5xvyiR5m+Bx8O5nBCNctU8BevfV5A08x6RHd5jcwPTMDSZJOedIZ1cGQ704lxbAzqZOP05ZxaOghzSdvFBHYqomATARyAADK4elP8Ly3IrUZKfWh23Xy20uBUmLS4Pfagu9+oyVa2iPgqRP3F2CTUsvJ7+RYnN8fFZbU/HVvxvcFFDKkiTqV5UBZ3Gz54JAKByi9hkKMZJvuGgcSYXFmw08UyoQyVdfTD1/dMkCHXcTGAKeROgArsvmRrQTLUOXioOHGK2QkjHuoYFgXciZoTJd6Fs5q1QX1G+p/e26hYsEf7QZD1nnIyl/SFkNtYYmmBhpBrxl9WbY0YpHWRuw2Ll/tj9mD8P4snVzJl4F9J+1arVeTb9E5r2ILH04qStjxQNwn3m4YNqxmaNbLAqW2TN6LidwuJRqS+NXbtqxoeDXpxeGWmxzSkWxjkyCkX4NQRme6q5SAcC+M7+9ETfA/EwrzQajKakCwYyeunP6ZFlxU2oMEn1Pz31zeStW74G406ZJFCl1wAXIoUKkWotYEpOuXB1uVNxJ63dpJEqfxBeptwIHNrPz8BllZoIcBoXwgfJ+8VAUnVPvRvexnw0Ma/WiGYuJO5y8QTvEYBigFmhUxY5RqzE8OcywN/8m4UYrlaniJO75XQ6KSo9+tWHlu+hMi0UVdiKQp7NelnoZUzNaIyBPVeOwK6GNp+FfHuPOoyhaWuNvTYFkvxscMQWDh+zeFCFkgwbXftiV23ywJ4+uwRqmg9k3KzwIQpzppt8DBBOMbrqwQM5Gb05sEwdKzMiAqOloaA/lr0KA+1pr0/+HiWoiIjHA/wir2nIuS3PeU/ji3O6ZwoxcR1SZ9FhtLC5S0FIzFhbBWcGVP/KpxOPSiUoAdWUpqKH++6Scz507iCcxYI6rdMBICPJZea7OcmeFw5mObJSiqpjg2UoWNIs+cFhyDSt6geV5qgi3FunmwwDoGSMgerFOZGX1m0dMCYo5XOruxO063dwENK9DbnVM9wYFREzh4vyU1WYYJ/LRRp6oxgjqP/X5a8/4Af6p6NWkQferzBmXme0zY/4nwMJm/wd1tIqSwGz+E3xPEAOoZlJit3XddD7/BT1pllzOx+8bmQtANQ/S6fZexc6qi3W+Q2xcmXTUhuS5mpHQRvcxZUN0S5+PL9lXWUAaRZhEH8hTdAcuNMMCuVNKTEGtSUKNi3O6KhSaTzck8csZ2vWRZ+d7mW8c4IKwXIYd25S/zIftPkwPzufjEvOHWVD1m+FjpDVUTV0DGDuHj6QnaEwLu/dEgdLQOg9E1Sro9XHJ8ykLAwtPu+pxqKDuFexqON1sKQm7rwbE1E68UCfA/erovrTCG+DBSNg0l4goDQvZN6uNlbyLpcZAwj2UclycvLpIZMgv4yRlpb3YuMftozorbcGVHt/VeDV3+Fdf1TP0iuaCsPi2G4XeGhsyF1ubVDxkoJhmniQ0/jSg/eYML9KLfnCFgISWkp91eauR3IQvED0nAPXK+6hPCYs+n3+hCZbiskmVMG2da+0EsZPonUeIY8EbfusQXjsK/eFDaosbPjEfQS0RKG7yj5GG69M7MeO1HmiUYocgygJHL6M1qzUDDwUSmr99V7Sdr2F3JjQAJY+F0yH33Iv3+C9M38eML7gTgmNu/r2bUMiPvpYbZ6v1/IaESirBHNa7mPKn4dEmYg7v/+HQgPN1G79jBQ1+soydfDC2r+h2Bl/KIc5KjMK7OH6nb1jLsNf0EHVe2KBiE51ox636uyG6Lho0t3J34L5QY/ilE3mikaF4HKXG1mG1rCevT1Vv6GavltxoQe/bMrpZvRggnBxSEPEeEzkEdOxTnPXHVjUYdw8JYvjB/o7Eegc3Ma+NUxLLnsK0kJlinPmUHzHGtrk5+CAbVzFOBqpyy3QVUnzTDfC/0XD94/okH+OB+i7g9lolhWIjSnfIb+Eq43ZXOWmwvjyV/qqD+t0e+7mTEM74qP/Ozt8nmC7mRpyu63OB4KnUzFc074SqoyPUAgM+/TJGFo6T44EHnQU4X4z6qannVqgw/U7zCpwcmXV1AubIrvOmkKHazJAR55ePjp5tLBsN8vAqs3NAHdcEHOR2xQ0lsNAFzSUuxFQCFYvXLZJdOj9p4fNq6p0HBGUik2YzaI4xySy91KzhQ0+q1hjxvImRwPRf76tChlRkhRCi74NXZ9qUNeIwP+s5p+3m5nwPdNOHgSLD79n7O9m1n1uDHiMntq4nkYwV5OZ1ENbXxFd4PgrlvavZsyUO4MqYlqqn1O8W/I1dEZq5dXhrbETLaZIbC2Kj/Aa/QM+fqUOHdf0tXAQ1huZ3cmWECWSXy/43j35+Mvq9xws7JKseriZ1pEWKc8qlzNrGPUGcVgOa9cPJYIJsGnJTAUsEcDOEVULO5x0rXBijc1lgXEzQQKhROf8zIV82w8eswc78YX11KYLWQRcgHNJElBxfXr72lS2RBSl07qTKorO2uUDZr3sFhYsvnhLZn0A94KRzJ/7DEGIAhW5ZWFpL8gEwu1aLA9MuWZzNwl8Oze9Y+bX+v9gywRVnoB5I/8kXTXU3141yRLYrIOOz6SOnyHNy4SieqzkBXharjfjqq1q6tklaEbA8Qfm2DaIPs7OTq/nvJBjKfO2H9bH2cCMh1+5gspfycu8f/cuuRmtDjyqZ7uCIMyjdV3a+p3fqmXsRx4C8lujezIFHnQiVTXLXuI1XrwN3+siYYj2HHTvESUx8DlOTXpak9qFRK+L3mgJ1WsD7F4cu1aJoFoYQnu+wGDMOjJM3kiBQWHCcvhJ/HRdxodOQp45YZaOTA22Nb4XKCVxqkbwMYFhzYQYIAnCW8FW14uf98jhUG2zrKhQQ0q0CEq0t5nXyvUyvR8DvD69LU+g3i+HFWQMQ8PqZuHD+sNKAV0+M6EJC0szq7rEr7B5bQ8BcNHzvDMc9eqB5ZCQdTf80Obn4uzjwpYU7SISdtV0QGa9D3Wrh2BDQtpBKxaNFV+/Cy2P/Sv+8s7Ud0Fd74X4+o/TNztWgETUapy+majNQ68Lq3ee0ZO48VEbTZYiH1Co4OlfWef82RWeyUXo7woM03PyapGfikTnQinoNq5z5veLpeMV3HCAMTaZmA1oGLAn7XS3XYsz+XK7VMQsc4XKrmDXOLU/pSXVNUq8dIqTba///3x6LiLS6xs1xuCAYSfcQ3+rQgmu7uvf3THKt5Ooo97TqcbRqxx7EASizaQCBQllG/rYxVapMLgtLbZS64w1MDBMXX+PQpBKNwqUKOf2DDRDUXQf9EhOS0Qj4nTmlA8dzSLz/G1d+Ud8MTy/6ghhdiLpeerGY/UlDOfiuqFsMUU5/UYlP+BAmgRLuNpvrUaLlVkrqDievNVEAwF+4CoM1MZTmjxjJMsKJq+u8Zd7tNCUFy6LiyYXRJQ4VyvEQFFaCGKsxIwQkk7EzZ6LTJq2hUuPhvAW+gQnSG6J+MszC+7QCRHcnqDdyNRJ6T9xyS87A6MDutbzKGvGktpbXqtzWtXb9HsfK2cBMomjN9a4y+TaJLnXxAeX/HWzmf4cR4vALt/P4w4qgKY04ml4ZdLOinFYS6cup3G/1ie4+t1eOnpBNlqGqs75ilzkT4+DsZQxNvaSKJ//6zIbbk/M7LOhFmRc/1R+kBtz7JFGdZm/COotIdvQoXpTqP/1uqEUmCb/QWoGLMwO5ANcHzxdY48IGP5+J+zKOTBFZ4Pid+GTM+Wq12MV/H86xEJptBa6T+p3kgpwLedManBHC2GgNrFpoN2xnrMz9WFWX/8/ygSBkavq2Uv7FdCsLEYLu9LLIvAU0bNRDtzYl+/vXmjpIvuJFYjmI0im6QEYqnIeMsNjXG4vIutIGHijeAG/9EDBozKV5cldkHbLxHh25vT+ZEzbhXlqvpzKJwcEgfNwLAKFeo0/pvEE10XDB+EXRTXtSzJozQKFFAJhMxYkVaCW+E9AL7tMeU8acxidHqzb6lX4691UsDpy/LLRmT+epgW56+5Cw8tB4kMUv6s9lh3eRKbyGs+H/4mQMaYzPTf2OOdokEn+zzgvoD3FqNKk8QqGAXVsqcGdXrT62fSPkR2vROFi68A6se86UxRUk4cajfPyCC4G5wDhD+zNq4jodQ4u4n/m37Lr36n4LIAAsVr02dFi9AiwA81MYs2rm4eDlDNmdMRvEKRHfBwW5DdMNp0jPFZMeARqF/wL4XBfd+EMLBfMzpH5GH6NaW+1vrvMdg+VxDzatk3MXgO3ro3P/DpcC6+Mo4MySJhKJhSR01SGGGp5hPWmrrUgrv3lDnP+HhcI3nt3YqBoVAVTBAQT5iuhTg8nvPtd8ZeYj6w1x6RqGUBrSku7+N1+BaasZvjTk64RoIDlL8brpEcJx3OmY7jLoZsswdtmhfC/G21llXhITOwmvRDDeTTPbyASOa16cF5/A1fZAidJpqju3wYAy9avPR1ya6eNp9K8XYrrtuxlqi+bDKwlfrYdR0RRiKRVTLOH85+ZY7XSmzRpfZBJjaTa81VDcJHpZnZnSQLASGYW9l51ZV/h7eVzTi3Hv6hUsgc/51AqJRTkpbFVLXXszoBL8nBX0u/0jBLT8nH+fJePbrwURT58OY+UieRjd1vs04w0VG5VN2U6MoGZkQzKN/ptz0Q366dxoTGmj7i1NQGHi9GgnquXFYdrCfZBmeb7s0T6yrdlZH5cZuwHFyIJ/kAtGsTg0xH5taAAq44BAk1CPk9KVVbqQzrCUiFdF/6gtlPQ8bHHc1G1W92MXGZ5HEHftyLYs8mbD/9xYRUWkHmlM0zC2ilJlnNgV4bfALpQghxOUoZL7VTqtCHIaQSXm+YUMnpkXybnV+A6xlm2CVy8fn0Xlm2XRa0+zzOa21JWWmixfiPMSCZ7qA4rS93VN3pkpF1s5TonQjisHf7iU9ZGvUPOAKZcR1pbeVf/Ul7OhepGCaId9wOtqo7pJ7yLcBZ0pFkOF28y4zEI/kcUNmutBHaQpBdNM8vjCS6HZRokkeo88TBAjGyG7SR+6vUgTcyK9Imalj0kuxz0wmK+byQU11AiJFk/ya5dNduRClcnU64yGu/ieWSeOos1t3ep+RPIWQ2pyTYVbZltTbsb7NiwSi3AV+8KLWk7LxCnfZUetEM8ThnsSoGH38/nyAwFguJp8FjvlHtcWZuU4hPva0rHfr0UhOOJ/F6vS62FW7KzkmRll2HEc7oUq4fyi5T70Vl7YVIfsPHUCdHesf9Lk7WNVWO75JDkYbMI8TOW8JKVtLY9d6UJRITO8oKo0xS+o99Yy04iniGHAaGj88kEWgwv0OrHdY/nr76DOGNS59hXCGXzTKUvDl9iKpLSWYN1lxIeyywdNpTkhay74w2jFT6NS8qkjo5CxA1yfSYwp6AJIZNKIeEK5PJAW7ORgWgwp0VgzYpqovMrWxbu+DGZ6Lhie1RAqpzm8VUzKJOH3mCzWuTOLsN3VT/dv2eeYe9UjbR8YTBsLz7q60VN1sU51k+um1f8JxD5pPhbhSC8rRaB454tmh6YUWrJI3+GWY0qeWioj/tbkYITOkJaeuGt4JrJvHA+l0Gu7kY7XOaa05alMnRWVCXqFgLIwSY4uF59Ue5SU4QKuc/HamDxbr0x6csCetXGoP7Qn1Bk/J9DsynO/UD6iZ1Hyrz+jit0hDCwi/E9OjgKTbB3ZQKQ/0ZOvevfNHG0NK4Aj3Cp7NpRk07RT1i/S0EL93Ag8GRgKI9CfpajKyK6+Jj/PI1KO5/85VAwz2AwzP8FTBb075IxCXv6T9RVvWT2tUaqxDS92zrGUbWzUYk9mSs82pECH+fkqsDt93VW++4YsR/dHCYcQSYTO/KaBMDj9LSD/J/+z20Kq8XvZUAIHtm9hRPP3ItbuAu2Hm5lkPs92pd7kCxgRs0xOVBnZ13ccdA0aunrwv9SdqElJRC3g+oCu+nXyCgmXUs9yMjTMAIHfxZV+aPKcZeUBWt057Xo85Ks1Ir5gzEHCWqZEhrLZMuF11ziGtFQUds/EESajhagzcKsxamcSZxGth4UII+adPhQkUnx2WyN+4YWR+r3f8MnkyGFuR4zjzxJS8WsQYR5PTyRaD9ixa6Mh741nBHbzfjXHskGDq179xaRNrCIB1z1xRfWfjqw2pHc1zk9xlPpL8sQWAIuETZZhbnmL54rceXVNRvUiKrrqIkeogsl0XXb17ylNb0f4GA9Wd44vffEG8FSZGHEL2fbaTGRcSiCeA8PmA/f6Hz8HCS76fXUHwgwkzSwlI71ekZ7Fapmlk/KC+Hs8hUcw3N2LN5LhkVYyizYFl/uPeVP5lsoJHhhfWvvSWruCUW1ZcJOeuTbrDgywJ/qG07gZJplnTvLcYdNaH0KMYOYMGX+rB4NGPFmQsNaIwlWrfCezxre8zXBrsMT+edVLbLqN1BqB76JH4BvZTqUIMfGwPGEn+EnmTV86fPBaYbFL3DFEhjB45CewkXEAtJxk4/Ms2pPXnaRqdky0HOYdcUcE2zcXq4vaIvW2/v0nHFJH2XXe22ueDmq/18XGtELSq85j9X8q0tcNSSKJIX8FTuJF/Pf8j5PhqG2u+osvsLxYrvvfeVJL+4tkcXcr9JV7v0ERmj/X6fM3NC4j6dS1+9Umr2oPavqiAydTZPLMNRGY23LO9zAVDly7jD+70G5TPPLdhRIl4WxcYjLnM+SNcJ26FOrkrISUtPObIz5Zb3AG612krnpy15RMW+1cQjlnWFI6538qky9axd2oJmHIHP08KyP0ubGO+TQNOYuv2uh17yCIvR8VcStw7o1g0NM60sk+8Tq7YfIBJrtp53GkvzXH7OA0p8/n/u1satf/VJhtR1l8Wa6Gmaug7haSpaCaYQax6ta0mkutlb+eAOSG1aobM81D9A4iS1RRlzBBoVX6tU1S6WE2N9ORY6DfeLRC4l9Rvr5h95XDWB2mR1d4WFudpsgVYwiTwT31ljskD8ZyDOlm5DkGh9N/UB/0AI5Xvb8ZBmai2hQ4BWMqFwYnzxwB26YHSOv9WgY3JXnvoN+2R4rqGVh/LLDMtpFP+SpMGJNWvbIl5SOodbCczW2RKleksPoUeGEzrjtKHVdtZA+kfqO+rVx/iclCqwoopepvJpSTDjT+b9GWylGRF8EDbGlw6eUzmJM95Ovoz+kwLX3c2fTjFeYEsE7vUZm3mqdGJuKh2w9/QGSaqRHs99aScGOdDqkFcACoqdbBoQqqjamhH6Q9ng39JCg3lrGJwd50Qk9ovnqBTr8MME7Ps2wiVfygUmPoUBJJfJWX5Nda0nuncbFkA==")),
            i = 0,
            () => o[i++])
            , g = new Set(d(m))
            , y = new Set(d(m))
            , v = function (t) {
                let e = [];
                for (; ;) {
                    let r = t();
                    if (0 == r)
                        break;
                    e.push(function (t, e) {
                        let r = 1 + e()
                            , n = e()
                            , i = function (t) {
                                let e = [];
                                for (; ;) {
                                    let r = t();
                                    if (0 == r)
                                        break;
                                    e.push(r)
                                }
                                return e
                            }(e);
                        return h(p(i.length, 1 + t, e).map((t, e) => {
                            let o = t[0]
                                , s = t.slice(1);
                            return Array(i[e]).fill(void 0).map((t, e) => {
                                let i = e * n;
                                return [o + e * r, s.map(t => t + i)]
                            }
                            )
                        }
                        ))
                    }(r, t))
                }
                for (; ;) {
                    let r = t() - 1;
                    if (r < 0)
                        break;
                    e.push(p(1 + t(), 1 + r, t).map(t => [t[0], t.slice(1)]))
                }
                return function (t) {
                    let e = {};
                    for (let r = 0; r < t.length; r++) {
                        let n = t[r];
                        e[n[0]] = n[1]
                    }
                    return e
                }(h(e))
            }(m)
            , b = (n = d(m).sort((t, e) => t - e),
                function t() {
                    let e = [];
                    for (; ;) {
                        let r = d(m, n);
                        if (0 == r.length)
                            break;
                        e.push({
                            set: new Set(r),
                            node: t()
                        })
                    }
                    e.sort((t, e) => e.set.size - t.set.size);
                    let r = m();
                    return {
                        branches: e,
                        valid: r % 3,
                        fe0f: !!(1 & (r = r / 3 | 0)),
                        save: 1 == (r >>= 1),
                        check: 2 == r
                    }
                }());
        function w(t) {
            return t.filter(t => 65039 != t)
        }
        function E(t) {
            for (let e of t.split(".")) {
                let t = (0,
                    a.XL)(e);
                try {
                    for (let e = t.lastIndexOf(95) - 1; e >= 0; e--)
                        if (95 !== t[e])
                            throw Error("underscore only allowed at start");
                    if (t.length >= 4 && t.every(t => t < 128) && 45 === t[2] && 45 === t[3])
                        throw Error("invalid label extension")
                } catch (t) {
                    throw Error(`Invalid label "${e}": ${t.message}`)
                }
            }
            return t
        }
        let A = new u.Yd(c.i)
            , _ = new Uint8Array(32);
        function S(t) {
            if (0 === t.length)
                throw Error("invalid ENS name; empty component");
            return t
        }
        function k(t) {
            let e = (0,
                a.Y0)(E(function (t, e) {
                    let r = (0,
                        a.XL)(t).reverse()
                        , n = [];
                    for (; r.length;) {
                        let t = function (t, e) {
                            var r;
                            let n, i;
                            let o = b
                                , s = []
                                , a = t.length;
                            for (e && (e.length = 0); a;) {
                                let l = t[--a];
                                if (!(o = null === (r = o.branches.find(t => t.set.has(l))) || void 0 === r ? void 0 : r.node))
                                    break;
                                if (o.save)
                                    i = l;
                                else if (o.check && l === i)
                                    break;
                                s.push(l),
                                    o.fe0f && (s.push(65039),
                                        a > 0 && 65039 == t[a - 1] && a--),
                                    o.valid && (n = s.slice(),
                                        2 == o.valid && n.splice(1, 1),
                                        e && e.push(...t.slice(a).reverse()),
                                        t.length = a)
                            }
                            return n
                        }(r);
                        if (t) {
                            n.push(...e(t));
                            continue
                        }
                        let i = r.pop();
                        if (g.has(i)) {
                            n.push(i);
                            continue
                        }
                        if (y.has(i))
                            continue;
                        let o = v[i];
                        if (o) {
                            n.push(...o);
                            continue
                        }
                        throw Error(`Disallowed codepoint: 0x${i.toString(16).toUpperCase()}`)
                    }
                    return E(String.fromCodePoint(...n).normalize("NFC"))
                }(t, w)))
                , r = [];
            if (0 === t.length)
                return r;
            let n = 0;
            for (let t = 0; t < e.length; t++)
                46 === e[t] && (r.push(S(e.slice(n, t))),
                    n = t + 1);
            if (n >= e.length)
                throw Error("invalid ENS name; empty component");
            return r.push(S(e.slice(n))),
                r
        }
        function P(t) {
            try {
                return 0 !== k(t).length
            } catch (t) { }
            return !1
        }
        function N(t) {
            "string" != typeof t && A.throwArgumentError("invalid ENS name; not a string", "name", t);
            let e = _
                , r = k(t);
            for (; r.length;)
                e = (0,
                    l.w)((0,
                        s.zo)([e, (0,
                            l.w)(r.pop())]));
            return (0,
                s.Dv)(e)
        }
        function C(t) {
            return (0,
                s.Dv)((0,
                    s.zo)(k(t).map(t => {
                        if (t.length > 63)
                            throw Error("invalid DNS encoded entry; length exceeds 63 bytes");
                        let e = new Uint8Array(t.length + 1);
                        return e.set(t, 1),
                            e[0] = e.length - 1,
                            e
                    }
                    ))) + "00"
        }
        _.fill(0)
    },
    31822: function (t, e, r) {
        "use strict";
        r.d(e, {
            E: function () {
                return k
            }
        });
        var n = r(18994)
            , i = r(92598)
            , o = r(57273)
            , s = r(14184)
            , a = r(17213)
            , l = r(36288)
            , u = r(10996)
            , c = r(36339);
        let h = new l.Yd(u.i)
            , f = new Uint8Array(32);
        f.fill(0);
        let d = i.O$.from(-1)
            , p = i.O$.from(0)
            , m = i.O$.from(1)
            , g = i.O$.from("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff")
            , y = (0,
                o.$m)(m.toHexString(), 32)
            , v = (0,
                o.$m)(p.toHexString(), 32)
            , b = {
                name: "string",
                version: "string",
                chainId: "uint256",
                verifyingContract: "address",
                salt: "bytes32"
            }
            , w = ["name", "version", "chainId", "verifyingContract", "salt"];
        function E(t) {
            return function (e) {
                return "string" != typeof e && h.throwArgumentError(`invalid domain value for ${JSON.stringify(t)}`, `domain.${t}`, e),
                    e
            }
        }
        let A = {
            name: E("name"),
            version: E("version"),
            chainId: function (t) {
                try {
                    return i.O$.from(t).toString()
                } catch (t) { }
                return h.throwArgumentError('invalid domain value for "chainId"', "domain.chainId", t)
            },
            verifyingContract: function (t) {
                try {
                    return (0,
                        n.Kn)(t).toLowerCase()
                } catch (t) { }
                return h.throwArgumentError('invalid domain value "verifyingContract"', "domain.verifyingContract", t)
            },
            salt: function (t) {
                try {
                    let e = (0,
                        o.lE)(t);
                    if (32 !== e.length)
                        throw Error("bad length");
                    return (0,
                        o.Dv)(e)
                } catch (t) { }
                return h.throwArgumentError('invalid domain value "salt"', "domain.salt", t)
            }
        };
        function _(t) {
            {
                let e = t.match(/^(u?)int(\d*)$/);
                if (e) {
                    let r = "" === e[1]
                        , n = parseInt(e[2] || "256");
                    (n % 8 != 0 || n > 256 || e[2] && e[2] !== String(n)) && h.throwArgumentError("invalid numeric width", "type", t);
                    let s = g.mask(r ? n - 1 : n)
                        , a = r ? s.add(m).mul(d) : p;
                    return function (e) {
                        let r = i.O$.from(e);
                        return (r.lt(a) || r.gt(s)) && h.throwArgumentError(`value out-of-bounds for ${t}`, "value", e),
                            (0,
                                o.$m)(r.toTwos(256).toHexString(), 32)
                    }
                }
            }
            {
                let e = t.match(/^bytes(\d+)$/);
                if (e) {
                    let r = parseInt(e[1]);
                    return (0 === r || r > 32 || e[1] !== String(r)) && h.throwArgumentError("invalid bytes width", "type", t),
                        function (e) {
                            return (0,
                                o.lE)(e).length !== r && h.throwArgumentError(`invalid length for ${t}`, "value", e),
                                function (t) {
                                    let e = (0,
                                        o.lE)(t)
                                        , r = e.length % 32;
                                    return r ? (0,
                                        o.xs)([e, f.slice(r)]) : (0,
                                            o.Dv)(e)
                                }(e)
                        }
                }
            }
            switch (t) {
                case "address":
                    return function (t) {
                        return (0,
                            o.$m)((0,
                                n.Kn)(t), 32)
                    }
                        ;
                case "bool":
                    return function (t) {
                        return t ? y : v
                    }
                        ;
                case "bytes":
                    return function (t) {
                        return (0,
                            s.w)(t)
                    }
                        ;
                case "string":
                    return function (t) {
                        return (0,
                            c.id)(t)
                    }
            }
            return null
        }
        function S(t, e) {
            return `${t}(${e.map(({ name: t, type: e }) => e + " " + t).join(",")})`
        }
        class k {
            constructor(t) {
                (0,
                    a.zG)(this, "types", Object.freeze((0,
                        a.p$)(t))),
                    (0,
                        a.zG)(this, "_encoderCache", {}),
                    (0,
                        a.zG)(this, "_types", {});
                let e = {}
                    , r = {}
                    , n = {};
                for (let i in Object.keys(t).forEach(t => {
                    e[t] = {},
                        r[t] = [],
                        n[t] = {}
                }
                ),
                    t) {
                    let n = {};
                    t[i].forEach(o => {
                        n[o.name] && h.throwArgumentError(`duplicate variable name ${JSON.stringify(o.name)} in ${JSON.stringify(i)}`, "types", t),
                            n[o.name] = !0;
                        let s = o.type.match(/^([^\x5b]*)(\x5b|$)/)[1];
                        s === i && h.throwArgumentError(`circular type reference to ${JSON.stringify(s)}`, "types", t),
                            _(s) || (r[s] || h.throwArgumentError(`unknown type ${JSON.stringify(s)}`, "types", t),
                                r[s].push(i),
                                e[i][s] = !0)
                    }
                    )
                }
                let i = Object.keys(r).filter(t => 0 === r[t].length);
                for (let o in 0 === i.length ? h.throwArgumentError("missing primary type", "types", t) : i.length > 1 && h.throwArgumentError(`ambiguous primary types or unused types: ${i.map(t => JSON.stringify(t)).join(", ")}`, "types", t),
                    (0,
                        a.zG)(this, "primaryType", i[0]),
                    !function i(o, s) {
                        s[o] && h.throwArgumentError(`circular type reference to ${JSON.stringify(o)}`, "types", t),
                            s[o] = !0,
                            Object.keys(e[o]).forEach(t => {
                                r[t] && (i(t, s),
                                    Object.keys(s).forEach(e => {
                                        n[e][t] = !0
                                    }
                                    ))
                            }
                            ),
                            delete s[o]
                    }(this.primaryType, {}),
                    n) {
                    let e = Object.keys(n[o]);
                    e.sort(),
                        this._types[o] = S(o, t[o]) + e.map(e => S(e, t[e])).join("")
                }
            }
            getEncoder(t) {
                let e = this._encoderCache[t];
                return e || (e = this._encoderCache[t] = this._getEncoder(t)),
                    e
            }
            _getEncoder(t) {
                {
                    let e = _(t);
                    if (e)
                        return e
                }
                let e = t.match(/^(.*)(\x5b(\d*)\x5d)$/);
                if (e) {
                    let t = e[1]
                        , r = this.getEncoder(t)
                        , n = parseInt(e[3]);
                    return e => {
                        n >= 0 && e.length !== n && h.throwArgumentError("array length mismatch; expected length ${ arrayLength }", "value", e);
                        let i = e.map(r);
                        return this._types[t] && (i = i.map(s.w)),
                            (0,
                                s.w)((0,
                                    o.xs)(i))
                    }
                }
                let r = this.types[t];
                if (r) {
                    let e = (0,
                        c.id)(this._types[t]);
                    return t => {
                        let n = r.map(({ name: e, type: r }) => {
                            let n = this.getEncoder(r)(t[e]);
                            return this._types[r] ? (0,
                                s.w)(n) : n
                        }
                        );
                        return n.unshift(e),
                            (0,
                                o.xs)(n)
                    }
                }
                return h.throwArgumentError(`unknown type: ${t}`, "type", t)
            }
            encodeType(t) {
                let e = this._types[t];
                return e || h.throwArgumentError(`unknown type: ${JSON.stringify(t)}`, "name", t),
                    e
            }
            encodeData(t, e) {
                return this.getEncoder(t)(e)
            }
            hashStruct(t, e) {
                return (0,
                    s.w)(this.encodeData(t, e))
            }
            encode(t) {
                return this.encodeData(this.primaryType, t)
            }
            hash(t) {
                return this.hashStruct(this.primaryType, t)
            }
            _visit(t, e, r) {
                if (_(t))
                    return r(t, e);
                let n = t.match(/^(.*)(\x5b(\d*)\x5d)$/);
                if (n) {
                    let t = n[1]
                        , i = parseInt(n[3]);
                    return i >= 0 && e.length !== i && h.throwArgumentError("array length mismatch; expected length ${ arrayLength }", "value", e),
                        e.map(e => this._visit(t, e, r))
                }
                let i = this.types[t];
                return i ? i.reduce((t, { name: n, type: i }) => (t[n] = this._visit(i, e[n], r),
                    t), {}) : h.throwArgumentError(`unknown type: ${t}`, "type", t)
            }
            visit(t, e) {
                return this._visit(this.primaryType, t, e)
            }
            static from(t) {
                return new k(t)
            }
            static getPrimaryType(t) {
                return k.from(t).primaryType
            }
            static hashStruct(t, e, r) {
                return k.from(e).hashStruct(t, r)
            }
            static hashDomain(t) {
                let e = [];
                for (let r in t) {
                    let n = b[r];
                    n || h.throwArgumentError(`invalid typed-data domain key: ${JSON.stringify(r)}`, "domain", t),
                        e.push({
                            name: r,
                            type: n
                        })
                }
                return e.sort((t, e) => w.indexOf(t.name) - w.indexOf(e.name)),
                    k.hashStruct("EIP712Domain", {
                        EIP712Domain: e
                    }, t)
            }
            static encode(t, e, r) {
                return (0,
                    o.xs)(["0x1901", k.hashDomain(t), k.from(e).hash(r)])
            }
            static hash(t, e, r) {
                return (0,
                    s.w)(k.encode(t, e, r))
            }
            static resolveNames(t, e, r, n) {
                var i, s, l, u;
                return i = this,
                    s = void 0,
                    l = void 0,
                    u = function* () {
                        t = (0,
                            a.DC)(t);
                        let i = {};
                        t.verifyingContract && !(0,
                            o.A7)(t.verifyingContract, 20) && (i[t.verifyingContract] = "0x");
                        let s = k.from(e);
                        for (let t in s.visit(r, (t, e) => ("address" !== t || (0,
                            o.A7)(e, 20) || (i[e] = "0x"),
                            e)),
                            i)
                            i[t] = yield n(t);
                        return t.verifyingContract && i[t.verifyingContract] && (t.verifyingContract = i[t.verifyingContract]),
                            r = s.visit(r, (t, e) => "address" === t && i[e] ? i[e] : e),
                        {
                            domain: t,
                            value: r
                        }
                    }
                    ,
                    new (l || (l = Promise))(function (t, e) {
                        function r(t) {
                            try {
                                o(u.next(t))
                            } catch (t) {
                                e(t)
                            }
                        }
                        function n(t) {
                            try {
                                o(u.throw(t))
                            } catch (t) {
                                e(t)
                            }
                        }
                        function o(e) {
                            var i;
                            e.done ? t(e.value) : ((i = e.value) instanceof l ? i : new l(function (t) {
                                t(i)
                            }
                            )).then(r, n)
                        }
                        o((u = u.apply(i, s || [])).next())
                    }
                    )
            }
            static getPayload(t, e, r) {
                k.hashDomain(t);
                let n = {}
                    , s = [];
                w.forEach(e => {
                    let r = t[e];
                    null != r && (n[e] = A[e](r),
                        s.push({
                            name: e,
                            type: b[e]
                        }))
                }
                );
                let l = k.from(e)
                    , u = (0,
                        a.DC)(e);
                return u.EIP712Domain ? h.throwArgumentError("types must not contain EIP712Domain type", "types.EIP712Domain", e) : u.EIP712Domain = s,
                    l.encode(r),
                {
                    types: u,
                    domain: n,
                    primaryType: l.primaryType,
                    message: l.visit(r, (t, e) => {
                        if (t.match(/^bytes(\d*)/))
                            return (0,
                                o.Dv)((0,
                                    o.lE)(e));
                        if (t.match(/^u?int/))
                            return i.O$.from(e).toString();
                        switch (t) {
                            case "address":
                                return e.toLowerCase();
                            case "bool":
                                return !!e;
                            case "string":
                                return "string" != typeof e && h.throwArgumentError("invalid string", "value", e),
                                    e
                        }
                        return h.throwArgumentError("unsupported type", "type", t)
                    }
                    )
                }
            }
        }
    },
    14184: function (t, e, r) {
        "use strict";
        r.d(e, {
            w: function () {
                return s
            }
        });
        var n = r(26398)
            , i = r.n(n)
            , o = r(57273);
        function s(t) {
            return "0x" + i().keccak_256((0,
                o.lE)(t))
        }
    },
    36288: function (t, e, r) {
        "use strict";
        var n, i, o, s;
        r.d(e, {
            jK: function () {
                return i
            },
            Yd: function () {
                return p
            }
        });
        let a = !1
            , l = !1
            , u = {
                debug: 1,
                default: 2,
                info: 2,
                warning: 3,
                error: 4,
                off: 5
            }
            , c = 2
            , h = null
            , f = function () {
                try {
                    let t = [];
                    if (["NFD", "NFC", "NFKD", "NFKC"].forEach(e => {
                        try {
                            if ("test" !== "test".normalize(e))
                                throw Error("bad normalize")
                        } catch (r) {
                            t.push(e)
                        }
                    }
                    ),
                        t.length)
                        throw Error("missing " + t.join(", "));
                    if (String.fromCharCode(233).normalize("NFD") !== String.fromCharCode(101, 769))
                        throw Error("broken implementation")
                } catch (t) {
                    return t.message
                }
                return null
            }();
        (o = n || (n = {})).DEBUG = "DEBUG",
            o.INFO = "INFO",
            o.WARNING = "WARNING",
            o.ERROR = "ERROR",
            o.OFF = "OFF",
            (s = i || (i = {})).UNKNOWN_ERROR = "UNKNOWN_ERROR",
            s.NOT_IMPLEMENTED = "NOT_IMPLEMENTED",
            s.UNSUPPORTED_OPERATION = "UNSUPPORTED_OPERATION",
            s.NETWORK_ERROR = "NETWORK_ERROR",
            s.SERVER_ERROR = "SERVER_ERROR",
            s.TIMEOUT = "TIMEOUT",
            s.BUFFER_OVERRUN = "BUFFER_OVERRUN",
            s.NUMERIC_FAULT = "NUMERIC_FAULT",
            s.MISSING_NEW = "MISSING_NEW",
            s.INVALID_ARGUMENT = "INVALID_ARGUMENT",
            s.MISSING_ARGUMENT = "MISSING_ARGUMENT",
            s.UNEXPECTED_ARGUMENT = "UNEXPECTED_ARGUMENT",
            s.CALL_EXCEPTION = "CALL_EXCEPTION",
            s.INSUFFICIENT_FUNDS = "INSUFFICIENT_FUNDS",
            s.NONCE_EXPIRED = "NONCE_EXPIRED",
            s.REPLACEMENT_UNDERPRICED = "REPLACEMENT_UNDERPRICED",
            s.UNPREDICTABLE_GAS_LIMIT = "UNPREDICTABLE_GAS_LIMIT",
            s.TRANSACTION_REPLACED = "TRANSACTION_REPLACED",
            s.ACTION_REJECTED = "ACTION_REJECTED";
        let d = "0123456789abcdef";
        class p {
            constructor(t) {
                Object.defineProperty(this, "version", {
                    enumerable: !0,
                    value: t,
                    writable: !1
                })
            }
            _log(t, e) {
                let r = t.toLowerCase();
                null == u[r] && this.throwArgumentError("invalid log level name", "logLevel", t),
                    c > u[r] || console.log.apply(console, e)
            }
            debug(...t) {
                this._log(p.levels.DEBUG, t)
            }
            info(...t) {
                this._log(p.levels.INFO, t)
            }
            warn(...t) {
                this._log(p.levels.WARNING, t)
            }
            makeError(t, e, r) {
                if (l)
                    return this.makeError("censored error", e, {});
                e || (e = p.errors.UNKNOWN_ERROR),
                    r || (r = {});
                let n = [];
                Object.keys(r).forEach(t => {
                    let e = r[t];
                    try {
                        if (e instanceof Uint8Array) {
                            let r = "";
                            for (let t = 0; t < e.length; t++)
                                r += d[e[t] >> 4] + d[15 & e[t]];
                            n.push(t + "=Uint8Array(0x" + r + ")")
                        } else
                            n.push(t + "=" + JSON.stringify(e))
                    } catch (e) {
                        n.push(t + "=" + JSON.stringify(r[t].toString()))
                    }
                }
                ),
                    n.push(`code=${e}`),
                    n.push(`version=${this.version}`);
                let o = t
                    , s = "";
                switch (e) {
                    case i.NUMERIC_FAULT:
                        {
                            s = "NUMERIC_FAULT";
                            let e = t;
                            switch (e) {
                                case "overflow":
                                case "underflow":
                                case "division-by-zero":
                                    s += "-" + e;
                                    break;
                                case "negative-power":
                                case "negative-width":
                                    s += "-unsupported";
                                    break;
                                case "unbound-bitwise-result":
                                    s += "-unbound-result"
                            }
                            break
                        }
                    case i.CALL_EXCEPTION:
                    case i.INSUFFICIENT_FUNDS:
                    case i.MISSING_NEW:
                    case i.NONCE_EXPIRED:
                    case i.REPLACEMENT_UNDERPRICED:
                    case i.TRANSACTION_REPLACED:
                    case i.UNPREDICTABLE_GAS_LIMIT:
                        s = e
                }
                s && (t += " [ See: https://links.ethers.org/v5-errors-" + s + " ]"),
                    n.length && (t += " (" + n.join(", ") + ")");
                let a = Error(t);
                return a.reason = o,
                    a.code = e,
                    Object.keys(r).forEach(function (t) {
                        a[t] = r[t]
                    }),
                    a
            }
            throwError(t, e, r) {
                throw this.makeError(t, e, r)
            }
            throwArgumentError(t, e, r) {
                return this.throwError(t, p.errors.INVALID_ARGUMENT, {
                    argument: e,
                    value: r
                })
            }
            assert(t, e, r, n) {
                t || this.throwError(e, r, n)
            }
            assertArgument(t, e, r, n) {
                t || this.throwArgumentError(e, r, n)
            }
            checkNormalize(t) {
                null == t && (t = "platform missing String.prototype.normalize"),
                    f && this.throwError("platform missing String.prototype.normalize", p.errors.UNSUPPORTED_OPERATION, {
                        operation: "String.prototype.normalize",
                        form: f
                    })
            }
            checkSafeUint53(t, e) {
                "number" == typeof t && (null == e && (e = "value not safe"),
                    (t < 0 || t >= 9007199254740991) && this.throwError(e, p.errors.NUMERIC_FAULT, {
                        operation: "checkSafeInteger",
                        fault: "out-of-safe-range",
                        value: t
                    }),
                    t % 1 && this.throwError(e, p.errors.NUMERIC_FAULT, {
                        operation: "checkSafeInteger",
                        fault: "non-integer",
                        value: t
                    }))
            }
            checkArgumentCount(t, e, r) {
                r = r ? ": " + r : "",
                    t < e && this.throwError("missing argument" + r, p.errors.MISSING_ARGUMENT, {
                        count: t,
                        expectedCount: e
                    }),
                    t > e && this.throwError("too many arguments" + r, p.errors.UNEXPECTED_ARGUMENT, {
                        count: t,
                        expectedCount: e
                    })
            }
            checkNew(t, e) {
                (t === Object || null == t) && this.throwError("missing new", p.errors.MISSING_NEW, {
                    name: e.name
                })
            }
            checkAbstract(t, e) {
                t === e ? this.throwError("cannot instantiate abstract class " + JSON.stringify(e.name) + " directly; use a sub-class", p.errors.UNSUPPORTED_OPERATION, {
                    name: t.name,
                    operation: "new"
                }) : (t === Object || null == t) && this.throwError("missing new", p.errors.MISSING_NEW, {
                    name: e.name
                })
            }
            static globalLogger() {
                return h || (h = new p("logger/5.7.0")),
                    h
            }
            static setCensorship(t, e) {
                if (!t && e && this.globalLogger().throwError("cannot permanently disable censorship", p.errors.UNSUPPORTED_OPERATION, {
                    operation: "setCensorship"
                }),
                    a) {
                    if (!t)
                        return;
                    this.globalLogger().throwError("error censorship permanent", p.errors.UNSUPPORTED_OPERATION, {
                        operation: "setCensorship"
                    })
                }
                l = !!t,
                    a = !!e
            }
            static setLogLevel(t) {
                let e = u[t.toLowerCase()];
                if (null == e) {
                    p.globalLogger().warn("invalid log level - " + t);
                    return
                }
                c = e
            }
            static from(t) {
                return new p(t)
            }
        }
        p.errors = i,
            p.levels = n
    },
    30795: function (t, e, r) {
        "use strict";
        r.d(e, {
            H: function () {
                return c
            }
        });
        let n = new (r(36288)).Yd("networks/5.7.1");
        function i(t) {
            let e = function (e, r) {
                null == r && (r = {});
                let n = [];
                if (e.InfuraProvider && "-" !== r.infura)
                    try {
                        n.push(new e.InfuraProvider(t, r.infura))
                    } catch (t) { }
                if (e.EtherscanProvider && "-" !== r.etherscan)
                    try {
                        n.push(new e.EtherscanProvider(t, r.etherscan))
                    } catch (t) { }
                if (e.AlchemyProvider && "-" !== r.alchemy)
                    try {
                        n.push(new e.AlchemyProvider(t, r.alchemy))
                    } catch (t) { }
                if (e.PocketProvider && "-" !== r.pocket)
                    try {
                        let i = new e.PocketProvider(t, r.pocket);
                        i.network && -1 === ["goerli", "ropsten", "rinkeby", "sepolia"].indexOf(i.network.name) && n.push(i)
                    } catch (t) { }
                if (e.CloudflareProvider && "-" !== r.cloudflare)
                    try {
                        n.push(new e.CloudflareProvider(t))
                    } catch (t) { }
                if (e.AnkrProvider && "-" !== r.ankr)
                    try {
                        let i = new e.AnkrProvider(t, r.ankr);
                        i.network && -1 === ["ropsten"].indexOf(i.network.name) && n.push(i)
                    } catch (t) { }
                if (0 === n.length)
                    return null;
                if (e.FallbackProvider) {
                    let i = 1;
                    return null != r.quorum ? i = r.quorum : "homestead" === t && (i = 2),
                        new e.FallbackProvider(n, i)
                }
                return n[0]
            };
            return e.renetwork = function (t) {
                return i(t)
            }
                ,
                e
        }
        function o(t, e) {
            let r = function (r, n) {
                return r.JsonRpcProvider ? new r.JsonRpcProvider(t, e) : null
            };
            return r.renetwork = function (e) {
                return o(t, e)
            }
                ,
                r
        }
        let s = {
            chainId: 1,
            ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
            name: "homestead",
            _defaultProvider: i("homestead")
        }
            , a = {
                chainId: 3,
                ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
                name: "ropsten",
                _defaultProvider: i("ropsten")
            }
            , l = {
                chainId: 63,
                name: "classicMordor",
                _defaultProvider: o("https://www.ethercluster.com/mordor", "classicMordor")
            }
            , u = {
                unspecified: {
                    chainId: 0,
                    name: "unspecified"
                },
                homestead: s,
                mainnet: s,
                morden: {
                    chainId: 2,
                    name: "morden"
                },
                ropsten: a,
                testnet: a,
                rinkeby: {
                    chainId: 4,
                    ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
                    name: "rinkeby",
                    _defaultProvider: i("rinkeby")
                },
                kovan: {
                    chainId: 42,
                    name: "kovan",
                    _defaultProvider: i("kovan")
                },
                goerli: {
                    chainId: 5,
                    ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
                    name: "goerli",
                    _defaultProvider: i("goerli")
                },
                kintsugi: {
                    chainId: 1337702,
                    name: "kintsugi"
                },
                sepolia: {
                    chainId: 11155111,
                    name: "sepolia",
                    _defaultProvider: i("sepolia")
                },
                classic: {
                    chainId: 61,
                    name: "classic",
                    _defaultProvider: o("https://www.ethercluster.com/etc", "classic")
                },
                classicMorden: {
                    chainId: 62,
                    name: "classicMorden"
                },
                classicMordor: l,
                classicTestnet: l,
                classicKotti: {
                    chainId: 6,
                    name: "classicKotti",
                    _defaultProvider: o("https://www.ethercluster.com/kotti", "classicKotti")
                },
                xdai: {
                    chainId: 100,
                    name: "xdai"
                },
                matic: {
                    chainId: 137,
                    name: "matic",
                    _defaultProvider: i("matic")
                },
                maticmum: {
                    chainId: 80001,
                    name: "maticmum"
                },
                optimism: {
                    chainId: 10,
                    name: "optimism",
                    _defaultProvider: i("optimism")
                },
                "optimism-kovan": {
                    chainId: 69,
                    name: "optimism-kovan"
                },
                "optimism-goerli": {
                    chainId: 420,
                    name: "optimism-goerli"
                },
                arbitrum: {
                    chainId: 42161,
                    name: "arbitrum"
                },
                "arbitrum-rinkeby": {
                    chainId: 421611,
                    name: "arbitrum-rinkeby"
                },
                "arbitrum-goerli": {
                    chainId: 421613,
                    name: "arbitrum-goerli"
                },
                bnb: {
                    chainId: 56,
                    name: "bnb"
                },
                bnbt: {
                    chainId: 97,
                    name: "bnbt"
                }
            };
        function c(t) {
            if (null == t)
                return null;
            if ("number" == typeof t) {
                for (let e in u) {
                    let r = u[e];
                    if (r.chainId === t)
                        return {
                            name: r.name,
                            chainId: r.chainId,
                            ensAddress: r.ensAddress || null,
                            _defaultProvider: r._defaultProvider || null
                        }
                }
                return {
                    chainId: t,
                    name: "unknown"
                }
            }
            if ("string" == typeof t) {
                let e = u[t];
                return null == e ? null : {
                    name: e.name,
                    chainId: e.chainId,
                    ensAddress: e.ensAddress,
                    _defaultProvider: e._defaultProvider || null
                }
            }
            let e = u[t.name];
            if (!e)
                return "number" != typeof t.chainId && n.throwArgumentError("invalid network chainId", "network", t),
                    t;
            0 !== t.chainId && t.chainId !== e.chainId && n.throwArgumentError("network chainId mismatch", "network", t);
            let r = t._defaultProvider || null;
            if (null == r && e._defaultProvider) {
                var i;
                r = (i = e._defaultProvider) && "function" == typeof i.renetwork ? e._defaultProvider.renetwork(t) : e._defaultProvider
            }
            return {
                name: t.name,
                chainId: e.chainId,
                ensAddress: t.ensAddress || e.ensAddress || null,
                _defaultProvider: r
            }
        }
    },
    17213: function (t, e, r) {
        "use strict";
        r.d(e, {
            dk: function () {
                return h
            },
            uj: function () {
                return a
            },
            p$: function () {
                return c
            },
            zG: function () {
                return i
            },
            tu: function () {
                return o
            },
            mE: function () {
                return s
            },
            DC: function () {
                return l
            }
        });
        let n = new (r(36288)).Yd("properties/5.7.0");
        function i(t, e, r) {
            Object.defineProperty(t, e, {
                enumerable: !0,
                value: r,
                writable: !1
            })
        }
        function o(t, e) {
            for (let r = 0; r < 32; r++) {
                if (t[e])
                    return t[e];
                if (!t.prototype || "object" != typeof t.prototype)
                    break;
                t = Object.getPrototypeOf(t.prototype).constructor
            }
            return null
        }
        function s(t) {
            var e, r, n, i;
            return e = this,
                r = void 0,
                n = void 0,
                i = function* () {
                    let e = Object.keys(t).map(e => Promise.resolve(t[e]).then(t => ({
                        key: e,
                        value: t
                    })));
                    return (yield Promise.all(e)).reduce((t, e) => (t[e.key] = e.value,
                        t), {})
                }
                ,
                new (n || (n = Promise))(function (t, o) {
                    function s(t) {
                        try {
                            l(i.next(t))
                        } catch (t) {
                            o(t)
                        }
                    }
                    function a(t) {
                        try {
                            l(i.throw(t))
                        } catch (t) {
                            o(t)
                        }
                    }
                    function l(e) {
                        var r;
                        e.done ? t(e.value) : ((r = e.value) instanceof n ? r : new n(function (t) {
                            t(r)
                        }
                        )).then(s, a)
                    }
                    l((i = i.apply(e, r || [])).next())
                }
                )
        }
        function a(t, e) {
            t && "object" == typeof t || n.throwArgumentError("invalid object", "object", t),
                Object.keys(t).forEach(r => {
                    e[r] || n.throwArgumentError("invalid object key - " + r, "transaction:" + r, t)
                }
                )
        }
        function l(t) {
            let e = {};
            for (let r in t)
                e[r] = t[r];
            return e
        }
        let u = {
            bigint: !0,
            boolean: !0,
            function: !0,
            number: !0,
            string: !0
        };
        function c(t) {
            return function (t) {
                if (function t(e) {
                    if (null == e || u[typeof e])
                        return !0;
                    if (Array.isArray(e) || "object" == typeof e) {
                        if (!Object.isFrozen(e))
                            return !1;
                        let r = Object.keys(e);
                        for (let n = 0; n < r.length; n++) {
                            let i = null;
                            try {
                                i = e[r[n]]
                            } catch (t) {
                                continue
                            }
                            if (!t(i))
                                return !1
                        }
                        return !0
                    }
                    return n.throwArgumentError(`Cannot deepCopy ${typeof e}`, "object", e)
                }(t))
                    return t;
                if (Array.isArray(t))
                    return Object.freeze(t.map(t => c(t)));
                if ("object" == typeof t) {
                    let e = {};
                    for (let r in t) {
                        let n = t[r];
                        void 0 !== n && i(e, r, c(n))
                    }
                    return e
                }
                return n.throwArgumentError(`Cannot deepCopy ${typeof t}`, "object", t)
            }(t)
        }
        class h {
            constructor(t) {
                for (let e in t)
                    this[e] = c(t[e])
            }
        }
    },
    12312: function (t, e, r) {
        "use strict";
        r.d(e, {
            i: function () {
                return n
            }
        });
        let n = "providers/5.7.2"
    },
    26790: function (t, e, r) {
        "use strict";
        r.d(e, {
            H2: function () {
                return L
            },
            Zk: function () {
                return j
            }
        });
        var n = r(94999)
            , i = r(72275)
            , o = r(63221)
            , s = r(92598)
            , a = r(57273)
            , l = r(76726)
            , u = r(66007)
            , c = r(30795)
            , h = r(17213)
            , f = r(37815)
            , d = r(58337)
            , p = r(39318)
            , m = r(76942)
            , g = r.n(m)
            , y = r(36288)
            , v = r(12312)
            , b = r(54259)
            , w = function (t, e, r, n) {
                return new (r || (r = Promise))(function (i, o) {
                    function s(t) {
                        try {
                            l(n.next(t))
                        } catch (t) {
                            o(t)
                        }
                    }
                    function a(t) {
                        try {
                            l(n.throw(t))
                        } catch (t) {
                            o(t)
                        }
                    }
                    function l(t) {
                        var e;
                        t.done ? i(t.value) : ((e = t.value) instanceof r ? e : new r(function (t) {
                            t(e)
                        }
                        )).then(s, a)
                    }
                    l((n = n.apply(t, e || [])).next())
                }
                )
            };
        let E = new y.Yd(v.i);
        function A(t) {
            return null == t ? "null" : (32 !== (0,
                a.E1)(t) && E.throwArgumentError("invalid topic", "topic", t),
                t.toLowerCase())
        }
        function _(t) {
            for (t = t.slice(); t.length > 0 && null == t[t.length - 1];)
                t.pop();
            return t.map(t => {
                if (!Array.isArray(t))
                    return A(t);
                {
                    let e = {};
                    t.forEach(t => {
                        e[A(t)] = !0
                    }
                    );
                    let r = Object.keys(e);
                    return r.sort(),
                        r.join("|")
                }
            }
            ).join("&")
        }
        function S(t) {
            if ("string" == typeof t) {
                if (t = t.toLowerCase(),
                    32 === (0,
                        a.E1)(t))
                    return "tx:" + t;
                if (-1 === t.indexOf(":"))
                    return t
            } else if (Array.isArray(t))
                return "filter:*:" + _(t);
            else if (n.Sg.isForkEvent(t))
                throw E.warn("not implemented"),
                Error("not implemented");
            else if (t && "object" == typeof t)
                return "filter:" + (t.address || "*") + ":" + _(t.topics || []);
            throw Error("invalid event - " + t)
        }
        function k() {
            return new Date().getTime()
        }
        function P(t) {
            return new Promise(e => {
                setTimeout(e, t)
            }
            )
        }
        let N = ["block", "network", "pending", "poll"];
        class C {
            constructor(t, e, r) {
                (0,
                    h.zG)(this, "tag", t),
                    (0,
                        h.zG)(this, "listener", e),
                    (0,
                        h.zG)(this, "once", r),
                    this._lastBlockNumber = -2,
                    this._inflight = !1
            }
            get event() {
                switch (this.type) {
                    case "tx":
                        return this.hash;
                    case "filter":
                        return this.filter
                }
                return this.tag
            }
            get type() {
                return this.tag.split(":")[0]
            }
            get hash() {
                let t = this.tag.split(":");
                return "tx" !== t[0] ? null : t[1]
            }
            get filter() {
                var t;
                let e = this.tag.split(":");
                if ("filter" !== e[0])
                    return null;
                let r = e[1]
                    , n = "" === (t = e[2]) ? [] : t.split(/&/g).map(t => {
                        if ("" === t)
                            return [];
                        let e = t.split("|").map(t => "null" === t ? null : t);
                        return 1 === e.length ? e[0] : e
                    }
                    )
                    , i = {};
                return n.length > 0 && (i.topics = n),
                    r && "*" !== r && (i.address = r),
                    i
            }
            pollable() {
                return this.tag.indexOf(":") >= 0 || N.indexOf(this.tag) >= 0
            }
        }
        let T = {
            0: {
                symbol: "btc",
                p2pkh: 0,
                p2sh: 5,
                prefix: "bc"
            },
            2: {
                symbol: "ltc",
                p2pkh: 48,
                p2sh: 50,
                prefix: "ltc"
            },
            3: {
                symbol: "doge",
                p2pkh: 30,
                p2sh: 22
            },
            60: {
                symbol: "eth",
                ilk: "eth"
            },
            61: {
                symbol: "etc",
                ilk: "eth"
            },
            700: {
                symbol: "xdai",
                ilk: "eth"
            }
        };
        function x(t) {
            return (0,
                a.$m)(s.O$.from(t).toHexString(), 32)
        }
        function R(t) {
            return o.eU.encode((0,
                a.zo)([t, (0,
                    a.p3)((0,
                        f.JQ)((0,
                            f.JQ)(t)), 0, 4)]))
        }
        let I = RegExp("^(ipfs)://(.*)$", "i")
            , O = [RegExp("^(https)://(.*)$", "i"), RegExp("^(data):(.*)$", "i"), I, RegExp("^eip155:[0-9]+/(erc[0-9]+):(.*)$", "i")];
        function M(t, e) {
            try {
                return (0,
                    d.ZN)(B(t, e))
            } catch (t) { }
            return null
        }
        function B(t, e) {
            if ("0x" === t)
                return null;
            let r = s.O$.from((0,
                a.p3)(t, e, e + 32)).toNumber()
                , n = s.O$.from((0,
                    a.p3)(t, r, r + 32)).toNumber();
            return (0,
                a.p3)(t, r + 32, r + 32 + n)
        }
        function D(t) {
            return t.match(/^ipfs:\/\/ipfs\//i) ? t = t.substring(12) : t.match(/^ipfs:\/\//i) ? t = t.substring(7) : E.throwArgumentError("unsupported IPFS format", "link", t),
                `https://gateway.ipfs.io/ipfs/${t}`
        }
        function F(t) {
            let e = (0,
                a.lE)(t);
            if (e.length > 32)
                throw Error("internal; should not happen");
            let r = new Uint8Array(32);
            return r.set(e, 32 - e.length),
                r
        }
        function U(t) {
            let e = []
                , r = 0;
            for (let n = 0; n < t.length; n++)
                e.push(null),
                    r += 32;
            for (let n = 0; n < t.length; n++) {
                let i = (0,
                    a.lE)(t[n]);
                e[n] = F(r),
                    e.push(F(i.length)),
                    e.push(function (t) {
                        if (t.length % 32 == 0)
                            return t;
                        let e = new Uint8Array(32 * Math.ceil(t.length / 32));
                        return e.set(t),
                            e
                    }(i)),
                    r += 32 + 32 * Math.ceil(i.length / 32)
            }
            return (0,
                a.xs)(e)
        }
        class L {
            constructor(t, e, r, n) {
                (0,
                    h.zG)(this, "provider", t),
                    (0,
                        h.zG)(this, "name", r),
                    (0,
                        h.zG)(this, "address", t.formatter.address(e)),
                    (0,
                        h.zG)(this, "_resolvedAddress", n)
            }
            supportsWildcard() {
                return this._supportsEip2544 || (this._supportsEip2544 = this.provider.call({
                    to: this.address,
                    data: "0x01ffc9a79061b92300000000000000000000000000000000000000000000000000000000"
                }).then(t => s.O$.from(t).eq(1)).catch(t => {
                    if (t.code === y.Yd.errors.CALL_EXCEPTION)
                        return !1;
                    throw this._supportsEip2544 = null,
                    t
                }
                )),
                    this._supportsEip2544
            }
            _fetch(t, e) {
                return w(this, void 0, void 0, function* () {
                    let r = {
                        to: this.address,
                        ccipReadEnabled: !0,
                        data: (0,
                            a.xs)([t, (0,
                                u.VM)(this.name), e || "0x"])
                    }
                        , n = !1;
                    (yield this.supportsWildcard()) && (n = !0,
                        r.data = (0,
                            a.xs)(["0x9061b923", U([(0,
                                u.Kn)(this.name), r.data])]));
                    try {
                        let t = yield this.provider.call(r);
                        return (0,
                            a.lE)(t).length % 32 == 4 && E.throwError("resolver threw error", y.Yd.errors.CALL_EXCEPTION, {
                                transaction: r,
                                data: t
                            }),
                            n && (t = B(t, 0)),
                            t
                    } catch (t) {
                        if (t.code === y.Yd.errors.CALL_EXCEPTION)
                            return null;
                        throw t
                    }
                })
            }
            _fetchBytes(t, e) {
                return w(this, void 0, void 0, function* () {
                    let r = yield this._fetch(t, e);
                    return null != r ? B(r, 0) : null
                })
            }
            _getAddress(t, e) {
                let r = T[String(t)];
                if (null == r && E.throwError(`unsupported coin type: ${t}`, y.Yd.errors.UNSUPPORTED_OPERATION, {
                    operation: `getAddress(${t})`
                }),
                    "eth" === r.ilk)
                    return this.provider.formatter.address(e);
                let n = (0,
                    a.lE)(e);
                if (null != r.p2pkh) {
                    let t = e.match(/^0x76a9([0-9a-f][0-9a-f])([0-9a-f]*)88ac$/);
                    if (t) {
                        let e = parseInt(t[1], 16);
                        if (t[2].length === 2 * e && e >= 1 && e <= 75)
                            return R((0,
                                a.zo)([[r.p2pkh], "0x" + t[2]]))
                    }
                }
                if (null != r.p2sh) {
                    let t = e.match(/^0xa9([0-9a-f][0-9a-f])([0-9a-f]*)87$/);
                    if (t) {
                        let e = parseInt(t[1], 16);
                        if (t[2].length === 2 * e && e >= 1 && e <= 75)
                            return R((0,
                                a.zo)([[r.p2sh], "0x" + t[2]]))
                    }
                }
                if (null != r.prefix) {
                    let t = n[1]
                        , e = n[0];
                    if (0 === e ? 20 !== t && 32 !== t && (e = -1) : e = -1,
                        e >= 0 && n.length === 2 + t && t >= 1 && t <= 75) {
                        let t = g().toWords(n.slice(2));
                        return t.unshift(e),
                            g().encode(r.prefix, t)
                    }
                }
                return null
            }
            getAddress(t) {
                return w(this, void 0, void 0, function* () {
                    if (null == t && (t = 60),
                        60 === t)
                        try {
                            let t = yield this._fetch("0x3b3b57de");
                            if ("0x" === t || t === l.R)
                                return null;
                            return this.provider.formatter.callAddress(t)
                        } catch (t) {
                            if (t.code === y.Yd.errors.CALL_EXCEPTION)
                                return null;
                            throw t
                        }
                    let e = yield this._fetchBytes("0xf1cb7e06", x(t));
                    if (null == e || "0x" === e)
                        return null;
                    let r = this._getAddress(t, e);
                    return null == r && E.throwError("invalid or unsupported coin data", y.Yd.errors.UNSUPPORTED_OPERATION, {
                        operation: `getAddress(${t})`,
                        coinType: t,
                        data: e
                    }),
                        r
                })
            }
            getAvatar() {
                return w(this, void 0, void 0, function* () {
                    let t = [{
                        type: "name",
                        content: this.name
                    }];
                    try {
                        let e = yield this.getText("avatar");
                        if (null == e)
                            return null;
                        for (let r = 0; r < O.length; r++) {
                            let n = e.match(O[r]);
                            if (null == n)
                                continue;
                            let i = n[1].toLowerCase();
                            switch (i) {
                                case "https":
                                    return t.push({
                                        type: "url",
                                        content: e
                                    }),
                                    {
                                        linkage: t,
                                        url: e
                                    };
                                case "data":
                                    return t.push({
                                        type: "data",
                                        content: e
                                    }),
                                    {
                                        linkage: t,
                                        url: e
                                    };
                                case "ipfs":
                                    return t.push({
                                        type: "ipfs",
                                        content: e
                                    }),
                                    {
                                        linkage: t,
                                        url: D(e)
                                    };
                                case "erc721":
                                case "erc1155":
                                    {
                                        let r = "erc721" === i ? "0xc87b56dd" : "0x0e89341c";
                                        t.push({
                                            type: i,
                                            content: e
                                        });
                                        let o = this._resolvedAddress || (yield this.getAddress())
                                            , l = (n[2] || "").split("/");
                                        if (2 !== l.length)
                                            return null;
                                        let u = yield this.provider.formatter.address(l[0])
                                            , c = (0,
                                                a.$m)(s.O$.from(l[1]).toHexString(), 32);
                                        if ("erc721" === i) {
                                            let e = this.provider.formatter.callAddress((yield this.provider.call({
                                                to: u,
                                                data: (0,
                                                    a.xs)(["0x6352211e", c])
                                            })));
                                            if (o !== e)
                                                return null;
                                            t.push({
                                                type: "owner",
                                                content: e
                                            })
                                        } else if ("erc1155" === i) {
                                            let e = s.O$.from((yield this.provider.call({
                                                to: u,
                                                data: (0,
                                                    a.xs)(["0x00fdd58e", (0,
                                                        a.$m)(o, 32), c])
                                            })));
                                            if (e.isZero())
                                                return null;
                                            t.push({
                                                type: "balance",
                                                content: e.toString()
                                            })
                                        }
                                        let h = {
                                            to: this.provider.formatter.address(l[0]),
                                            data: (0,
                                                a.xs)([r, c])
                                        }
                                            , f = M((yield this.provider.call(h)), 0);
                                        if (null == f)
                                            return null;
                                        t.push({
                                            type: "metadata-url-base",
                                            content: f
                                        }),
                                            "erc1155" === i && (f = f.replace("{id}", c.substring(2)),
                                                t.push({
                                                    type: "metadata-url-expanded",
                                                    content: f
                                                })),
                                            f.match(/^ipfs:/i) && (f = D(f)),
                                            t.push({
                                                type: "metadata-url",
                                                content: f
                                            });
                                        let d = yield (0,
                                            p.rd)(f);
                                        if (!d)
                                            return null;
                                        t.push({
                                            type: "metadata",
                                            content: JSON.stringify(d)
                                        });
                                        let m = d.image;
                                        if ("string" != typeof m)
                                            return null;
                                        if (m.match(/^(https:\/\/|data:)/i))
                                            ;
                                        else {
                                            let e = m.match(I);
                                            if (null == e)
                                                return null;
                                            t.push({
                                                type: "url-ipfs",
                                                content: m
                                            }),
                                                m = D(m)
                                        }
                                        return t.push({
                                            type: "url",
                                            content: m
                                        }),
                                        {
                                            linkage: t,
                                            url: m
                                        }
                                    }
                            }
                        }
                    } catch (t) { }
                    return null
                })
            }
            getContentHash() {
                return w(this, void 0, void 0, function* () {
                    let t = yield this._fetchBytes("0xbc1c58d1");
                    if (null == t || "0x" === t)
                        return null;
                    let e = t.match(/^0xe3010170(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);
                    if (e) {
                        let t = parseInt(e[3], 16);
                        if (e[4].length === 2 * t)
                            return "ipfs://" + o.eU.encode("0x" + e[1])
                    }
                    let r = t.match(/^0xe5010172(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);
                    if (r) {
                        let t = parseInt(r[3], 16);
                        if (r[4].length === 2 * t)
                            return "ipns://" + o.eU.encode("0x" + r[1])
                    }
                    let n = t.match(/^0xe40101fa011b20([0-9a-f]*)$/);
                    if (n && 64 === n[1].length)
                        return "bzz://" + n[1];
                    let s = t.match(/^0x90b2c605([0-9a-f]*)$/);
                    if (s && 68 === s[1].length) {
                        let t = {
                            "=": "",
                            "+": "-",
                            "/": "_"
                        };
                        return "sia://" + (0,
                            i.c)("0x" + s[1]).replace(/[=+\/]/g, e => t[e])
                    }
                    return E.throwError("invalid or unsupported content hash data", y.Yd.errors.UNSUPPORTED_OPERATION, {
                        operation: "getContentHash()",
                        data: t
                    })
                })
            }
            getText(t) {
                return w(this, void 0, void 0, function* () {
                    let e = (0,
                        d.Y0)(t);
                    (e = (0,
                        a.zo)([x(64), x(e.length), e])).length % 32 != 0 && (e = (0,
                            a.zo)([e, (0,
                                a.$m)("0x", 32 - t.length % 32)]));
                    let r = yield this._fetchBytes("0x59d1d43c", (0,
                        a.Dv)(e));
                    return null == r || "0x" === r ? null : (0,
                        d.ZN)(r)
                })
            }
        }
        let z = null
            , G = 1;
        class j extends n.zt {
            constructor(t) {
                if (super(),
                    this._events = [],
                    this._emitted = {
                        block: -2
                    },
                    this.disableCcipRead = !1,
                    this.formatter = new.target.getFormatter(),
                    (0,
                        h.zG)(this, "anyNetwork", "any" === t),
                    this.anyNetwork && (t = this.detectNetwork()),
                    t instanceof Promise)
                    this._networkPromise = t,
                        t.catch(t => { }
                        ),
                        this._ready().catch(t => { }
                        );
                else {
                    let e = (0,
                        h.tu)(new.target, "getNetwork")(t);
                    e ? ((0,
                        h.zG)(this, "_network", e),
                        this.emit("network", e, null)) : E.throwArgumentError("invalid network", "network", t)
                }
                this._maxInternalBlockNumber = -1024,
                    this._lastBlockNumber = -2,
                    this._maxFilterBlockRange = 10,
                    this._pollingInterval = 4e3,
                    this._fastQueryDate = 0
            }
            _ready() {
                return w(this, void 0, void 0, function* () {
                    if (null == this._network) {
                        let t = null;
                        if (this._networkPromise)
                            try {
                                t = yield this._networkPromise
                            } catch (t) { }
                        null == t && (t = yield this.detectNetwork()),
                            t || E.throwError("no network detected", y.Yd.errors.UNKNOWN_ERROR, {}),
                            null == this._network && (this.anyNetwork ? this._network = t : (0,
                                h.zG)(this, "_network", t),
                                this.emit("network", t, null))
                    }
                    return this._network
                })
            }
            get ready() {
                return (0,
                    p.$l)(() => this._ready().then(t => t, t => {
                        if (t.code !== y.Yd.errors.NETWORK_ERROR || "noNetwork" !== t.event)
                            throw t
                    }
                    ))
            }
            static getFormatter() {
                return null == z && (z = new b.Mb),
                    z
            }
            static getNetwork(t) {
                return (0,
                    c.H)(null == t ? "homestead" : t)
            }
            ccipReadFetch(t, e, r) {
                return w(this, void 0, void 0, function* () {
                    if (this.disableCcipRead || 0 === r.length)
                        return null;
                    let n = t.to.toLowerCase()
                        , i = e.toLowerCase()
                        , o = [];
                    for (let t = 0; t < r.length; t++) {
                        let e = r[t]
                            , s = e.replace("{sender}", n).replace("{data}", i)
                            , a = e.indexOf("{data}") >= 0 ? null : JSON.stringify({
                                data: i,
                                sender: n
                            })
                            , l = yield (0,
                                p.rd)({
                                    url: s,
                                    errorPassThrough: !0
                                }, a, (t, e) => (t.status = e.statusCode,
                                    t));
                        if (l.data)
                            return l.data;
                        let u = l.message || "unknown error";
                        if (l.status >= 400 && l.status < 500)
                            return E.throwError(`response not found during CCIP fetch: ${u}`, y.Yd.errors.SERVER_ERROR, {
                                url: e,
                                errorMessage: u
                            });
                        o.push(u)
                    }
                    return E.throwError(`error encountered during CCIP fetch: ${o.map(t => JSON.stringify(t)).join(", ")}`, y.Yd.errors.SERVER_ERROR, {
                        urls: r,
                        errorMessages: o
                    })
                })
            }
            _getInternalBlockNumber(t) {
                return w(this, void 0, void 0, function* () {
                    if (yield this._ready(),
                        t > 0)
                        for (; this._internalBlockNumber;) {
                            let e = this._internalBlockNumber;
                            try {
                                let r = yield e;
                                if (k() - r.respTime <= t)
                                    return r.blockNumber;
                                break
                            } catch (t) {
                                if (this._internalBlockNumber === e)
                                    break
                            }
                        }
                    let e = k()
                        , r = (0,
                            h.mE)({
                                blockNumber: this.perform("getBlockNumber", {}),
                                networkError: this.getNetwork().then(t => null, t => t)
                            }).then(({ blockNumber: t, networkError: n }) => {
                                if (n)
                                    throw this._internalBlockNumber === r && (this._internalBlockNumber = null),
                                    n;
                                let i = k();
                                return (t = s.O$.from(t).toNumber()) < this._maxInternalBlockNumber && (t = this._maxInternalBlockNumber),
                                    this._maxInternalBlockNumber = t,
                                    this._setFastBlockNumber(t),
                                {
                                    blockNumber: t,
                                    reqTime: e,
                                    respTime: i
                                }
                            }
                            );
                    return this._internalBlockNumber = r,
                        r.catch(t => {
                            this._internalBlockNumber === r && (this._internalBlockNumber = null)
                        }
                        ),
                        (yield r).blockNumber
                })
            }
            poll() {
                return w(this, void 0, void 0, function* () {
                    let t = G++
                        , e = []
                        , r = null;
                    try {
                        r = yield this._getInternalBlockNumber(100 + this.pollingInterval / 2)
                    } catch (t) {
                        this.emit("error", t);
                        return
                    }
                    if (this._setFastBlockNumber(r),
                        this.emit("poll", t, r),
                        r === this._lastBlockNumber) {
                        this.emit("didPoll", t);
                        return
                    }
                    if (-2 === this._emitted.block && (this._emitted.block = r - 1),
                        Math.abs(this._emitted.block - r) > 1e3)
                        E.warn(`network block skew detected; skipping block events (emitted=${this._emitted.block} blockNumber${r})`),
                            this.emit("error", E.makeError("network block skew detected", y.Yd.errors.NETWORK_ERROR, {
                                blockNumber: r,
                                event: "blockSkew",
                                previousBlockNumber: this._emitted.block
                            })),
                            this.emit("block", r);
                    else
                        for (let t = this._emitted.block + 1; t <= r; t++)
                            this.emit("block", t);
                    this._emitted.block !== r && (this._emitted.block = r,
                        Object.keys(this._emitted).forEach(t => {
                            if ("block" === t)
                                return;
                            let e = this._emitted[t];
                            "pending" !== e && r - e > 12 && delete this._emitted[t]
                        }
                        )),
                        -2 === this._lastBlockNumber && (this._lastBlockNumber = r - 1),
                        this._events.forEach(t => {
                            switch (t.type) {
                                case "tx":
                                    {
                                        let r = t.hash
                                            , n = this.getTransactionReceipt(r).then(t => (t && null != t.blockNumber && (this._emitted["t:" + r] = t.blockNumber,
                                                this.emit(r, t)),
                                                null)).catch(t => {
                                                    this.emit("error", t)
                                                }
                                                );
                                        e.push(n);
                                        break
                                    }
                                case "filter":
                                    if (!t._inflight) {
                                        t._inflight = !0,
                                            -2 === t._lastBlockNumber && (t._lastBlockNumber = r - 1);
                                        let n = t.filter;
                                        n.fromBlock = t._lastBlockNumber + 1,
                                            n.toBlock = r;
                                        let i = n.toBlock - this._maxFilterBlockRange;
                                        i > n.fromBlock && (n.fromBlock = i),
                                            n.fromBlock < 0 && (n.fromBlock = 0);
                                        let o = this.getLogs(n).then(e => {
                                            t._inflight = !1,
                                                0 !== e.length && e.forEach(e => {
                                                    e.blockNumber > t._lastBlockNumber && (t._lastBlockNumber = e.blockNumber),
                                                        this._emitted["b:" + e.blockHash] = e.blockNumber,
                                                        this._emitted["t:" + e.transactionHash] = e.blockNumber,
                                                        this.emit(n, e)
                                                }
                                                )
                                        }
                                        ).catch(e => {
                                            this.emit("error", e),
                                                t._inflight = !1
                                        }
                                        );
                                        e.push(o)
                                    }
                            }
                        }
                        ),
                        this._lastBlockNumber = r,
                        Promise.all(e).then(() => {
                            this.emit("didPoll", t)
                        }
                        ).catch(t => {
                            this.emit("error", t)
                        }
                        )
                })
            }
            resetEventsBlock(t) {
                this._lastBlockNumber = t - 1,
                    this.polling && this.poll()
            }
            get network() {
                return this._network
            }
            detectNetwork() {
                return w(this, void 0, void 0, function* () {
                    return E.throwError("provider does not support network detection", y.Yd.errors.UNSUPPORTED_OPERATION, {
                        operation: "provider.detectNetwork"
                    })
                })
            }
            getNetwork() {
                return w(this, void 0, void 0, function* () {
                    let t = yield this._ready()
                        , e = yield this.detectNetwork();
                    if (t.chainId !== e.chainId) {
                        if (this.anyNetwork)
                            return this._network = e,
                                this._lastBlockNumber = -2,
                                this._fastBlockNumber = null,
                                this._fastBlockNumberPromise = null,
                                this._fastQueryDate = 0,
                                this._emitted.block = -2,
                                this._maxInternalBlockNumber = -1024,
                                this._internalBlockNumber = null,
                                this.emit("network", e, t),
                                yield P(0),
                                this._network;
                        let r = E.makeError("underlying network changed", y.Yd.errors.NETWORK_ERROR, {
                            event: "changed",
                            network: t,
                            detectedNetwork: e
                        });
                        throw this.emit("error", r),
                        r
                    }
                    return t
                })
            }
            get blockNumber() {
                return this._getInternalBlockNumber(100 + this.pollingInterval / 2).then(t => {
                    this._setFastBlockNumber(t)
                }
                    , t => { }
                ),
                    null != this._fastBlockNumber ? this._fastBlockNumber : -1
            }
            get polling() {
                return null != this._poller
            }
            set polling(t) {
                t && !this._poller ? (this._poller = setInterval(() => {
                    this.poll()
                }
                    , this.pollingInterval),
                    this._bootstrapPoll || (this._bootstrapPoll = setTimeout(() => {
                        this.poll(),
                            this._bootstrapPoll = setTimeout(() => {
                                this._poller || this.poll(),
                                    this._bootstrapPoll = null
                            }
                                , this.pollingInterval)
                    }
                        , 0))) : !t && this._poller && (clearInterval(this._poller),
                            this._poller = null)
            }
            get pollingInterval() {
                return this._pollingInterval
            }
            set pollingInterval(t) {
                if ("number" != typeof t || t <= 0 || parseInt(String(t)) != t)
                    throw Error("invalid polling interval");
                this._pollingInterval = t,
                    this._poller && (clearInterval(this._poller),
                        this._poller = setInterval(() => {
                            this.poll()
                        }
                            , this._pollingInterval))
            }
            _getFastBlockNumber() {
                let t = k();
                return t - this._fastQueryDate > 2 * this._pollingInterval && (this._fastQueryDate = t,
                    this._fastBlockNumberPromise = this.getBlockNumber().then(t => ((null == this._fastBlockNumber || t > this._fastBlockNumber) && (this._fastBlockNumber = t),
                        this._fastBlockNumber))),
                    this._fastBlockNumberPromise
            }
            _setFastBlockNumber(t) {
                (null == this._fastBlockNumber || !(t < this._fastBlockNumber)) && (this._fastQueryDate = k(),
                    (null == this._fastBlockNumber || t > this._fastBlockNumber) && (this._fastBlockNumber = t,
                        this._fastBlockNumberPromise = Promise.resolve(t)))
            }
            waitForTransaction(t, e, r) {
                return w(this, void 0, void 0, function* () {
                    return this._waitForTransaction(t, null == e ? 1 : e, r || 0, null)
                })
            }
            _waitForTransaction(t, e, r, n) {
                return w(this, void 0, void 0, function* () {
                    let i = yield this.getTransactionReceipt(t);
                    return (i ? i.confirmations : 0) >= e ? i : new Promise((i, o) => {
                        let s = []
                            , a = !1
                            , l = function () {
                                return !!a || (a = !0,
                                    s.forEach(t => {
                                        t()
                                    }
                                    ),
                                    !1)
                            }
                            , u = t => {
                                t.confirmations < e || l() || i(t)
                            }
                            ;
                        if (this.on(t, u),
                            s.push(() => {
                                this.removeListener(t, u)
                            }
                            ),
                            n) {
                            let r = n.startBlock
                                , i = null
                                , u = s => w(this, void 0, void 0, function* () {
                                    a || (yield P(1e3),
                                        this.getTransactionCount(n.from).then(c => w(this, void 0, void 0, function* () {
                                            if (!a) {
                                                if (c <= n.nonce)
                                                    r = s;
                                                else {
                                                    {
                                                        let e = yield this.getTransaction(t);
                                                        if (e && null != e.blockNumber)
                                                            return
                                                    }
                                                    for (null == i && (i = r - 3) < n.startBlock && (i = n.startBlock); i <= s;) {
                                                        if (a)
                                                            return;
                                                        let r = yield this.getBlockWithTransactions(i);
                                                        for (let i = 0; i < r.transactions.length; i++) {
                                                            let s = r.transactions[i];
                                                            if (s.hash === t)
                                                                return;
                                                            if (s.from === n.from && s.nonce === n.nonce) {
                                                                if (a)
                                                                    return;
                                                                let r = yield this.waitForTransaction(s.hash, e);
                                                                if (l())
                                                                    return;
                                                                let i = "replaced";
                                                                s.data === n.data && s.to === n.to && s.value.eq(n.value) ? i = "repriced" : "0x" === s.data && s.from === s.to && s.value.isZero() && (i = "cancelled"),
                                                                    o(E.makeError("transaction was replaced", y.Yd.errors.TRANSACTION_REPLACED, {
                                                                        cancelled: "replaced" === i || "cancelled" === i,
                                                                        reason: i,
                                                                        replacement: this._wrapTransaction(s),
                                                                        hash: t,
                                                                        receipt: r
                                                                    }));
                                                                return
                                                            }
                                                        }
                                                        i++
                                                    }
                                                }
                                                a || this.once("block", u)
                                            }
                                        }), t => {
                                            a || this.once("block", u)
                                        }
                                        ))
                                });
                            if (a)
                                return;
                            this.once("block", u),
                                s.push(() => {
                                    this.removeListener("block", u)
                                }
                                )
                        }
                        if ("number" == typeof r && r > 0) {
                            let t = setTimeout(() => {
                                l() || o(E.makeError("timeout exceeded", y.Yd.errors.TIMEOUT, {
                                    timeout: r
                                }))
                            }
                                , r);
                            t.unref && t.unref(),
                                s.push(() => {
                                    clearTimeout(t)
                                }
                                )
                        }
                    }
                    )
                })
            }
            getBlockNumber() {
                return w(this, void 0, void 0, function* () {
                    return this._getInternalBlockNumber(0)
                })
            }
            getGasPrice() {
                return w(this, void 0, void 0, function* () {
                    yield this.getNetwork();
                    let t = yield this.perform("getGasPrice", {});
                    try {
                        return s.O$.from(t)
                    } catch (e) {
                        return E.throwError("bad result from backend", y.Yd.errors.SERVER_ERROR, {
                            method: "getGasPrice",
                            result: t,
                            error: e
                        })
                    }
                })
            }
            getBalance(t, e) {
                return w(this, void 0, void 0, function* () {
                    yield this.getNetwork();
                    let r = yield (0,
                        h.mE)({
                            address: this._getAddress(t),
                            blockTag: this._getBlockTag(e)
                        })
                        , n = yield this.perform("getBalance", r);
                    try {
                        return s.O$.from(n)
                    } catch (t) {
                        return E.throwError("bad result from backend", y.Yd.errors.SERVER_ERROR, {
                            method: "getBalance",
                            params: r,
                            result: n,
                            error: t
                        })
                    }
                })
            }
            getTransactionCount(t, e) {
                return w(this, void 0, void 0, function* () {
                    yield this.getNetwork();
                    let r = yield (0,
                        h.mE)({
                            address: this._getAddress(t),
                            blockTag: this._getBlockTag(e)
                        })
                        , n = yield this.perform("getTransactionCount", r);
                    try {
                        return s.O$.from(n).toNumber()
                    } catch (t) {
                        return E.throwError("bad result from backend", y.Yd.errors.SERVER_ERROR, {
                            method: "getTransactionCount",
                            params: r,
                            result: n,
                            error: t
                        })
                    }
                })
            }
            getCode(t, e) {
                return w(this, void 0, void 0, function* () {
                    yield this.getNetwork();
                    let r = yield (0,
                        h.mE)({
                            address: this._getAddress(t),
                            blockTag: this._getBlockTag(e)
                        })
                        , n = yield this.perform("getCode", r);
                    try {
                        return (0,
                            a.Dv)(n)
                    } catch (t) {
                        return E.throwError("bad result from backend", y.Yd.errors.SERVER_ERROR, {
                            method: "getCode",
                            params: r,
                            result: n,
                            error: t
                        })
                    }
                })
            }
            getStorageAt(t, e, r) {
                return w(this, void 0, void 0, function* () {
                    yield this.getNetwork();
                    let n = yield (0,
                        h.mE)({
                            address: this._getAddress(t),
                            blockTag: this._getBlockTag(r),
                            position: Promise.resolve(e).then(t => (0,
                                a.$P)(t))
                        })
                        , i = yield this.perform("getStorageAt", n);
                    try {
                        return (0,
                            a.Dv)(i)
                    } catch (t) {
                        return E.throwError("bad result from backend", y.Yd.errors.SERVER_ERROR, {
                            method: "getStorageAt",
                            params: n,
                            result: i,
                            error: t
                        })
                    }
                })
            }
            _wrapTransaction(t, e, r) {
                if (null != e && 32 !== (0,
                    a.E1)(e))
                    throw Error("invalid response - sendTransaction");
                return null != e && t.hash !== e && E.throwError("Transaction hash mismatch from Provider.sendTransaction.", y.Yd.errors.UNKNOWN_ERROR, {
                    expectedHash: t.hash,
                    returnedHash: e
                }),
                    t.wait = (e, n) => w(this, void 0, void 0, function* () {
                        let i;
                        null == e && (e = 1),
                            null == n && (n = 0),
                            0 !== e && null != r && (i = {
                                data: t.data,
                                from: t.from,
                                nonce: t.nonce,
                                to: t.to,
                                value: t.value,
                                startBlock: r
                            });
                        let o = yield this._waitForTransaction(t.hash, e, n, i);
                        return null == o && 0 === e ? null : (this._emitted["t:" + t.hash] = o.blockNumber,
                            0 === o.status && E.throwError("transaction failed", y.Yd.errors.CALL_EXCEPTION, {
                                transactionHash: t.hash,
                                transaction: t,
                                receipt: o
                            }),
                            o)
                    }),
                    t
            }
            sendTransaction(t) {
                return w(this, void 0, void 0, function* () {
                    yield this.getNetwork();
                    let e = yield Promise.resolve(t).then(t => (0,
                        a.Dv)(t))
                        , r = this.formatter.transaction(t);
                    null == r.confirmations && (r.confirmations = 0);
                    let n = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);
                    try {
                        let t = yield this.perform("sendTransaction", {
                            signedTransaction: e
                        });
                        return this._wrapTransaction(r, t, n)
                    } catch (t) {
                        throw t.transaction = r,
                        t.transactionHash = r.hash,
                        t
                    }
                })
            }
            _getTransactionRequest(t) {
                return w(this, void 0, void 0, function* () {
                    let e = yield t
                        , r = {};
                    return ["from", "to"].forEach(t => {
                        null != e[t] && (r[t] = Promise.resolve(e[t]).then(t => t ? this._getAddress(t) : null))
                    }
                    ),
                        ["gasLimit", "gasPrice", "maxFeePerGas", "maxPriorityFeePerGas", "value"].forEach(t => {
                            null != e[t] && (r[t] = Promise.resolve(e[t]).then(t => t ? s.O$.from(t) : null))
                        }
                        ),
                        ["type"].forEach(t => {
                            null != e[t] && (r[t] = Promise.resolve(e[t]).then(t => null != t ? t : null))
                        }
                        ),
                        e.accessList && (r.accessList = this.formatter.accessList(e.accessList)),
                        ["data"].forEach(t => {
                            null != e[t] && (r[t] = Promise.resolve(e[t]).then(t => t ? (0,
                                a.Dv)(t) : null))
                        }
                        ),
                        this.formatter.transactionRequest((yield (0,
                            h.mE)(r)))
                })
            }
            _getFilter(t) {
                return w(this, void 0, void 0, function* () {
                    t = yield t;
                    let e = {};
                    return null != t.address && (e.address = this._getAddress(t.address)),
                        ["blockHash", "topics"].forEach(r => {
                            null != t[r] && (e[r] = t[r])
                        }
                        ),
                        ["fromBlock", "toBlock"].forEach(r => {
                            null != t[r] && (e[r] = this._getBlockTag(t[r]))
                        }
                        ),
                        this.formatter.filter((yield (0,
                            h.mE)(e)))
                })
            }
            _call(t, e, r) {
                return w(this, void 0, void 0, function* () {
                    r >= 10 && E.throwError("CCIP read exceeded maximum redirections", y.Yd.errors.SERVER_ERROR, {
                        redirects: r,
                        transaction: t
                    });
                    let n = t.to
                        , i = yield this.perform("call", {
                            transaction: t,
                            blockTag: e
                        });
                    if (r >= 0 && "latest" === e && null != n && "0x556f1830" === i.substring(0, 10) && (0,
                        a.E1)(i) % 32 == 4)
                        try {
                            let o = (0,
                                a.p3)(i, 4)
                                , l = (0,
                                    a.p3)(o, 0, 32);
                            s.O$.from(l).eq(n) || E.throwError("CCIP Read sender did not match", y.Yd.errors.CALL_EXCEPTION, {
                                name: "OffchainLookup",
                                signature: "OffchainLookup(address,string[],bytes,bytes4,bytes)",
                                transaction: t,
                                data: i
                            });
                            let u = []
                                , c = s.O$.from((0,
                                    a.p3)(o, 32, 64)).toNumber()
                                , h = s.O$.from((0,
                                    a.p3)(o, c, c + 32)).toNumber()
                                , f = (0,
                                    a.p3)(o, c + 32);
                            for (let e = 0; e < h; e++) {
                                let r = M(f, 32 * e);
                                null == r && E.throwError("CCIP Read contained corrupt URL string", y.Yd.errors.CALL_EXCEPTION, {
                                    name: "OffchainLookup",
                                    signature: "OffchainLookup(address,string[],bytes,bytes4,bytes)",
                                    transaction: t,
                                    data: i
                                }),
                                    u.push(r)
                            }
                            let d = B(o, 64);
                            s.O$.from((0,
                                a.p3)(o, 100, 128)).isZero() || E.throwError("CCIP Read callback selector included junk", y.Yd.errors.CALL_EXCEPTION, {
                                    name: "OffchainLookup",
                                    signature: "OffchainLookup(address,string[],bytes,bytes4,bytes)",
                                    transaction: t,
                                    data: i
                                });
                            let p = (0,
                                a.p3)(o, 96, 100)
                                , m = B(o, 128)
                                , g = yield this.ccipReadFetch(t, d, u);
                            null == g && E.throwError("CCIP Read disabled or provided no URLs", y.Yd.errors.CALL_EXCEPTION, {
                                name: "OffchainLookup",
                                signature: "OffchainLookup(address,string[],bytes,bytes4,bytes)",
                                transaction: t,
                                data: i
                            });
                            let v = {
                                to: n,
                                data: (0,
                                    a.xs)([p, U([g, m])])
                            };
                            return this._call(v, e, r + 1)
                        } catch (t) {
                            if (t.code === y.Yd.errors.SERVER_ERROR)
                                throw t
                        }
                    try {
                        return (0,
                            a.Dv)(i)
                    } catch (r) {
                        return E.throwError("bad result from backend", y.Yd.errors.SERVER_ERROR, {
                            method: "call",
                            params: {
                                transaction: t,
                                blockTag: e
                            },
                            result: i,
                            error: r
                        })
                    }
                })
            }
            call(t, e) {
                return w(this, void 0, void 0, function* () {
                    yield this.getNetwork();
                    let r = yield (0,
                        h.mE)({
                            transaction: this._getTransactionRequest(t),
                            blockTag: this._getBlockTag(e),
                            ccipReadEnabled: Promise.resolve(t.ccipReadEnabled)
                        });
                    return this._call(r.transaction, r.blockTag, r.ccipReadEnabled ? 0 : -1)
                })
            }
            estimateGas(t) {
                return w(this, void 0, void 0, function* () {
                    yield this.getNetwork();
                    let e = yield (0,
                        h.mE)({
                            transaction: this._getTransactionRequest(t)
                        })
                        , r = yield this.perform("estimateGas", e);
                    try {
                        return s.O$.from(r)
                    } catch (t) {
                        return E.throwError("bad result from backend", y.Yd.errors.SERVER_ERROR, {
                            method: "estimateGas",
                            params: e,
                            result: r,
                            error: t
                        })
                    }
                })
            }
            _getAddress(t) {
                return w(this, void 0, void 0, function* () {
                    "string" != typeof (t = yield t) && E.throwArgumentError("invalid address or ENS name", "name", t);
                    let e = yield this.resolveName(t);
                    return null == e && E.throwError("ENS name not configured", y.Yd.errors.UNSUPPORTED_OPERATION, {
                        operation: `resolveName(${JSON.stringify(t)})`
                    }),
                        e
                })
            }
            _getBlock(t, e) {
                return w(this, void 0, void 0, function* () {
                    yield this.getNetwork(),
                        t = yield t;
                    let r = -128
                        , n = {
                            includeTransactions: !!e
                        };
                    if ((0,
                        a.A7)(t, 32))
                        n.blockHash = t;
                    else
                        try {
                            n.blockTag = yield this._getBlockTag(t),
                                (0,
                                    a.A7)(n.blockTag) && (r = parseInt(n.blockTag.substring(2), 16))
                        } catch (e) {
                            E.throwArgumentError("invalid block hash or block tag", "blockHashOrBlockTag", t)
                        }
                    return (0,
                        p.$l)(() => w(this, void 0, void 0, function* () {
                            let t = yield this.perform("getBlock", n);
                            if (null == t)
                                return null != n.blockHash && null == this._emitted["b:" + n.blockHash] || null != n.blockTag && r > this._emitted.block ? null : void 0;
                            if (e) {
                                let e = null;
                                for (let r = 0; r < t.transactions.length; r++) {
                                    let n = t.transactions[r];
                                    if (null == n.blockNumber)
                                        n.confirmations = 0;
                                    else if (null == n.confirmations) {
                                        null == e && (e = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval));
                                        let t = e - n.blockNumber + 1;
                                        t <= 0 && (t = 1),
                                            n.confirmations = t
                                    }
                                }
                                let r = this.formatter.blockWithTransactions(t);
                                return r.transactions = r.transactions.map(t => this._wrapTransaction(t)),
                                    r
                            }
                            return this.formatter.block(t)
                        }), {
                            oncePoll: this
                        })
                })
            }
            getBlock(t) {
                return this._getBlock(t, !1)
            }
            getBlockWithTransactions(t) {
                return this._getBlock(t, !0)
            }
            getTransaction(t) {
                return w(this, void 0, void 0, function* () {
                    yield this.getNetwork(),
                        t = yield t;
                    let e = {
                        transactionHash: this.formatter.hash(t, !0)
                    };
                    return (0,
                        p.$l)(() => w(this, void 0, void 0, function* () {
                            let r = yield this.perform("getTransaction", e);
                            if (null == r)
                                return null == this._emitted["t:" + t] ? null : void 0;
                            let n = this.formatter.transactionResponse(r);
                            if (null == n.blockNumber)
                                n.confirmations = 0;
                            else if (null == n.confirmations) {
                                let t = (yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval)) - n.blockNumber + 1;
                                t <= 0 && (t = 1),
                                    n.confirmations = t
                            }
                            return this._wrapTransaction(n)
                        }), {
                            oncePoll: this
                        })
                })
            }
            getTransactionReceipt(t) {
                return w(this, void 0, void 0, function* () {
                    yield this.getNetwork(),
                        t = yield t;
                    let e = {
                        transactionHash: this.formatter.hash(t, !0)
                    };
                    return (0,
                        p.$l)(() => w(this, void 0, void 0, function* () {
                            let r = yield this.perform("getTransactionReceipt", e);
                            if (null == r)
                                return null == this._emitted["t:" + t] ? null : void 0;
                            if (null == r.blockHash)
                                return;
                            let n = this.formatter.receipt(r);
                            if (null == n.blockNumber)
                                n.confirmations = 0;
                            else if (null == n.confirmations) {
                                let t = (yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval)) - n.blockNumber + 1;
                                t <= 0 && (t = 1),
                                    n.confirmations = t
                            }
                            return n
                        }), {
                            oncePoll: this
                        })
                })
            }
            getLogs(t) {
                return w(this, void 0, void 0, function* () {
                    yield this.getNetwork();
                    let e = yield (0,
                        h.mE)({
                            filter: this._getFilter(t)
                        })
                        , r = yield this.perform("getLogs", e);
                    return r.forEach(t => {
                        null == t.removed && (t.removed = !1)
                    }
                    ),
                        b.Mb.arrayOf(this.formatter.filterLog.bind(this.formatter))(r)
                })
            }
            getEtherPrice() {
                return w(this, void 0, void 0, function* () {
                    return yield this.getNetwork(),
                        this.perform("getEtherPrice", {})
                })
            }
            _getBlockTag(t) {
                return w(this, void 0, void 0, function* () {
                    if ("number" == typeof (t = yield t) && t < 0) {
                        t % 1 && E.throwArgumentError("invalid BlockTag", "blockTag", t);
                        let e = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);
                        return (e += t) < 0 && (e = 0),
                            this.formatter.blockTag(e)
                    }
                    return this.formatter.blockTag(t)
                })
            }
            getResolver(t) {
                return w(this, void 0, void 0, function* () {
                    let e = t;
                    for (; ;) {
                        if ("" === e || "." === e || "eth" !== t && "eth" === e)
                            return null;
                        let r = yield this._getResolver(e, "getResolver");
                        if (null != r) {
                            let n = new L(this, r, t);
                            if (e !== t && !(yield n.supportsWildcard()))
                                return null;
                            return n
                        }
                        e = e.split(".").slice(1).join(".")
                    }
                })
            }
            _getResolver(t, e) {
                return w(this, void 0, void 0, function* () {
                    null == e && (e = "ENS");
                    let r = yield this.getNetwork();
                    r.ensAddress || E.throwError("network does not support ENS", y.Yd.errors.UNSUPPORTED_OPERATION, {
                        operation: e,
                        network: r.name
                    });
                    try {
                        let e = yield this.call({
                            to: r.ensAddress,
                            data: "0x0178b8bf" + (0,
                                u.VM)(t).substring(2)
                        });
                        return this.formatter.callAddress(e)
                    } catch (t) { }
                    return null
                })
            }
            resolveName(t) {
                return w(this, void 0, void 0, function* () {
                    t = yield t;
                    try {
                        return Promise.resolve(this.formatter.address(t))
                    } catch (e) {
                        if ((0,
                            a.A7)(t))
                            throw e
                    }
                    "string" != typeof t && E.throwArgumentError("invalid ENS name", "name", t);
                    let e = yield this.getResolver(t);
                    return e ? yield e.getAddress() : null
                })
            }
            lookupAddress(t) {
                return w(this, void 0, void 0, function* () {
                    t = yield t;
                    let e = (t = this.formatter.address(t)).substring(2).toLowerCase() + ".addr.reverse"
                        , r = yield this._getResolver(e, "lookupAddress");
                    if (null == r)
                        return null;
                    let n = M((yield this.call({
                        to: r,
                        data: "0x691f3431" + (0,
                            u.VM)(e).substring(2)
                    })), 0);
                    return (yield this.resolveName(n)) != t ? null : n
                })
            }
            getAvatar(t) {
                return w(this, void 0, void 0, function* () {
                    let e = null;
                    if ((0,
                        a.A7)(t)) {
                        let r = this.formatter.address(t).substring(2).toLowerCase() + ".addr.reverse"
                            , n = yield this._getResolver(r, "getAvatar");
                        if (!n)
                            return null;
                        e = new L(this, n, r);
                        try {
                            let t = yield e.getAvatar();
                            if (t)
                                return t.url
                        } catch (t) {
                            if (t.code !== y.Yd.errors.CALL_EXCEPTION)
                                throw t
                        }
                        try {
                            let t = M((yield this.call({
                                to: n,
                                data: "0x691f3431" + (0,
                                    u.VM)(r).substring(2)
                            })), 0);
                            e = yield this.getResolver(t)
                        } catch (t) {
                            if (t.code !== y.Yd.errors.CALL_EXCEPTION)
                                throw t;
                            return null
                        }
                    } else if (!(e = yield this.getResolver(t)))
                        return null;
                    let r = yield e.getAvatar();
                    return null == r ? null : r.url
                })
            }
            perform(t, e) {
                return E.throwError(t + " not implemented", y.Yd.errors.NOT_IMPLEMENTED, {
                    operation: t
                })
            }
            _startEvent(t) {
                this.polling = this._events.filter(t => t.pollable()).length > 0
            }
            _stopEvent(t) {
                this.polling = this._events.filter(t => t.pollable()).length > 0
            }
            _addEventListener(t, e, r) {
                let n = new C(S(t), e, r);
                return this._events.push(n),
                    this._startEvent(n),
                    this
            }
            on(t, e) {
                return this._addEventListener(t, e, !1)
            }
            once(t, e) {
                return this._addEventListener(t, e, !0)
            }
            emit(t, ...e) {
                let r = !1
                    , n = []
                    , i = S(t);
                return this._events = this._events.filter(t => t.tag !== i || (setTimeout(() => {
                    t.listener.apply(this, e)
                }
                    , 0),
                    r = !0,
                    !t.once || (n.push(t),
                        !1))),
                    n.forEach(t => {
                        this._stopEvent(t)
                    }
                    ),
                    r
            }
            listenerCount(t) {
                if (!t)
                    return this._events.length;
                let e = S(t);
                return this._events.filter(t => t.tag === e).length
            }
            listeners(t) {
                if (null == t)
                    return this._events.map(t => t.listener);
                let e = S(t);
                return this._events.filter(t => t.tag === e).map(t => t.listener)
            }
            off(t, e) {
                if (null == e)
                    return this.removeAllListeners(t);
                let r = []
                    , n = !1
                    , i = S(t);
                return this._events = this._events.filter(t => t.tag !== i || t.listener != e || !!n || (n = !0,
                    r.push(t),
                    !1)),
                    r.forEach(t => {
                        this._stopEvent(t)
                    }
                    ),
                    this
            }
            removeAllListeners(t) {
                let e = [];
                if (null == t)
                    e = this._events,
                        this._events = [];
                else {
                    let r = S(t);
                    this._events = this._events.filter(t => t.tag !== r || (e.push(t),
                        !1))
                }
                return e.forEach(t => {
                    this._stopEvent(t)
                }
                ),
                    this
            }
        }
    },
    54259: function (t, e, r) {
        "use strict";
        r.d(e, {
            Ed: function () {
                return d
            },
            Gp: function () {
                return p
            },
            Mb: function () {
                return f
            },
            vh: function () {
                return g
            }
        });
        var n = r(18994)
            , i = r(92598)
            , o = r(57273)
            , s = r(5572)
            , a = r(17213)
            , l = r(12060)
            , u = r(36288)
            , c = r(12312);
        let h = new u.Yd(c.i);
        class f {
            constructor() {
                this.formats = this.getDefaultFormats()
            }
            getDefaultFormats() {
                let t = {}
                    , e = this.address.bind(this)
                    , r = this.bigNumber.bind(this)
                    , n = this.blockTag.bind(this)
                    , i = this.data.bind(this)
                    , o = this.hash.bind(this)
                    , s = this.hex.bind(this)
                    , l = this.number.bind(this)
                    , u = this.type.bind(this);
                return t.transaction = {
                    hash: o,
                    type: u,
                    accessList: f.allowNull(this.accessList.bind(this), null),
                    blockHash: f.allowNull(o, null),
                    blockNumber: f.allowNull(l, null),
                    transactionIndex: f.allowNull(l, null),
                    confirmations: f.allowNull(l, null),
                    from: e,
                    gasPrice: f.allowNull(r),
                    maxPriorityFeePerGas: f.allowNull(r),
                    maxFeePerGas: f.allowNull(r),
                    gasLimit: r,
                    to: f.allowNull(e, null),
                    value: r,
                    nonce: l,
                    data: i,
                    r: f.allowNull(this.uint256),
                    s: f.allowNull(this.uint256),
                    v: f.allowNull(l),
                    creates: f.allowNull(e, null),
                    raw: f.allowNull(i)
                },
                    t.transactionRequest = {
                        from: f.allowNull(e),
                        nonce: f.allowNull(l),
                        gasLimit: f.allowNull(r),
                        gasPrice: f.allowNull(r),
                        maxPriorityFeePerGas: f.allowNull(r),
                        maxFeePerGas: f.allowNull(r),
                        to: f.allowNull(e),
                        value: f.allowNull(r),
                        data: f.allowNull(t => this.data(t, !0)),
                        type: f.allowNull(l),
                        accessList: f.allowNull(this.accessList.bind(this), null)
                    },
                    t.receiptLog = {
                        transactionIndex: l,
                        blockNumber: l,
                        transactionHash: o,
                        address: e,
                        topics: f.arrayOf(o),
                        data: i,
                        logIndex: l,
                        blockHash: o
                    },
                    t.receipt = {
                        to: f.allowNull(this.address, null),
                        from: f.allowNull(this.address, null),
                        contractAddress: f.allowNull(e, null),
                        transactionIndex: l,
                        root: f.allowNull(s),
                        gasUsed: r,
                        logsBloom: f.allowNull(i),
                        blockHash: o,
                        transactionHash: o,
                        logs: f.arrayOf(this.receiptLog.bind(this)),
                        blockNumber: l,
                        confirmations: f.allowNull(l, null),
                        cumulativeGasUsed: r,
                        effectiveGasPrice: f.allowNull(r),
                        status: f.allowNull(l),
                        type: u
                    },
                    t.block = {
                        hash: f.allowNull(o),
                        parentHash: o,
                        number: l,
                        timestamp: l,
                        nonce: f.allowNull(s),
                        difficulty: this.difficulty.bind(this),
                        gasLimit: r,
                        gasUsed: r,
                        miner: f.allowNull(e),
                        extraData: i,
                        transactions: f.allowNull(f.arrayOf(o)),
                        baseFeePerGas: f.allowNull(r)
                    },
                    t.blockWithTransactions = (0,
                        a.DC)(t.block),
                    t.blockWithTransactions.transactions = f.allowNull(f.arrayOf(this.transactionResponse.bind(this))),
                    t.filter = {
                        fromBlock: f.allowNull(n, void 0),
                        toBlock: f.allowNull(n, void 0),
                        blockHash: f.allowNull(o, void 0),
                        address: f.allowNull(e, void 0),
                        topics: f.allowNull(this.topics.bind(this), void 0)
                    },
                    t.filterLog = {
                        blockNumber: f.allowNull(l),
                        blockHash: f.allowNull(o),
                        transactionIndex: l,
                        removed: f.allowNull(this.boolean.bind(this)),
                        address: e,
                        data: f.allowFalsish(i, "0x"),
                        topics: f.arrayOf(o),
                        transactionHash: o,
                        logIndex: l
                    },
                    t
            }
            accessList(t) {
                return (0,
                    l.z7)(t || [])
            }
            number(t) {
                return "0x" === t ? 0 : i.O$.from(t).toNumber()
            }
            type(t) {
                return "0x" === t || null == t ? 0 : i.O$.from(t).toNumber()
            }
            bigNumber(t) {
                return i.O$.from(t)
            }
            boolean(t) {
                if ("boolean" == typeof t)
                    return t;
                if ("string" == typeof t) {
                    if ("true" === (t = t.toLowerCase()))
                        return !0;
                    if ("false" === t)
                        return !1
                }
                throw Error("invalid boolean - " + t)
            }
            hex(t, e) {
                return "string" == typeof t && (e || "0x" === t.substring(0, 2) || (t = "0x" + t),
                    (0,
                        o.A7)(t)) ? t.toLowerCase() : h.throwArgumentError("invalid hash", "value", t)
            }
            data(t, e) {
                let r = this.hex(t, e);
                if (r.length % 2 != 0)
                    throw Error("invalid data; odd-length - " + t);
                return r
            }
            address(t) {
                return (0,
                    n.Kn)(t)
            }
            callAddress(t) {
                if (!(0,
                    o.A7)(t, 32))
                    return null;
                let e = (0,
                    n.Kn)((0,
                        o.p3)(t, 12));
                return e === s.d ? null : e
            }
            contractAddress(t) {
                return (0,
                    n.CR)(t)
            }
            blockTag(t) {
                if (null == t)
                    return "latest";
                if ("earliest" === t)
                    return "0x0";
                switch (t) {
                    case "earliest":
                        return "0x0";
                    case "latest":
                    case "pending":
                    case "safe":
                    case "finalized":
                        return t
                }
                if ("number" == typeof t || (0,
                    o.A7)(t))
                    return (0,
                        o.$P)(t);
                throw Error("invalid blockTag")
            }
            hash(t, e) {
                let r = this.hex(t, e);
                return 32 !== (0,
                    o.E1)(r) ? h.throwArgumentError("invalid hash", "value", t) : r
            }
            difficulty(t) {
                if (null == t)
                    return null;
                let e = i.O$.from(t);
                try {
                    return e.toNumber()
                } catch (t) { }
                return null
            }
            uint256(t) {
                if (!(0,
                    o.A7)(t))
                    throw Error("invalid uint256");
                return (0,
                    o.$m)(t, 32)
            }
            _block(t, e) {
                null != t.author && null == t.miner && (t.miner = t.author);
                let r = null != t._difficulty ? t._difficulty : t.difficulty
                    , n = f.check(e, t);
                return n._difficulty = null == r ? null : i.O$.from(r),
                    n
            }
            block(t) {
                return this._block(t, this.formats.block)
            }
            blockWithTransactions(t) {
                return this._block(t, this.formats.blockWithTransactions)
            }
            transactionRequest(t) {
                return f.check(this.formats.transactionRequest, t)
            }
            transactionResponse(t) {
                null != t.gas && null == t.gasLimit && (t.gasLimit = t.gas),
                    t.to && i.O$.from(t.to).isZero() && (t.to = "0x0000000000000000000000000000000000000000"),
                    null != t.input && null == t.data && (t.data = t.input),
                    null == t.to && null == t.creates && (t.creates = this.contractAddress(t)),
                    (1 === t.type || 2 === t.type) && null == t.accessList && (t.accessList = []);
                let e = f.check(this.formats.transaction, t);
                if (null != t.chainId) {
                    let r = t.chainId;
                    (0,
                        o.A7)(r) && (r = i.O$.from(r).toNumber()),
                        e.chainId = r
                } else {
                    let r = t.networkId;
                    null == r && null == e.v && (r = t.chainId),
                        (0,
                            o.A7)(r) && (r = i.O$.from(r).toNumber()),
                        "number" != typeof r && null != e.v && ((r = (e.v - 35) / 2) < 0 && (r = 0),
                            r = parseInt(r)),
                        "number" != typeof r && (r = 0),
                        e.chainId = r
                }
                return e.blockHash && "x" === e.blockHash.replace(/0/g, "") && (e.blockHash = null),
                    e
            }
            transaction(t) {
                return (0,
                    l.Qc)(t)
            }
            receiptLog(t) {
                return f.check(this.formats.receiptLog, t)
            }
            receipt(t) {
                let e = f.check(this.formats.receipt, t);
                if (null != e.root) {
                    if (e.root.length <= 4) {
                        let t = i.O$.from(e.root).toNumber();
                        0 === t || 1 === t ? (null != e.status && e.status !== t && h.throwArgumentError("alt-root-status/status mismatch", "value", {
                            root: e.root,
                            status: e.status
                        }),
                            e.status = t,
                            delete e.root) : h.throwArgumentError("invalid alt-root-status", "value.root", e.root)
                    } else
                        66 !== e.root.length && h.throwArgumentError("invalid root hash", "value.root", e.root)
                }
                return null != e.status && (e.byzantium = !0),
                    e
            }
            topics(t) {
                return Array.isArray(t) ? t.map(t => this.topics(t)) : null != t ? this.hash(t, !0) : null
            }
            filter(t) {
                return f.check(this.formats.filter, t)
            }
            filterLog(t) {
                return f.check(this.formats.filterLog, t)
            }
            static check(t, e) {
                let r = {};
                for (let n in t)
                    try {
                        let i = t[n](e[n]);
                        void 0 !== i && (r[n] = i)
                    } catch (t) {
                        throw t.checkKey = n,
                        t.checkValue = e[n],
                        t
                    }
                return r
            }
            static allowNull(t, e) {
                return function (r) {
                    return null == r ? e : t(r)
                }
            }
            static allowFalsish(t, e) {
                return function (r) {
                    return r ? t(r) : e
                }
            }
            static arrayOf(t) {
                return function (e) {
                    if (!Array.isArray(e))
                        throw Error("not an array");
                    let r = [];
                    return e.forEach(function (e) {
                        r.push(t(e))
                    }),
                        r
                }
            }
        }
        function d(t) {
            return t && "function" == typeof t.isCommunityResource
        }
        function p(t) {
            return d(t) && t.isCommunityResource()
        }
        let m = !1;
        function g() {
            m || (m = !0,
                console.log("========= NOTICE ========="),
                console.log("Request-Rate Exceeded  (this message will not be repeated)"),
                console.log(""),
                console.log("The default API keys for each service are provided as a highly-throttled,"),
                console.log("community resource for low-traffic projects and early prototyping."),
                console.log(""),
                console.log("While your application will continue to function, we highly recommended"),
                console.log("signing up for your own API keys to improve performance, increase your"),
                console.log("request rate/limit and enable other perks, such as metrics and advanced APIs."),
                console.log(""),
                console.log("For more details: https://docs.ethers.io/api-keys/"),
                console.log("=========================="))
        }
    },
    6384: function (t, e, r) {
        "use strict";
        r.d(e, {
            J: function () {
                return f
            },
            m: function () {
                return h
            }
        });
        var n = r(17213)
            , i = r(99227)
            , o = r(54259)
            , s = r(36288)
            , a = r(12312)
            , l = r(61127);
        let u = new s.Yd(a.i)
            , c = "84842078b09946638c03157f83405213";
        class h extends i.q {
            constructor(t, e) {
                let r = new f(t, e)
                    , i = r.connection;
                i.password && u.throwError("INFURA WebSocket project secrets unsupported", s.Yd.errors.UNSUPPORTED_OPERATION, {
                    operation: "InfuraProvider.getWebSocketProvider()"
                }),
                    super(i.url.replace(/^http/i, "ws").replace("/v3/", "/ws/v3/"), t),
                    (0,
                        n.zG)(this, "apiKey", r.projectId),
                    (0,
                        n.zG)(this, "projectId", r.projectId),
                    (0,
                        n.zG)(this, "projectSecret", r.projectSecret)
            }
            isCommunityResource() {
                return this.projectId === c
            }
        }
        class f extends l.l {
            static getWebSocketProvider(t, e) {
                return new h(t, e)
            }
            static getApiKey(t) {
                let e = {
                    apiKey: c,
                    projectId: c,
                    projectSecret: null
                };
                return null == t || ("string" == typeof t ? e.projectId = t : null != t.projectSecret ? (u.assertArgument("string" == typeof t.projectId, "projectSecret requires a projectId", "projectId", t.projectId),
                    u.assertArgument("string" == typeof t.projectSecret, "invalid projectSecret", "projectSecret", "[REDACTED]"),
                    e.projectId = t.projectId,
                    e.projectSecret = t.projectSecret) : t.projectId && (e.projectId = t.projectId),
                    e.apiKey = e.projectId),
                    e
            }
            static getUrl(t, e) {
                let r = null;
                switch (t ? t.name : "unknown") {
                    case "homestead":
                        r = "mainnet.infura.io";
                        break;
                    case "goerli":
                        r = "goerli.infura.io";
                        break;
                    case "sepolia":
                        r = "sepolia.infura.io";
                        break;
                    case "matic":
                        r = "polygon-mainnet.infura.io";
                        break;
                    case "maticmum":
                        r = "polygon-mumbai.infura.io";
                        break;
                    case "optimism":
                        r = "optimism-mainnet.infura.io";
                        break;
                    case "optimism-goerli":
                        r = "optimism-goerli.infura.io";
                        break;
                    case "arbitrum":
                        r = "arbitrum-mainnet.infura.io";
                        break;
                    case "arbitrum-goerli":
                        r = "arbitrum-goerli.infura.io";
                        break;
                    default:
                        u.throwError("unsupported network", s.Yd.errors.INVALID_ARGUMENT, {
                            argument: "network",
                            value: t
                        })
                }
                let n = {
                    allowGzip: !0,
                    url: "https://" + r + "/v3/" + e.projectId,
                    throttleCallback: (t, r) => (e.projectId === c && (0,
                        o.vh)(),
                        Promise.resolve(!0))
                };
                return null != e.projectSecret && (n.user = "",
                    n.password = e.projectSecret),
                    n
            }
            isCommunityResource() {
                return this.projectId === c
            }
        }
    },
    46795: function (t, e, r) {
        "use strict";
        r.d(e, {
            C: function () {
                return _
            },
            r: function () {
                return P
            }
        });
        var n = r(14941)
            , i = r(92598)
            , o = r(57273)
            , s = r(31822)
            , a = r(17213)
            , l = r(58337)
            , u = r(12060)
            , c = r(39318)
            , h = r(36288)
            , f = r(12312)
            , d = r(26790)
            , p = function (t, e, r, n) {
                return new (r || (r = Promise))(function (i, o) {
                    function s(t) {
                        try {
                            l(n.next(t))
                        } catch (t) {
                            o(t)
                        }
                    }
                    function a(t) {
                        try {
                            l(n.throw(t))
                        } catch (t) {
                            o(t)
                        }
                    }
                    function l(t) {
                        var e;
                        t.done ? i(t.value) : ((e = t.value) instanceof r ? e : new r(function (t) {
                            t(e)
                        }
                        )).then(s, a)
                    }
                    l((n = n.apply(t, e || [])).next())
                }
                )
            };
        let m = new h.Yd(f.i)
            , g = ["call", "estimateGas"];
        function y(t, e) {
            if (null == t)
                return null;
            if ("string" == typeof t.message && t.message.match("reverted")) {
                let r = (0,
                    o.A7)(t.data) ? t.data : null;
                if (!e || r)
                    return {
                        message: t.message,
                        data: r
                    }
            }
            if ("object" == typeof t) {
                for (let r in t) {
                    let n = y(t[r], e);
                    if (n)
                        return n
                }
                return null
            }
            if ("string" == typeof t)
                try {
                    return y(JSON.parse(t), e)
                } catch (t) { }
            return null
        }
        function v(t, e, r) {
            let n = r.transaction || r.signedTransaction;
            if ("call" === t) {
                let t = y(e, !0);
                if (t)
                    return t.data;
                m.throwError("missing revert data in call exception; Transaction reverted without a reason string", h.Yd.errors.CALL_EXCEPTION, {
                    data: "0x",
                    transaction: n,
                    error: e
                })
            }
            if ("estimateGas" === t) {
                let r = y(e.body, !1);
                null == r && (r = y(e, !1)),
                    r && m.throwError("cannot estimate gas; transaction may fail or may require manual gas limit", h.Yd.errors.UNPREDICTABLE_GAS_LIMIT, {
                        reason: r.message,
                        method: t,
                        transaction: n,
                        error: e
                    })
            }
            let i = e.message;
            throw e.code === h.Yd.errors.SERVER_ERROR && e.error && "string" == typeof e.error.message ? i = e.error.message : "string" == typeof e.body ? i = e.body : "string" == typeof e.responseText && (i = e.responseText),
            (i = (i || "").toLowerCase()).match(/insufficient funds|base fee exceeds gas limit|InsufficientFunds/i) && m.throwError("insufficient funds for intrinsic transaction cost", h.Yd.errors.INSUFFICIENT_FUNDS, {
                error: e,
                method: t,
                transaction: n
            }),
            i.match(/nonce (is )?too low/i) && m.throwError("nonce has already been used", h.Yd.errors.NONCE_EXPIRED, {
                error: e,
                method: t,
                transaction: n
            }),
            i.match(/replacement transaction underpriced|transaction gas price.*too low/i) && m.throwError("replacement fee too low", h.Yd.errors.REPLACEMENT_UNDERPRICED, {
                error: e,
                method: t,
                transaction: n
            }),
            i.match(/only replay-protected/i) && m.throwError("legacy pre-eip-155 transactions not supported", h.Yd.errors.UNSUPPORTED_OPERATION, {
                error: e,
                method: t,
                transaction: n
            }),
            g.indexOf(t) >= 0 && i.match(/gas required exceeds allowance|always failing transaction|execution reverted|revert/) && m.throwError("cannot estimate gas; transaction may fail or may require manual gas limit", h.Yd.errors.UNPREDICTABLE_GAS_LIMIT, {
                error: e,
                method: t,
                transaction: n
            }),
            e
        }
        function b(t) {
            return new Promise(function (e) {
                setTimeout(e, t)
            }
            )
        }
        function w(t) {
            if (t.error) {
                let e = Error(t.error.message);
                throw e.code = t.error.code,
                e.data = t.error.data,
                e
            }
            return t.result
        }
        function E(t) {
            return t ? t.toLowerCase() : t
        }
        let A = {};
        class _ extends n.E {
            constructor(t, e, r) {
                if (super(),
                    t !== A)
                    throw Error("do not call the JsonRpcSigner constructor directly; use provider.getSigner");
                (0,
                    a.zG)(this, "provider", e),
                    null == r && (r = 0),
                    "string" == typeof r ? ((0,
                        a.zG)(this, "_address", this.provider.formatter.address(r)),
                        (0,
                            a.zG)(this, "_index", null)) : "number" == typeof r ? ((0,
                                a.zG)(this, "_index", r),
                                (0,
                                    a.zG)(this, "_address", null)) : m.throwArgumentError("invalid address or index", "addressOrIndex", r)
            }
            connect(t) {
                return m.throwError("cannot alter JSON-RPC Signer connection", h.Yd.errors.UNSUPPORTED_OPERATION, {
                    operation: "connect"
                })
            }
            connectUnchecked() {
                return new S(A, this.provider, this._address || this._index)
            }
            getAddress() {
                return this._address ? Promise.resolve(this._address) : this.provider.send("eth_accounts", []).then(t => (t.length <= this._index && m.throwError("unknown account #" + this._index, h.Yd.errors.UNSUPPORTED_OPERATION, {
                    operation: "getAddress"
                }),
                    this.provider.formatter.address(t[this._index])))
            }
            sendUncheckedTransaction(t) {
                t = (0,
                    a.DC)(t);
                let e = this.getAddress().then(t => (t && (t = t.toLowerCase()),
                    t));
                if (null == t.gasLimit) {
                    let r = (0,
                        a.DC)(t);
                    r.from = e,
                        t.gasLimit = this.provider.estimateGas(r)
                }
                return null != t.to && (t.to = Promise.resolve(t.to).then(t => p(this, void 0, void 0, function* () {
                    if (null == t)
                        return null;
                    let e = yield this.provider.resolveName(t);
                    return null == e && m.throwArgumentError("provided ENS name resolves to null", "tx.to", t),
                        e
                }))),
                    (0,
                        a.mE)({
                            tx: (0,
                                a.mE)(t),
                            sender: e
                        }).then(({ tx: e, sender: r }) => {
                            null != e.from ? e.from.toLowerCase() !== r && m.throwArgumentError("from address mismatch", "transaction", t) : e.from = r;
                            let n = this.provider.constructor.hexlifyTransaction(e, {
                                from: !0
                            });
                            return this.provider.send("eth_sendTransaction", [n]).then(t => t, t => ("string" == typeof t.message && t.message.match(/user denied/i) && m.throwError("user rejected transaction", h.Yd.errors.ACTION_REJECTED, {
                                action: "sendTransaction",
                                transaction: e
                            }),
                                v("sendTransaction", t, n)))
                        }
                        )
            }
            signTransaction(t) {
                return m.throwError("signing transactions is unsupported", h.Yd.errors.UNSUPPORTED_OPERATION, {
                    operation: "signTransaction"
                })
            }
            sendTransaction(t) {
                return p(this, void 0, void 0, function* () {
                    let e = yield this.provider._getInternalBlockNumber(100 + 2 * this.provider.pollingInterval)
                        , r = yield this.sendUncheckedTransaction(t);
                    try {
                        return yield (0,
                            c.$l)(() => p(this, void 0, void 0, function* () {
                                let t = yield this.provider.getTransaction(r);
                                if (null !== t)
                                    return this.provider._wrapTransaction(t, r, e)
                            }), {
                                oncePoll: this.provider
                            })
                    } catch (t) {
                        throw t.transactionHash = r,
                        t
                    }
                })
            }
            signMessage(t) {
                return p(this, void 0, void 0, function* () {
                    let e = "string" == typeof t ? (0,
                        l.Y0)(t) : t
                        , r = yield this.getAddress();
                    try {
                        return yield this.provider.send("personal_sign", [(0,
                            o.Dv)(e), r.toLowerCase()])
                    } catch (e) {
                        throw "string" == typeof e.message && e.message.match(/user denied/i) && m.throwError("user rejected signing", h.Yd.errors.ACTION_REJECTED, {
                            action: "signMessage",
                            from: r,
                            messageData: t
                        }),
                        e
                    }
                })
            }
            _legacySignMessage(t) {
                return p(this, void 0, void 0, function* () {
                    let e = "string" == typeof t ? (0,
                        l.Y0)(t) : t
                        , r = yield this.getAddress();
                    try {
                        return yield this.provider.send("eth_sign", [r.toLowerCase(), (0,
                            o.Dv)(e)])
                    } catch (e) {
                        throw "string" == typeof e.message && e.message.match(/user denied/i) && m.throwError("user rejected signing", h.Yd.errors.ACTION_REJECTED, {
                            action: "_legacySignMessage",
                            from: r,
                            messageData: t
                        }),
                        e
                    }
                })
            }
            _signTypedData(t, e, r) {
                return p(this, void 0, void 0, function* () {
                    let n = yield s.E.resolveNames(t, e, r, t => this.provider.resolveName(t))
                        , i = yield this.getAddress();
                    try {
                        return yield this.provider.send("eth_signTypedData_v4", [i.toLowerCase(), JSON.stringify(s.E.getPayload(n.domain, e, n.value))])
                    } catch (t) {
                        throw "string" == typeof t.message && t.message.match(/user denied/i) && m.throwError("user rejected signing", h.Yd.errors.ACTION_REJECTED, {
                            action: "_signTypedData",
                            from: i,
                            messageData: {
                                domain: n.domain,
                                types: e,
                                value: n.value
                            }
                        }),
                        t
                    }
                })
            }
            unlock(t) {
                return p(this, void 0, void 0, function* () {
                    let e = this.provider
                        , r = yield this.getAddress();
                    return e.send("personal_unlockAccount", [r.toLowerCase(), t, null])
                })
            }
        }
        class S extends _ {
            sendTransaction(t) {
                return this.sendUncheckedTransaction(t).then(t => ({
                    hash: t,
                    nonce: null,
                    gasLimit: null,
                    gasPrice: null,
                    data: null,
                    value: null,
                    chainId: null,
                    confirmations: 0,
                    from: null,
                    wait: e => this.provider.waitForTransaction(t, e)
                }))
            }
        }
        let k = {
            chainId: !0,
            data: !0,
            gasLimit: !0,
            gasPrice: !0,
            nonce: !0,
            to: !0,
            value: !0,
            type: !0,
            accessList: !0,
            maxFeePerGas: !0,
            maxPriorityFeePerGas: !0
        };
        class P extends d.Zk {
            constructor(t, e) {
                let r = e;
                null == r && (r = new Promise((t, e) => {
                    setTimeout(() => {
                        this.detectNetwork().then(e => {
                            t(e)
                        }
                            , t => {
                                e(t)
                            }
                        )
                    }
                        , 0)
                }
                )),
                    super(r),
                    t || (t = (0,
                        a.tu)(this.constructor, "defaultUrl")()),
                    "string" == typeof t ? (0,
                        a.zG)(this, "connection", Object.freeze({
                            url: t
                        })) : (0,
                            a.zG)(this, "connection", Object.freeze((0,
                                a.DC)(t))),
                    this._nextId = 42
            }
            get _cache() {
                return null == this._eventLoopCache && (this._eventLoopCache = {}),
                    this._eventLoopCache
            }
            static defaultUrl() {
                return "http://localhost:8545"
            }
            detectNetwork() {
                return this._cache.detectNetwork || (this._cache.detectNetwork = this._uncachedDetectNetwork(),
                    setTimeout(() => {
                        this._cache.detectNetwork = null
                    }
                        , 0)),
                    this._cache.detectNetwork
            }
            _uncachedDetectNetwork() {
                return p(this, void 0, void 0, function* () {
                    yield b(0);
                    let t = null;
                    try {
                        t = yield this.send("eth_chainId", [])
                    } catch (e) {
                        try {
                            t = yield this.send("net_version", [])
                        } catch (t) { }
                    }
                    if (null != t) {
                        let e = (0,
                            a.tu)(this.constructor, "getNetwork");
                        try {
                            return e(i.O$.from(t).toNumber())
                        } catch (e) {
                            return m.throwError("could not detect network", h.Yd.errors.NETWORK_ERROR, {
                                chainId: t,
                                event: "invalidNetwork",
                                serverError: e
                            })
                        }
                    }
                    return m.throwError("could not detect network", h.Yd.errors.NETWORK_ERROR, {
                        event: "noNetwork"
                    })
                })
            }
            getSigner(t) {
                return new _(A, this, t)
            }
            getUncheckedSigner(t) {
                return this.getSigner(t).connectUnchecked()
            }
            listAccounts() {
                return this.send("eth_accounts", []).then(t => t.map(t => this.formatter.address(t)))
            }
            send(t, e) {
                let r = {
                    method: t,
                    params: e,
                    id: this._nextId++,
                    jsonrpc: "2.0"
                };
                this.emit("debug", {
                    action: "request",
                    request: (0,
                        a.p$)(r),
                    provider: this
                });
                let n = ["eth_chainId", "eth_blockNumber"].indexOf(t) >= 0;
                if (n && this._cache[t])
                    return this._cache[t];
                let i = (0,
                    c.rd)(this.connection, JSON.stringify(r), w).then(t => (this.emit("debug", {
                        action: "response",
                        request: r,
                        response: t,
                        provider: this
                    }),
                        t), t => {
                            throw this.emit("debug", {
                                action: "response",
                                error: t,
                                request: r,
                                provider: this
                            }),
                            t
                        }
                    );
                return n && (this._cache[t] = i,
                    setTimeout(() => {
                        this._cache[t] = null
                    }
                        , 0)),
                    i
            }
            prepareRequest(t, e) {
                switch (t) {
                    case "getBlockNumber":
                        return ["eth_blockNumber", []];
                    case "getGasPrice":
                        return ["eth_gasPrice", []];
                    case "getBalance":
                        return ["eth_getBalance", [E(e.address), e.blockTag]];
                    case "getTransactionCount":
                        return ["eth_getTransactionCount", [E(e.address), e.blockTag]];
                    case "getCode":
                        return ["eth_getCode", [E(e.address), e.blockTag]];
                    case "getStorageAt":
                        return ["eth_getStorageAt", [E(e.address), (0,
                            o.$m)(e.position, 32), e.blockTag]];
                    case "sendTransaction":
                        return ["eth_sendRawTransaction", [e.signedTransaction]];
                    case "getBlock":
                        if (e.blockTag)
                            return ["eth_getBlockByNumber", [e.blockTag, !!e.includeTransactions]];
                        if (e.blockHash)
                            return ["eth_getBlockByHash", [e.blockHash, !!e.includeTransactions]];
                        break;
                    case "getTransaction":
                        return ["eth_getTransactionByHash", [e.transactionHash]];
                    case "getTransactionReceipt":
                        return ["eth_getTransactionReceipt", [e.transactionHash]];
                    case "call":
                        return ["eth_call", [(0,
                            a.tu)(this.constructor, "hexlifyTransaction")(e.transaction, {
                                from: !0
                            }), e.blockTag]];
                    case "estimateGas":
                        return ["eth_estimateGas", [(0,
                            a.tu)(this.constructor, "hexlifyTransaction")(e.transaction, {
                                from: !0
                            })]];
                    case "getLogs":
                        return e.filter && null != e.filter.address && (e.filter.address = E(e.filter.address)),
                            ["eth_getLogs", [e.filter]]
                }
                return null
            }
            perform(t, e) {
                return p(this, void 0, void 0, function* () {
                    if ("call" === t || "estimateGas" === t) {
                        let t = e.transaction;
                        if (t && null != t.type && i.O$.from(t.type).isZero() && null == t.maxFeePerGas && null == t.maxPriorityFeePerGas) {
                            let r = yield this.getFeeData();
                            null == r.maxFeePerGas && null == r.maxPriorityFeePerGas && ((e = (0,
                                a.DC)(e)).transaction = (0,
                                    a.DC)(t),
                                delete e.transaction.type)
                        }
                    }
                    let r = this.prepareRequest(t, e);
                    null == r && m.throwError(t + " not implemented", h.Yd.errors.NOT_IMPLEMENTED, {
                        operation: t
                    });
                    try {
                        return yield this.send(r[0], r[1])
                    } catch (r) {
                        return v(t, r, e)
                    }
                })
            }
            _startEvent(t) {
                "pending" === t.tag && this._startPending(),
                    super._startEvent(t)
            }
            _startPending() {
                if (null != this._pendingFilter)
                    return;
                let t = this
                    , e = this.send("eth_newPendingTransactionFilter", []);
                this._pendingFilter = e,
                    e.then(function (r) {
                        return function n() {
                            t.send("eth_getFilterChanges", [r]).then(function (r) {
                                if (t._pendingFilter != e)
                                    return null;
                                let n = Promise.resolve();
                                return r.forEach(function (e) {
                                    t._emitted["t:" + e.toLowerCase()] = "pending",
                                        n = n.then(function () {
                                            return t.getTransaction(e).then(function (e) {
                                                return t.emit("pending", e),
                                                    null
                                            })
                                        })
                                }),
                                    n.then(function () {
                                        return b(1e3)
                                    })
                            }).then(function () {
                                if (t._pendingFilter != e) {
                                    t.send("eth_uninstallFilter", [r]);
                                    return
                                }
                                return setTimeout(function () {
                                    n()
                                }, 0),
                                    null
                            }).catch(t => { }
                            )
                        }(),
                            r
                    }).catch(t => { }
                    )
            }
            _stopEvent(t) {
                "pending" === t.tag && 0 === this.listenerCount("pending") && (this._pendingFilter = null),
                    super._stopEvent(t)
            }
            static hexlifyTransaction(t, e) {
                let r = (0,
                    a.DC)(k);
                if (e)
                    for (let t in e)
                        e[t] && (r[t] = !0);
                (0,
                    a.uj)(t, r);
                let n = {};
                return ["chainId", "gasLimit", "gasPrice", "type", "maxFeePerGas", "maxPriorityFeePerGas", "nonce", "value"].forEach(function (e) {
                    if (null == t[e])
                        return;
                    let r = (0,
                        o.$P)(i.O$.from(t[e]));
                    "gasLimit" === e && (e = "gas"),
                        n[e] = r
                }),
                    ["from", "to", "data"].forEach(function (e) {
                        null != t[e] && (n[e] = (0,
                            o.Dv)(t[e]))
                    }),
                    t.accessList && (n.accessList = (0,
                        u.z7)(t.accessList)),
                    n
            }
        }
    },
    61127: function (t, e, r) {
        "use strict";
        r.d(e, {
            c: function () {
                return l
            },
            l: function () {
                return u
            }
        });
        var n = r(17213)
            , i = r(36288)
            , o = r(12312)
            , s = r(46795);
        let a = new i.Yd(o.i);
        class l extends s.r {
            detectNetwork() {
                var t, e, r, o;
                let s = Object.create(null, {
                    detectNetwork: {
                        get: () => super.detectNetwork
                    }
                });
                return t = this,
                    e = void 0,
                    r = void 0,
                    o = function* () {
                        let t = this.network;
                        return null == t && ((t = yield s.detectNetwork.call(this)) || a.throwError("no network detected", i.Yd.errors.UNKNOWN_ERROR, {}),
                            null == this._network && ((0,
                                n.zG)(this, "_network", t),
                                this.emit("network", t, null))),
                            t
                    }
                    ,
                    new (r || (r = Promise))(function (n, i) {
                        function s(t) {
                            try {
                                l(o.next(t))
                            } catch (t) {
                                i(t)
                            }
                        }
                        function a(t) {
                            try {
                                l(o.throw(t))
                            } catch (t) {
                                i(t)
                            }
                        }
                        function l(t) {
                            var e;
                            t.done ? n(t.value) : ((e = t.value) instanceof r ? e : new r(function (t) {
                                t(e)
                            }
                            )).then(s, a)
                        }
                        l((o = o.apply(t, e || [])).next())
                    }
                    )
            }
        }
        class u extends l {
            constructor(t, e) {
                a.checkAbstract(new.target, u),
                    t = (0,
                        n.tu)(new.target, "getNetwork")(t),
                    super((0,
                        n.tu)(new.target, "getUrl")(t, e = (0,
                            n.tu)(new.target, "getApiKey")(e)), t),
                    "string" == typeof e ? (0,
                        n.zG)(this, "apiKey", e) : null != e && Object.keys(e).forEach(t => {
                            (0,
                                n.zG)(this, t, e[t])
                        }
                        )
            }
            _startPending() {
                a.warn("WARNING: API provider does not support pending filters")
            }
            isCommunityResource() {
                return !1
            }
            getSigner(t) {
                return a.throwError("API provider does not support signing", i.Yd.errors.UNSUPPORTED_OPERATION, {
                    operation: "getSigner"
                })
            }
            listAccounts() {
                return Promise.resolve([])
            }
            static getApiKey(t) {
                return t
            }
            static getUrl(t, e) {
                return a.throwError("not implemented; sub-classes must override getUrl", i.Yd.errors.NOT_IMPLEMENTED, {
                    operation: "getUrl"
                })
            }
        }
    },
    99227: function (t, e, r) {
        "use strict";
        r.d(e, {
            q: function () {
                return f
            }
        });
        var n = r(92598)
            , i = r(17213)
            , o = r(46795)
            , s = r(36288)
            , a = r(12312);
        let l = null;
        try {
            if (l = WebSocket,
                null == l)
                throw Error("inject please")
        } catch (e) {
            let t = new s.Yd(a.i);
            l = function () {
                t.throwError("WebSockets not supported in this environment", s.Yd.errors.UNSUPPORTED_OPERATION, {
                    operation: "new WebSocket()"
                })
            }
        }
        var u = function (t, e, r, n) {
            return new (r || (r = Promise))(function (i, o) {
                function s(t) {
                    try {
                        l(n.next(t))
                    } catch (t) {
                        o(t)
                    }
                }
                function a(t) {
                    try {
                        l(n.throw(t))
                    } catch (t) {
                        o(t)
                    }
                }
                function l(t) {
                    var e;
                    t.done ? i(t.value) : ((e = t.value) instanceof r ? e : new r(function (t) {
                        t(e)
                    }
                    )).then(s, a)
                }
                l((n = n.apply(t, e || [])).next())
            }
            )
        };
        let c = new s.Yd(a.i)
            , h = 1;
        class f extends o.r {
            constructor(t, e) {
                "any" === e && c.throwError("WebSocketProvider does not support 'any' network yet", s.Yd.errors.UNSUPPORTED_OPERATION, {
                    operation: "network:any"
                }),
                    "string" == typeof t ? super(t, e) : super("_websocket", e),
                    this._pollingInterval = -1,
                    this._wsReady = !1,
                    "string" == typeof t ? (0,
                        i.zG)(this, "_websocket", new l(this.connection.url)) : (0,
                            i.zG)(this, "_websocket", t),
                    (0,
                        i.zG)(this, "_requests", {}),
                    (0,
                        i.zG)(this, "_subs", {}),
                    (0,
                        i.zG)(this, "_subIds", {}),
                    (0,
                        i.zG)(this, "_detectNetwork", super.detectNetwork()),
                    this.websocket.onopen = () => {
                        this._wsReady = !0,
                            Object.keys(this._requests).forEach(t => {
                                this.websocket.send(this._requests[t].payload)
                            }
                            )
                    }
                    ,
                    this.websocket.onmessage = t => {
                        let e = t.data
                            , r = JSON.parse(e);
                        if (null != r.id) {
                            let t = String(r.id)
                                , n = this._requests[t];
                            if (delete this._requests[t],
                                void 0 !== r.result)
                                n.callback(null, r.result),
                                    this.emit("debug", {
                                        action: "response",
                                        request: JSON.parse(n.payload),
                                        response: r.result,
                                        provider: this
                                    });
                            else {
                                let t = null;
                                r.error ? (t = Error(r.error.message || "unknown error"),
                                    (0,
                                        i.zG)(t, "code", r.error.code || null),
                                    (0,
                                        i.zG)(t, "response", e)) : t = Error("unknown error"),
                                    n.callback(t, void 0),
                                    this.emit("debug", {
                                        action: "response",
                                        error: t,
                                        request: JSON.parse(n.payload),
                                        provider: this
                                    })
                            }
                        } else if ("eth_subscription" === r.method) {
                            let t = this._subs[r.params.subscription];
                            t && t.processFunc(r.params.result)
                        } else
                            console.warn("this should not happen")
                    }
                    ;
                let r = setInterval(() => {
                    this.emit("poll")
                }
                    , 1e3);
                r.unref && r.unref()
            }
            get websocket() {
                return this._websocket
            }
            detectNetwork() {
                return this._detectNetwork
            }
            get pollingInterval() {
                return 0
            }
            resetEventsBlock(t) {
                c.throwError("cannot reset events block on WebSocketProvider", s.Yd.errors.UNSUPPORTED_OPERATION, {
                    operation: "resetEventBlock"
                })
            }
            set pollingInterval(t) {
                c.throwError("cannot set polling interval on WebSocketProvider", s.Yd.errors.UNSUPPORTED_OPERATION, {
                    operation: "setPollingInterval"
                })
            }
            poll() {
                return u(this, void 0, void 0, function* () {
                    return null
                })
            }
            set polling(t) {
                t && c.throwError("cannot set polling on WebSocketProvider", s.Yd.errors.UNSUPPORTED_OPERATION, {
                    operation: "setPolling"
                })
            }
            send(t, e) {
                let r = h++;
                return new Promise((n, i) => {
                    let o = JSON.stringify({
                        method: t,
                        params: e,
                        id: r,
                        jsonrpc: "2.0"
                    });
                    this.emit("debug", {
                        action: "request",
                        request: JSON.parse(o),
                        provider: this
                    }),
                        this._requests[String(r)] = {
                            callback: function (t, e) {
                                return t ? i(t) : n(e)
                            },
                            payload: o
                        },
                        this._wsReady && this.websocket.send(o)
                }
                )
            }
            static defaultUrl() {
                return "ws://localhost:8546"
            }
            _subscribe(t, e, r) {
                return u(this, void 0, void 0, function* () {
                    let n = this._subIds[t];
                    null == n && (n = Promise.all(e).then(t => this.send("eth_subscribe", t)),
                        this._subIds[t] = n);
                    let i = yield n;
                    this._subs[i] = {
                        tag: t,
                        processFunc: r
                    }
                })
            }
            _startEvent(t) {
                switch (t.type) {
                    case "block":
                        this._subscribe("block", ["newHeads"], t => {
                            let e = n.O$.from(t.number).toNumber();
                            this._emitted.block = e,
                                this.emit("block", e)
                        }
                        );
                        break;
                    case "pending":
                        this._subscribe("pending", ["newPendingTransactions"], t => {
                            this.emit("pending", t)
                        }
                        );
                        break;
                    case "filter":
                        this._subscribe(t.tag, ["logs", this._getFilter(t.filter)], e => {
                            null == e.removed && (e.removed = !1),
                                this.emit(t.filter, this.formatter.filterLog(e))
                        }
                        );
                        break;
                    case "tx":
                        {
                            let e = t => {
                                let e = t.hash;
                                this.getTransactionReceipt(e).then(t => {
                                    t && this.emit(e, t)
                                }
                                )
                            }
                                ;
                            e(t),
                                this._subscribe("tx", ["newHeads"], t => {
                                    this._events.filter(t => "tx" === t.type).forEach(e)
                                }
                                );
                            break
                        }
                    case "debug":
                    case "poll":
                    case "willPoll":
                    case "didPoll":
                    case "error":
                        break;
                    default:
                        console.log("unhandled:", t)
                }
            }
            _stopEvent(t) {
                let e = t.tag;
                if ("tx" === t.type) {
                    if (this._events.filter(t => "tx" === t.type).length)
                        return;
                    e = "tx"
                } else if (this.listenerCount(t.event))
                    return;
                let r = this._subIds[e];
                r && (delete this._subIds[e],
                    r.then(t => {
                        this._subs[t] && (delete this._subs[t],
                            this.send("eth_unsubscribe", [t]))
                    }
                    ))
            }
            destroy() {
                return u(this, void 0, void 0, function* () {
                    this.websocket.readyState === l.CONNECTING && (yield new Promise(t => {
                        this.websocket.onopen = function () {
                            t(!0)
                        }
                            ,
                            this.websocket.onerror = function () {
                                t(!1)
                            }
                    }
                    )),
                        this.websocket.close(1e3)
                })
            }
        }
    },
    7054: function (t, e, r) {
        "use strict";
        r.r(e),
            r.d(e, {
                decode: function () {
                    return h
                },
                encode: function () {
                    return l
                }
            });
        var n = r(57273)
            , i = r(36288);
        let o = new i.Yd("rlp/5.7.0");
        function s(t) {
            let e = [];
            for (; t;)
                e.unshift(255 & t),
                    t >>= 8;
            return e
        }
        function a(t, e, r) {
            let n = 0;
            for (let i = 0; i < r; i++)
                n = 256 * n + t[e + i];
            return n
        }
        function l(t) {
            return (0,
                n.Dv)(function t(e) {
                    if (Array.isArray(e)) {
                        let r = [];
                        if (e.forEach(function (e) {
                            r = r.concat(t(e))
                        }),
                            r.length <= 55)
                            return r.unshift(192 + r.length),
                                r;
                        let n = s(r.length);
                        return n.unshift(247 + n.length),
                            n.concat(r)
                    }
                    (0,
                        n.Zq)(e) || o.throwArgumentError("RLP object must be BytesLike", "object", e);
                    let r = Array.prototype.slice.call((0,
                        n.lE)(e));
                    if (1 === r.length && r[0] <= 127)
                        return r;
                    if (r.length <= 55)
                        return r.unshift(128 + r.length),
                            r;
                    let i = s(r.length);
                    return i.unshift(183 + i.length),
                        i.concat(r)
                }(t))
        }
        function u(t, e, r, n) {
            let s = [];
            for (; r < e + 1 + n;) {
                let a = c(t, r);
                s.push(a.result),
                    (r += a.consumed) > e + 1 + n && o.throwError("child data too short", i.Yd.errors.BUFFER_OVERRUN, {})
            }
            return {
                consumed: 1 + n,
                result: s
            }
        }
        function c(t, e) {
            if (0 === t.length && o.throwError("data too short", i.Yd.errors.BUFFER_OVERRUN, {}),
                t[e] >= 248) {
                let r = t[e] - 247;
                e + 1 + r > t.length && o.throwError("data short segment too short", i.Yd.errors.BUFFER_OVERRUN, {});
                let n = a(t, e + 1, r);
                return e + 1 + r + n > t.length && o.throwError("data long segment too short", i.Yd.errors.BUFFER_OVERRUN, {}),
                    u(t, e, e + 1 + r, r + n)
            }
            if (t[e] >= 192) {
                let r = t[e] - 192;
                return e + 1 + r > t.length && o.throwError("data array too short", i.Yd.errors.BUFFER_OVERRUN, {}),
                    u(t, e, e + 1, r)
            }
            if (t[e] >= 184) {
                let r = t[e] - 183;
                e + 1 + r > t.length && o.throwError("data array too short", i.Yd.errors.BUFFER_OVERRUN, {});
                let s = a(t, e + 1, r);
                e + 1 + r + s > t.length && o.throwError("data array too short", i.Yd.errors.BUFFER_OVERRUN, {});
                let l = (0,
                    n.Dv)(t.slice(e + 1 + r, e + 1 + r + s));
                return {
                    consumed: 1 + r + s,
                    result: l
                }
            }
            if (t[e] >= 128) {
                let r = t[e] - 128;
                e + 1 + r > t.length && o.throwError("data too short", i.Yd.errors.BUFFER_OVERRUN, {});
                let s = (0,
                    n.Dv)(t.slice(e + 1, e + 1 + r));
                return {
                    consumed: 1 + r,
                    result: s
                }
            }
            return {
                consumed: 1,
                result: (0,
                    n.Dv)(t[e])
            }
        }
        function h(t) {
            let e = (0,
                n.lE)(t)
                , r = c(e, 0);
            return r.consumed !== e.length && o.throwArgumentError("invalid rlp data", "data", t),
                r.result
        }
    },
    37815: function (t, e, r) {
        "use strict";
        r.d(e, {
            Gy: function () {
                return f
            },
            bP: function () {
                return u
            },
            JQ: function () {
                return c
            },
            o: function () {
                return h
            }
        });
        var n = r(55336)
            , i = r.n(n)
            , o = r(57273)
            , s = r(67557)
            , a = r(36288);
        let l = new a.Yd("sha2/5.7.0");
        function u(t) {
            return "0x" + i().ripemd160().update((0,
                o.lE)(t)).digest("hex")
        }
        function c(t) {
            return "0x" + i().sha256().update((0,
                o.lE)(t)).digest("hex")
        }
        function h(t) {
            return "0x" + i().sha512().update((0,
                o.lE)(t)).digest("hex")
        }
        function f(t, e, r) {
            return s.p[t] || l.throwError("unsupported algorithm " + t, a.Yd.errors.UNSUPPORTED_OPERATION, {
                operation: "hmac",
                algorithm: t
            }),
                "0x" + i().hmac(i()[t], (0,
                    o.lE)(e)).update((0,
                        o.lE)(r)).digest("hex")
        }
    },
    67557: function (t, e, r) {
        "use strict";
        var n, i;
        r.d(e, {
            p: function () {
                return n
            }
        }),
            (i = n || (n = {})).sha256 = "sha256",
            i.sha512 = "sha512"
    },
    74731: function (t, e, r) {
        "use strict";
        r.d(e, {
            Et: function () {
                return j
            },
            VW: function () {
                return K
            },
            LO: function () {
                return Y
            }
        });
        var n = r(56662)
            , i = r.n(n)
            , o = r(55336)
            , s = r.n(o);
        function a(t, e, r) {
            return t(r = {
                path: e,
                exports: {},
                require: function (t, e) {
                    return function () {
                        throw Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs")
                    }(t, null == e ? r.path : e)
                }
            }, r.exports),
                r.exports
        }
        "undefined" != typeof globalThis ? globalThis : "undefined" != typeof window ? window : void 0 !== r.g ? r.g : "undefined" != typeof self && self;
        var l = u;
        function u(t, e) {
            if (!t)
                throw Error(e || "Assertion failed")
        }
        u.equal = function (t, e, r) {
            if (t != e)
                throw Error(r || "Assertion failed: " + t + " != " + e)
        }
            ;
        var c = a(function (t, e) {
            function r(t) {
                return 1 === t.length ? "0" + t : t
            }
            function n(t) {
                for (var e = "", n = 0; n < t.length; n++)
                    e += r(t[n].toString(16));
                return e
            }
            e.toArray = function (t, e) {
                if (Array.isArray(t))
                    return t.slice();
                if (!t)
                    return [];
                var r = [];
                if ("string" != typeof t) {
                    for (var n = 0; n < t.length; n++)
                        r[n] = 0 | t[n];
                    return r
                }
                if ("hex" === e) {
                    (t = t.replace(/[^a-z0-9]+/ig, "")).length % 2 != 0 && (t = "0" + t);
                    for (var n = 0; n < t.length; n += 2)
                        r.push(parseInt(t[n] + t[n + 1], 16))
                } else
                    for (var n = 0; n < t.length; n++) {
                        var i = t.charCodeAt(n)
                            , o = i >> 8
                            , s = 255 & i;
                        o ? r.push(o, s) : r.push(s)
                    }
                return r
            }
                ,
                e.zero2 = r,
                e.toHex = n,
                e.encode = function (t, e) {
                    return "hex" === e ? n(t) : t
                }
        })
            , h = a(function (t, e) {
                e.assert = l,
                    e.toArray = c.toArray,
                    e.zero2 = c.zero2,
                    e.toHex = c.toHex,
                    e.encode = c.encode,
                    e.getNAF = function (t, e, r) {
                        var n = Array(Math.max(t.bitLength(), r) + 1);
                        n.fill(0);
                        for (var i = 1 << e + 1, o = t.clone(), s = 0; s < n.length; s++) {
                            var a, l = o.andln(i - 1);
                            o.isOdd() ? (a = l > (i >> 1) - 1 ? (i >> 1) - l : l,
                                o.isubn(a)) : a = 0,
                                n[s] = a,
                                o.iushrn(1)
                        }
                        return n
                    }
                    ,
                    e.getJSF = function (t, e) {
                        var r = [[], []];
                        t = t.clone(),
                            e = e.clone();
                        for (var n = 0, i = 0; t.cmpn(-n) > 0 || e.cmpn(-i) > 0;) {
                            var o, s, a, l = t.andln(3) + n & 3, u = e.andln(3) + i & 3;
                            3 === l && (l = -1),
                                3 === u && (u = -1),
                                s = (1 & l) == 0 ? 0 : (3 == (o = t.andln(7) + n & 7) || 5 === o) && 2 === u ? -l : l,
                                r[0].push(s),
                                a = (1 & u) == 0 ? 0 : (3 == (o = e.andln(7) + i & 7) || 5 === o) && 2 === l ? -u : u,
                                r[1].push(a),
                                2 * n === s + 1 && (n = 1 - n),
                                2 * i === a + 1 && (i = 1 - i),
                                t.iushrn(1),
                                e.iushrn(1)
                        }
                        return r
                    }
                    ,
                    e.cachedProperty = function (t, e, r) {
                        var n = "_" + e;
                        t.prototype[e] = function () {
                            return void 0 !== this[n] ? this[n] : this[n] = r.call(this)
                        }
                    }
                    ,
                    e.parseBytes = function (t) {
                        return "string" == typeof t ? e.toArray(t, "hex") : t
                    }
                    ,
                    e.intFromLE = function (t) {
                        return new (i())(t, "hex", "le")
                    }
            })
            , f = h.getNAF
            , d = h.getJSF
            , p = h.assert;
        function m(t, e) {
            this.type = t,
                this.p = new (i())(e.p, 16),
                this.red = e.prime ? i().red(e.prime) : i().mont(this.p),
                this.zero = new (i())(0).toRed(this.red),
                this.one = new (i())(1).toRed(this.red),
                this.two = new (i())(2).toRed(this.red),
                this.n = e.n && new (i())(e.n, 16),
                this.g = e.g && this.pointFromJSON(e.g, e.gRed),
                this._wnafT1 = [, , , ,],
                this._wnafT2 = [, , , ,],
                this._wnafT3 = [, , , ,],
                this._wnafT4 = [, , , ,],
                this._bitLength = this.n ? this.n.bitLength() : 0;
            var r = this.n && this.p.div(this.n);
            !r || r.cmpn(100) > 0 ? this.redN = null : (this._maxwellTrick = !0,
                this.redN = this.n.toRed(this.red))
        }
        function g(t, e) {
            this.curve = t,
                this.type = e,
                this.precomputed = null
        }
        m.prototype.point = function () {
            throw Error("Not implemented")
        }
            ,
            m.prototype.validate = function () {
                throw Error("Not implemented")
            }
            ,
            m.prototype._fixedNafMul = function (t, e) {
                p(t.precomputed);
                var r, n, i = t._getDoubles(), o = f(e, 1, this._bitLength), s = (1 << i.step + 1) - (i.step % 2 == 0 ? 2 : 1);
                s /= 3;
                var a = [];
                for (r = 0; r < o.length; r += i.step) {
                    n = 0;
                    for (var l = r + i.step - 1; l >= r; l--)
                        n = (n << 1) + o[l];
                    a.push(n)
                }
                for (var u = this.jpoint(null, null, null), c = this.jpoint(null, null, null), h = s; h > 0; h--) {
                    for (r = 0; r < a.length; r++)
                        (n = a[r]) === h ? c = c.mixedAdd(i.points[r]) : n === -h && (c = c.mixedAdd(i.points[r].neg()));
                    u = u.add(c)
                }
                return u.toP()
            }
            ,
            m.prototype._wnafMul = function (t, e) {
                var r = 4
                    , n = t._getNAFPoints(r);
                r = n.wnd;
                for (var i = n.points, o = f(e, r, this._bitLength), s = this.jpoint(null, null, null), a = o.length - 1; a >= 0; a--) {
                    for (var l = 0; a >= 0 && 0 === o[a]; a--)
                        l++;
                    if (a >= 0 && l++,
                        s = s.dblp(l),
                        a < 0)
                        break;
                    var u = o[a];
                    p(0 !== u),
                        s = "affine" === t.type ? u > 0 ? s.mixedAdd(i[u - 1 >> 1]) : s.mixedAdd(i[-u - 1 >> 1].neg()) : u > 0 ? s.add(i[u - 1 >> 1]) : s.add(i[-u - 1 >> 1].neg())
                }
                return "affine" === t.type ? s.toP() : s
            }
            ,
            m.prototype._wnafMulAdd = function (t, e, r, n, i) {
                var o, s, a, l = this._wnafT1, u = this._wnafT2, c = this._wnafT3, h = 0;
                for (o = 0; o < n; o++) {
                    var p = (a = e[o])._getNAFPoints(t);
                    l[o] = p.wnd,
                        u[o] = p.points
                }
                for (o = n - 1; o >= 1; o -= 2) {
                    var m = o - 1
                        , g = o;
                    if (1 !== l[m] || 1 !== l[g]) {
                        c[m] = f(r[m], l[m], this._bitLength),
                            c[g] = f(r[g], l[g], this._bitLength),
                            h = Math.max(c[m].length, h),
                            h = Math.max(c[g].length, h);
                        continue
                    }
                    var y = [e[m], null, null, e[g]];
                    0 === e[m].y.cmp(e[g].y) ? (y[1] = e[m].add(e[g]),
                        y[2] = e[m].toJ().mixedAdd(e[g].neg())) : 0 === e[m].y.cmp(e[g].y.redNeg()) ? (y[1] = e[m].toJ().mixedAdd(e[g]),
                            y[2] = e[m].add(e[g].neg())) : (y[1] = e[m].toJ().mixedAdd(e[g]),
                                y[2] = e[m].toJ().mixedAdd(e[g].neg()));
                    var v = [-3, -1, -5, -7, 0, 7, 5, 1, 3]
                        , b = d(r[m], r[g]);
                    for (s = 0,
                        h = Math.max(b[0].length, h),
                        c[m] = Array(h),
                        c[g] = Array(h); s < h; s++) {
                        var w = 0 | b[0][s]
                            , E = 0 | b[1][s];
                        c[m][s] = v[(w + 1) * 3 + (E + 1)],
                            c[g][s] = 0,
                            u[m] = y
                    }
                }
                var A = this.jpoint(null, null, null)
                    , _ = this._wnafT4;
                for (o = h; o >= 0; o--) {
                    for (var S = 0; o >= 0;) {
                        var k = !0;
                        for (s = 0; s < n; s++)
                            _[s] = 0 | c[s][o],
                                0 !== _[s] && (k = !1);
                        if (!k)
                            break;
                        S++,
                            o--
                    }
                    if (o >= 0 && S++,
                        A = A.dblp(S),
                        o < 0)
                        break;
                    for (s = 0; s < n; s++) {
                        var P = _[s];
                        0 !== P && (P > 0 ? a = u[s][P - 1 >> 1] : P < 0 && (a = u[s][-P - 1 >> 1].neg()),
                            A = "affine" === a.type ? A.mixedAdd(a) : A.add(a))
                    }
                }
                for (o = 0; o < n; o++)
                    u[o] = null;
                return i ? A : A.toP()
            }
            ,
            m.BasePoint = g,
            g.prototype.eq = function () {
                throw Error("Not implemented")
            }
            ,
            g.prototype.validate = function () {
                return this.curve.validate(this)
            }
            ,
            m.prototype.decodePoint = function (t, e) {
                t = h.toArray(t, e);
                var r = this.p.byteLength();
                if ((4 === t[0] || 6 === t[0] || 7 === t[0]) && t.length - 1 == 2 * r)
                    return 6 === t[0] ? p(t[t.length - 1] % 2 == 0) : 7 === t[0] && p(t[t.length - 1] % 2 == 1),
                        this.point(t.slice(1, 1 + r), t.slice(1 + r, 1 + 2 * r));
                if ((2 === t[0] || 3 === t[0]) && t.length - 1 === r)
                    return this.pointFromX(t.slice(1, 1 + r), 3 === t[0]);
                throw Error("Unknown point format")
            }
            ,
            g.prototype.encodeCompressed = function (t) {
                return this.encode(t, !0)
            }
            ,
            g.prototype._encode = function (t) {
                var e = this.curve.p.byteLength()
                    , r = this.getX().toArray("be", e);
                return t ? [this.getY().isEven() ? 2 : 3].concat(r) : [4].concat(r, this.getY().toArray("be", e))
            }
            ,
            g.prototype.encode = function (t, e) {
                return h.encode(this._encode(e), t)
            }
            ,
            g.prototype.precompute = function (t) {
                if (this.precomputed)
                    return this;
                var e = {
                    doubles: null,
                    naf: null,
                    beta: null
                };
                return e.naf = this._getNAFPoints(8),
                    e.doubles = this._getDoubles(4, t),
                    e.beta = this._getBeta(),
                    this.precomputed = e,
                    this
            }
            ,
            g.prototype._hasDoubles = function (t) {
                if (!this.precomputed)
                    return !1;
                var e = this.precomputed.doubles;
                return !!e && e.points.length >= Math.ceil((t.bitLength() + 1) / e.step)
            }
            ,
            g.prototype._getDoubles = function (t, e) {
                if (this.precomputed && this.precomputed.doubles)
                    return this.precomputed.doubles;
                for (var r = [this], n = this, i = 0; i < e; i += t) {
                    for (var o = 0; o < t; o++)
                        n = n.dbl();
                    r.push(n)
                }
                return {
                    step: t,
                    points: r
                }
            }
            ,
            g.prototype._getNAFPoints = function (t) {
                if (this.precomputed && this.precomputed.naf)
                    return this.precomputed.naf;
                for (var e = [this], r = (1 << t) - 1, n = 1 === r ? null : this.dbl(), i = 1; i < r; i++)
                    e[i] = e[i - 1].add(n);
                return {
                    wnd: t,
                    points: e
                }
            }
            ,
            g.prototype._getBeta = function () {
                return null
            }
            ,
            g.prototype.dblp = function (t) {
                for (var e = this, r = 0; r < t; r++)
                    e = e.dbl();
                return e
            }
            ;
        var y = a(function (t) {
            "function" == typeof Object.create ? t.exports = function (t, e) {
                e && (t.super_ = e,
                    t.prototype = Object.create(e.prototype, {
                        constructor: {
                            value: t,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }))
            }
                : t.exports = function (t, e) {
                    if (e) {
                        t.super_ = e;
                        var r = function () { };
                        r.prototype = e.prototype,
                            t.prototype = new r,
                            t.prototype.constructor = t
                    }
                }
        })
            , v = h.assert;
        function b(t) {
            m.call(this, "short", t),
                this.a = new (i())(t.a, 16).toRed(this.red),
                this.b = new (i())(t.b, 16).toRed(this.red),
                this.tinv = this.two.redInvm(),
                this.zeroA = 0 === this.a.fromRed().cmpn(0),
                this.threeA = 0 === this.a.fromRed().sub(this.p).cmpn(-3),
                this.endo = this._getEndomorphism(t),
                this._endoWnafT1 = [, , , ,],
                this._endoWnafT2 = [, , , ,]
        }
        function w(t, e, r, n) {
            m.BasePoint.call(this, t, "affine"),
                null === e && null === r ? (this.x = null,
                    this.y = null,
                    this.inf = !0) : (this.x = new (i())(e, 16),
                        this.y = new (i())(r, 16),
                        n && (this.x.forceRed(this.curve.red),
                            this.y.forceRed(this.curve.red)),
                        this.x.red || (this.x = this.x.toRed(this.curve.red)),
                        this.y.red || (this.y = this.y.toRed(this.curve.red)),
                        this.inf = !1)
        }
        function E(t, e, r, n) {
            m.BasePoint.call(this, t, "jacobian"),
                null === e && null === r && null === n ? (this.x = this.curve.one,
                    this.y = this.curve.one,
                    this.z = new (i())(0)) : (this.x = new (i())(e, 16),
                        this.y = new (i())(r, 16),
                        this.z = new (i())(n, 16)),
                this.x.red || (this.x = this.x.toRed(this.curve.red)),
                this.y.red || (this.y = this.y.toRed(this.curve.red)),
                this.z.red || (this.z = this.z.toRed(this.curve.red)),
                this.zOne = this.z === this.curve.one
        }
        y(b, m),
            b.prototype._getEndomorphism = function (t) {
                if (this.zeroA && this.g && this.n && 1 === this.p.modn(3)) {
                    if (t.beta)
                        e = new (i())(t.beta, 16).toRed(this.red);
                    else {
                        var e, r, n, o = this._getEndoRoots(this.p);
                        e = (e = 0 > o[0].cmp(o[1]) ? o[0] : o[1]).toRed(this.red)
                    }
                    if (t.lambda)
                        r = new (i())(t.lambda, 16);
                    else {
                        var s = this._getEndoRoots(this.n);
                        0 === this.g.mul(s[0]).x.cmp(this.g.x.redMul(e)) ? r = s[0] : (r = s[1],
                            v(0 === this.g.mul(r).x.cmp(this.g.x.redMul(e))))
                    }
                    return n = t.basis ? t.basis.map(function (t) {
                        return {
                            a: new (i())(t.a, 16),
                            b: new (i())(t.b, 16)
                        }
                    }) : this._getEndoBasis(r),
                    {
                        beta: e,
                        lambda: r,
                        basis: n
                    }
                }
            }
            ,
            b.prototype._getEndoRoots = function (t) {
                var e = t === this.p ? this.red : i().mont(t)
                    , r = new (i())(2).toRed(e).redInvm()
                    , n = r.redNeg()
                    , o = new (i())(3).toRed(e).redNeg().redSqrt().redMul(r);
                return [n.redAdd(o).fromRed(), n.redSub(o).fromRed()]
            }
            ,
            b.prototype._getEndoBasis = function (t) {
                for (var e, r, n, o, s, a, l, u, c, h = this.n.ushrn(Math.floor(this.n.bitLength() / 2)), f = t, d = this.n.clone(), p = new (i())(1), m = new (i())(0), g = new (i())(0), y = new (i())(1), v = 0; 0 !== f.cmpn(0);) {
                    var b = d.div(f);
                    u = d.sub(b.mul(f)),
                        c = g.sub(b.mul(p));
                    var w = y.sub(b.mul(m));
                    if (!n && 0 > u.cmp(h))
                        e = l.neg(),
                            r = p,
                            n = u.neg(),
                            o = c;
                    else if (n && 2 == ++v)
                        break;
                    l = u,
                        d = f,
                        f = u,
                        g = p,
                        p = c,
                        y = m,
                        m = w
                }
                s = u.neg(),
                    a = c;
                var E = n.sqr().add(o.sqr());
                return s.sqr().add(a.sqr()).cmp(E) >= 0 && (s = e,
                    a = r),
                    n.negative && (n = n.neg(),
                        o = o.neg()),
                    s.negative && (s = s.neg(),
                        a = a.neg()),
                    [{
                        a: n,
                        b: o
                    }, {
                        a: s,
                        b: a
                    }]
            }
            ,
            b.prototype._endoSplit = function (t) {
                var e = this.endo.basis
                    , r = e[0]
                    , n = e[1]
                    , i = n.b.mul(t).divRound(this.n)
                    , o = r.b.neg().mul(t).divRound(this.n)
                    , s = i.mul(r.a)
                    , a = o.mul(n.a)
                    , l = i.mul(r.b)
                    , u = o.mul(n.b);
                return {
                    k1: t.sub(s).sub(a),
                    k2: l.add(u).neg()
                }
            }
            ,
            b.prototype.pointFromX = function (t, e) {
                (t = new (i())(t, 16)).red || (t = t.toRed(this.red));
                var r = t.redSqr().redMul(t).redIAdd(t.redMul(this.a)).redIAdd(this.b)
                    , n = r.redSqrt();
                if (0 !== n.redSqr().redSub(r).cmp(this.zero))
                    throw Error("invalid point");
                var o = n.fromRed().isOdd();
                return (e && !o || !e && o) && (n = n.redNeg()),
                    this.point(t, n)
            }
            ,
            b.prototype.validate = function (t) {
                if (t.inf)
                    return !0;
                var e = t.x
                    , r = t.y
                    , n = this.a.redMul(e)
                    , i = e.redSqr().redMul(e).redIAdd(n).redIAdd(this.b);
                return 0 === r.redSqr().redISub(i).cmpn(0)
            }
            ,
            b.prototype._endoWnafMulAdd = function (t, e, r) {
                for (var n = this._endoWnafT1, i = this._endoWnafT2, o = 0; o < t.length; o++) {
                    var s = this._endoSplit(e[o])
                        , a = t[o]
                        , l = a._getBeta();
                    s.k1.negative && (s.k1.ineg(),
                        a = a.neg(!0)),
                        s.k2.negative && (s.k2.ineg(),
                            l = l.neg(!0)),
                        n[2 * o] = a,
                        n[2 * o + 1] = l,
                        i[2 * o] = s.k1,
                        i[2 * o + 1] = s.k2
                }
                for (var u = this._wnafMulAdd(1, n, i, 2 * o, r), c = 0; c < 2 * o; c++)
                    n[c] = null,
                        i[c] = null;
                return u
            }
            ,
            y(w, m.BasePoint),
            b.prototype.point = function (t, e, r) {
                return new w(this, t, e, r)
            }
            ,
            b.prototype.pointFromJSON = function (t, e) {
                return w.fromJSON(this, t, e)
            }
            ,
            w.prototype._getBeta = function () {
                if (this.curve.endo) {
                    var t = this.precomputed;
                    if (t && t.beta)
                        return t.beta;
                    var e = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
                    if (t) {
                        var r = this.curve
                            , n = function (t) {
                                return r.point(t.x.redMul(r.endo.beta), t.y)
                            };
                        t.beta = e,
                            e.precomputed = {
                                beta: null,
                                naf: t.naf && {
                                    wnd: t.naf.wnd,
                                    points: t.naf.points.map(n)
                                },
                                doubles: t.doubles && {
                                    step: t.doubles.step,
                                    points: t.doubles.points.map(n)
                                }
                            }
                    }
                    return e
                }
            }
            ,
            w.prototype.toJSON = function () {
                return this.precomputed ? [this.x, this.y, this.precomputed && {
                    doubles: this.precomputed.doubles && {
                        step: this.precomputed.doubles.step,
                        points: this.precomputed.doubles.points.slice(1)
                    },
                    naf: this.precomputed.naf && {
                        wnd: this.precomputed.naf.wnd,
                        points: this.precomputed.naf.points.slice(1)
                    }
                }] : [this.x, this.y]
            }
            ,
            w.fromJSON = function (t, e, r) {
                "string" == typeof e && (e = JSON.parse(e));
                var n = t.point(e[0], e[1], r);
                if (!e[2])
                    return n;
                function i(e) {
                    return t.point(e[0], e[1], r)
                }
                var o = e[2];
                return n.precomputed = {
                    beta: null,
                    doubles: o.doubles && {
                        step: o.doubles.step,
                        points: [n].concat(o.doubles.points.map(i))
                    },
                    naf: o.naf && {
                        wnd: o.naf.wnd,
                        points: [n].concat(o.naf.points.map(i))
                    }
                },
                    n
            }
            ,
            w.prototype.inspect = function () {
                return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + ">"
            }
            ,
            w.prototype.isInfinity = function () {
                return this.inf
            }
            ,
            w.prototype.add = function (t) {
                if (this.inf)
                    return t;
                if (t.inf)
                    return this;
                if (this.eq(t))
                    return this.dbl();
                if (this.neg().eq(t) || 0 === this.x.cmp(t.x))
                    return this.curve.point(null, null);
                var e = this.y.redSub(t.y);
                0 !== e.cmpn(0) && (e = e.redMul(this.x.redSub(t.x).redInvm()));
                var r = e.redSqr().redISub(this.x).redISub(t.x)
                    , n = e.redMul(this.x.redSub(r)).redISub(this.y);
                return this.curve.point(r, n)
            }
            ,
            w.prototype.dbl = function () {
                if (this.inf)
                    return this;
                var t = this.y.redAdd(this.y);
                if (0 === t.cmpn(0))
                    return this.curve.point(null, null);
                var e = this.curve.a
                    , r = this.x.redSqr()
                    , n = t.redInvm()
                    , i = r.redAdd(r).redIAdd(r).redIAdd(e).redMul(n)
                    , o = i.redSqr().redISub(this.x.redAdd(this.x))
                    , s = i.redMul(this.x.redSub(o)).redISub(this.y);
                return this.curve.point(o, s)
            }
            ,
            w.prototype.getX = function () {
                return this.x.fromRed()
            }
            ,
            w.prototype.getY = function () {
                return this.y.fromRed()
            }
            ,
            w.prototype.mul = function (t) {
                return (t = new (i())(t, 16),
                    this.isInfinity()) ? this : this._hasDoubles(t) ? this.curve._fixedNafMul(this, t) : this.curve.endo ? this.curve._endoWnafMulAdd([this], [t]) : this.curve._wnafMul(this, t)
            }
            ,
            w.prototype.mulAdd = function (t, e, r) {
                var n = [this, e]
                    , i = [t, r];
                return this.curve.endo ? this.curve._endoWnafMulAdd(n, i) : this.curve._wnafMulAdd(1, n, i, 2)
            }
            ,
            w.prototype.jmulAdd = function (t, e, r) {
                var n = [this, e]
                    , i = [t, r];
                return this.curve.endo ? this.curve._endoWnafMulAdd(n, i, !0) : this.curve._wnafMulAdd(1, n, i, 2, !0)
            }
            ,
            w.prototype.eq = function (t) {
                return this === t || this.inf === t.inf && (this.inf || 0 === this.x.cmp(t.x) && 0 === this.y.cmp(t.y))
            }
            ,
            w.prototype.neg = function (t) {
                if (this.inf)
                    return this;
                var e = this.curve.point(this.x, this.y.redNeg());
                if (t && this.precomputed) {
                    var r = this.precomputed
                        , n = function (t) {
                            return t.neg()
                        };
                    e.precomputed = {
                        naf: r.naf && {
                            wnd: r.naf.wnd,
                            points: r.naf.points.map(n)
                        },
                        doubles: r.doubles && {
                            step: r.doubles.step,
                            points: r.doubles.points.map(n)
                        }
                    }
                }
                return e
            }
            ,
            w.prototype.toJ = function () {
                return this.inf ? this.curve.jpoint(null, null, null) : this.curve.jpoint(this.x, this.y, this.curve.one)
            }
            ,
            y(E, m.BasePoint),
            b.prototype.jpoint = function (t, e, r) {
                return new E(this, t, e, r)
            }
            ,
            E.prototype.toP = function () {
                if (this.isInfinity())
                    return this.curve.point(null, null);
                var t = this.z.redInvm()
                    , e = t.redSqr()
                    , r = this.x.redMul(e)
                    , n = this.y.redMul(e).redMul(t);
                return this.curve.point(r, n)
            }
            ,
            E.prototype.neg = function () {
                return this.curve.jpoint(this.x, this.y.redNeg(), this.z)
            }
            ,
            E.prototype.add = function (t) {
                if (this.isInfinity())
                    return t;
                if (t.isInfinity())
                    return this;
                var e = t.z.redSqr()
                    , r = this.z.redSqr()
                    , n = this.x.redMul(e)
                    , i = t.x.redMul(r)
                    , o = this.y.redMul(e.redMul(t.z))
                    , s = t.y.redMul(r.redMul(this.z))
                    , a = n.redSub(i)
                    , l = o.redSub(s);
                if (0 === a.cmpn(0))
                    return 0 !== l.cmpn(0) ? this.curve.jpoint(null, null, null) : this.dbl();
                var u = a.redSqr()
                    , c = u.redMul(a)
                    , h = n.redMul(u)
                    , f = l.redSqr().redIAdd(c).redISub(h).redISub(h)
                    , d = l.redMul(h.redISub(f)).redISub(o.redMul(c))
                    , p = this.z.redMul(t.z).redMul(a);
                return this.curve.jpoint(f, d, p)
            }
            ,
            E.prototype.mixedAdd = function (t) {
                if (this.isInfinity())
                    return t.toJ();
                if (t.isInfinity())
                    return this;
                var e = this.z.redSqr()
                    , r = this.x
                    , n = t.x.redMul(e)
                    , i = this.y
                    , o = t.y.redMul(e).redMul(this.z)
                    , s = r.redSub(n)
                    , a = i.redSub(o);
                if (0 === s.cmpn(0))
                    return 0 !== a.cmpn(0) ? this.curve.jpoint(null, null, null) : this.dbl();
                var l = s.redSqr()
                    , u = l.redMul(s)
                    , c = r.redMul(l)
                    , h = a.redSqr().redIAdd(u).redISub(c).redISub(c)
                    , f = a.redMul(c.redISub(h)).redISub(i.redMul(u))
                    , d = this.z.redMul(s);
                return this.curve.jpoint(h, f, d)
            }
            ,
            E.prototype.dblp = function (t) {
                if (0 === t || this.isInfinity())
                    return this;
                if (!t)
                    return this.dbl();
                if (this.curve.zeroA || this.curve.threeA) {
                    var e, r = this;
                    for (e = 0; e < t; e++)
                        r = r.dbl();
                    return r
                }
                var n = this.curve.a
                    , i = this.curve.tinv
                    , o = this.x
                    , s = this.y
                    , a = this.z
                    , l = a.redSqr().redSqr()
                    , u = s.redAdd(s);
                for (e = 0; e < t; e++) {
                    var c = o.redSqr()
                        , h = u.redSqr()
                        , f = h.redSqr()
                        , d = c.redAdd(c).redIAdd(c).redIAdd(n.redMul(l))
                        , p = o.redMul(h)
                        , m = d.redSqr().redISub(p.redAdd(p))
                        , g = p.redISub(m)
                        , y = d.redMul(g);
                    y = y.redIAdd(y).redISub(f);
                    var v = u.redMul(a);
                    e + 1 < t && (l = l.redMul(f)),
                        o = m,
                        a = v,
                        u = y
                }
                return this.curve.jpoint(o, u.redMul(i), a)
            }
            ,
            E.prototype.dbl = function () {
                return this.isInfinity() ? this : this.curve.zeroA ? this._zeroDbl() : this.curve.threeA ? this._threeDbl() : this._dbl()
            }
            ,
            E.prototype._zeroDbl = function () {
                if (this.zOne) {
                    var t, e, r, n = this.x.redSqr(), i = this.y.redSqr(), o = i.redSqr(), s = this.x.redAdd(i).redSqr().redISub(n).redISub(o);
                    s = s.redIAdd(s);
                    var a = n.redAdd(n).redIAdd(n)
                        , l = a.redSqr().redISub(s).redISub(s)
                        , u = o.redIAdd(o);
                    u = (u = u.redIAdd(u)).redIAdd(u),
                        t = l,
                        e = a.redMul(s.redISub(l)).redISub(u),
                        r = this.y.redAdd(this.y)
                } else {
                    var c = this.x.redSqr()
                        , h = this.y.redSqr()
                        , f = h.redSqr()
                        , d = this.x.redAdd(h).redSqr().redISub(c).redISub(f);
                    d = d.redIAdd(d);
                    var p = c.redAdd(c).redIAdd(c)
                        , m = p.redSqr()
                        , g = f.redIAdd(f);
                    g = (g = g.redIAdd(g)).redIAdd(g),
                        t = m.redISub(d).redISub(d),
                        e = p.redMul(d.redISub(t)).redISub(g),
                        r = (r = this.y.redMul(this.z)).redIAdd(r)
                }
                return this.curve.jpoint(t, e, r)
            }
            ,
            E.prototype._threeDbl = function () {
                if (this.zOne) {
                    var t, e, r, n = this.x.redSqr(), i = this.y.redSqr(), o = i.redSqr(), s = this.x.redAdd(i).redSqr().redISub(n).redISub(o);
                    s = s.redIAdd(s);
                    var a = n.redAdd(n).redIAdd(n).redIAdd(this.curve.a)
                        , l = a.redSqr().redISub(s).redISub(s);
                    t = l;
                    var u = o.redIAdd(o);
                    u = (u = u.redIAdd(u)).redIAdd(u),
                        e = a.redMul(s.redISub(l)).redISub(u),
                        r = this.y.redAdd(this.y)
                } else {
                    var c = this.z.redSqr()
                        , h = this.y.redSqr()
                        , f = this.x.redMul(h)
                        , d = this.x.redSub(c).redMul(this.x.redAdd(c));
                    d = d.redAdd(d).redIAdd(d);
                    var p = f.redIAdd(f)
                        , m = (p = p.redIAdd(p)).redAdd(p);
                    t = d.redSqr().redISub(m),
                        r = this.y.redAdd(this.z).redSqr().redISub(h).redISub(c);
                    var g = h.redSqr();
                    g = (g = (g = g.redIAdd(g)).redIAdd(g)).redIAdd(g),
                        e = d.redMul(p.redISub(t)).redISub(g)
                }
                return this.curve.jpoint(t, e, r)
            }
            ,
            E.prototype._dbl = function () {
                var t = this.curve.a
                    , e = this.x
                    , r = this.y
                    , n = this.z
                    , i = n.redSqr().redSqr()
                    , o = e.redSqr()
                    , s = r.redSqr()
                    , a = o.redAdd(o).redIAdd(o).redIAdd(t.redMul(i))
                    , l = e.redAdd(e)
                    , u = (l = l.redIAdd(l)).redMul(s)
                    , c = a.redSqr().redISub(u.redAdd(u))
                    , h = u.redISub(c)
                    , f = s.redSqr();
                f = (f = (f = f.redIAdd(f)).redIAdd(f)).redIAdd(f);
                var d = a.redMul(h).redISub(f)
                    , p = r.redAdd(r).redMul(n);
                return this.curve.jpoint(c, d, p)
            }
            ,
            E.prototype.trpl = function () {
                if (!this.curve.zeroA)
                    return this.dbl().add(this);
                var t = this.x.redSqr()
                    , e = this.y.redSqr()
                    , r = this.z.redSqr()
                    , n = e.redSqr()
                    , i = t.redAdd(t).redIAdd(t)
                    , o = i.redSqr()
                    , s = this.x.redAdd(e).redSqr().redISub(t).redISub(n)
                    , a = (s = (s = (s = s.redIAdd(s)).redAdd(s).redIAdd(s)).redISub(o)).redSqr()
                    , l = n.redIAdd(n);
                l = (l = (l = l.redIAdd(l)).redIAdd(l)).redIAdd(l);
                var u = i.redIAdd(s).redSqr().redISub(o).redISub(a).redISub(l)
                    , c = e.redMul(u);
                c = (c = c.redIAdd(c)).redIAdd(c);
                var h = this.x.redMul(a).redISub(c);
                h = (h = h.redIAdd(h)).redIAdd(h);
                var f = this.y.redMul(u.redMul(l.redISub(u)).redISub(s.redMul(a)));
                f = (f = (f = f.redIAdd(f)).redIAdd(f)).redIAdd(f);
                var d = this.z.redAdd(s).redSqr().redISub(r).redISub(a);
                return this.curve.jpoint(h, f, d)
            }
            ,
            E.prototype.mul = function (t, e) {
                return t = new (i())(t, e),
                    this.curve._wnafMul(this, t)
            }
            ,
            E.prototype.eq = function (t) {
                if ("affine" === t.type)
                    return this.eq(t.toJ());
                if (this === t)
                    return !0;
                var e = this.z.redSqr()
                    , r = t.z.redSqr();
                if (0 !== this.x.redMul(r).redISub(t.x.redMul(e)).cmpn(0))
                    return !1;
                var n = e.redMul(this.z)
                    , i = r.redMul(t.z);
                return 0 === this.y.redMul(i).redISub(t.y.redMul(n)).cmpn(0)
            }
            ,
            E.prototype.eqXToP = function (t) {
                var e = this.z.redSqr()
                    , r = t.toRed(this.curve.red).redMul(e);
                if (0 === this.x.cmp(r))
                    return !0;
                for (var n = t.clone(), i = this.curve.redN.redMul(e); ;) {
                    if (n.iadd(this.curve.n),
                        n.cmp(this.curve.p) >= 0)
                        return !1;
                    if (r.redIAdd(i),
                        0 === this.x.cmp(r))
                        return !0
                }
            }
            ,
            E.prototype.inspect = function () {
                return this.isInfinity() ? "<EC JPoint Infinity>" : "<EC JPoint x: " + this.x.toString(16, 2) + " y: " + this.y.toString(16, 2) + " z: " + this.z.toString(16, 2) + ">"
            }
            ,
            E.prototype.isInfinity = function () {
                return 0 === this.z.cmpn(0)
            }
            ;
        var A = a(function (t, e) {
            e.base = m,
                e.short = b,
                e.mont = null,
                e.edwards = null
        })
            , _ = a(function (t, e) {
                var r, n = h.assert;
                function i(t) {
                    "short" === t.type ? this.curve = new A.short(t) : "edwards" === t.type ? this.curve = new A.edwards(t) : this.curve = new A.mont(t),
                        this.g = this.curve.g,
                        this.n = this.curve.n,
                        this.hash = t.hash,
                        n(this.g.validate(), "Invalid curve"),
                        n(this.g.mul(this.n).isInfinity(), "Invalid curve, G*N != O")
                }
                function o(t, r) {
                    Object.defineProperty(e, t, {
                        configurable: !0,
                        enumerable: !0,
                        get: function () {
                            var n = new i(r);
                            return Object.defineProperty(e, t, {
                                configurable: !0,
                                enumerable: !0,
                                value: n
                            }),
                                n
                        }
                    })
                }
                e.PresetCurve = i,
                    o("p192", {
                        type: "short",
                        prime: "p192",
                        p: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff",
                        a: "ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc",
                        b: "64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1",
                        n: "ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831",
                        hash: s().sha256,
                        gRed: !1,
                        g: ["188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012", "07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"]
                    }),
                    o("p224", {
                        type: "short",
                        prime: "p224",
                        p: "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001",
                        a: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe",
                        b: "b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4",
                        n: "ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d",
                        hash: s().sha256,
                        gRed: !1,
                        g: ["b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21", "bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"]
                    }),
                    o("p256", {
                        type: "short",
                        prime: null,
                        p: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff",
                        a: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc",
                        b: "5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b",
                        n: "ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551",
                        hash: s().sha256,
                        gRed: !1,
                        g: ["6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296", "4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"]
                    }),
                    o("p384", {
                        type: "short",
                        prime: null,
                        p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff",
                        a: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc",
                        b: "b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef",
                        n: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973",
                        hash: s().sha384,
                        gRed: !1,
                        g: ["aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7", "3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f"]
                    }),
                    o("p521", {
                        type: "short",
                        prime: null,
                        p: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff",
                        a: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc",
                        b: "00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00",
                        n: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409",
                        hash: s().sha512,
                        gRed: !1,
                        g: ["000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66", "00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650"]
                    }),
                    o("curve25519", {
                        type: "mont",
                        prime: "p25519",
                        p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
                        a: "76d06",
                        b: "1",
                        n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
                        hash: s().sha256,
                        gRed: !1,
                        g: ["9"]
                    }),
                    o("ed25519", {
                        type: "edwards",
                        prime: "p25519",
                        p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
                        a: "-1",
                        c: "1",
                        d: "52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3",
                        n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
                        hash: s().sha256,
                        gRed: !1,
                        g: ["216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a", "6666666666666666666666666666666666666666666666666666666666666658"]
                    });
                try {
                    r = null.crash()
                } catch (t) {
                    r = void 0
                }
                o("secp256k1", {
                    type: "short",
                    prime: "k256",
                    p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f",
                    a: "0",
                    b: "7",
                    n: "ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141",
                    h: "1",
                    hash: s().sha256,
                    beta: "7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee",
                    lambda: "5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72",
                    basis: [{
                        a: "3086d221a7d46bcde86c90e49284eb15",
                        b: "-e4437ed6010e88286f547fa90abfe4c3"
                    }, {
                        a: "114ca50f7a8e2f3f657c1108d9d44cfd8",
                        b: "3086d221a7d46bcde86c90e49284eb15"
                    }],
                    gRed: !1,
                    g: ["79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798", "483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8", r]
                })
            });
        function S(t) {
            if (!(this instanceof S))
                return new S(t);
            this.hash = t.hash,
                this.predResist = !!t.predResist,
                this.outLen = this.hash.outSize,
                this.minEntropy = t.minEntropy || this.hash.hmacStrength,
                this._reseed = null,
                this.reseedInterval = null,
                this.K = null,
                this.V = null;
            var e = c.toArray(t.entropy, t.entropyEnc || "hex")
                , r = c.toArray(t.nonce, t.nonceEnc || "hex")
                , n = c.toArray(t.pers, t.persEnc || "hex");
            l(e.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"),
                this._init(e, r, n)
        }
        S.prototype._init = function (t, e, r) {
            var n = t.concat(e).concat(r);
            this.K = Array(this.outLen / 8),
                this.V = Array(this.outLen / 8);
            for (var i = 0; i < this.V.length; i++)
                this.K[i] = 0,
                    this.V[i] = 1;
            this._update(n),
                this._reseed = 1,
                this.reseedInterval = 281474976710656
        }
            ,
            S.prototype._hmac = function () {
                return new (s()).hmac(this.hash, this.K)
            }
            ,
            S.prototype._update = function (t) {
                var e = this._hmac().update(this.V).update([0]);
                t && (e = e.update(t)),
                    this.K = e.digest(),
                    this.V = this._hmac().update(this.V).digest(),
                    t && (this.K = this._hmac().update(this.V).update([1]).update(t).digest(),
                        this.V = this._hmac().update(this.V).digest())
            }
            ,
            S.prototype.reseed = function (t, e, r, n) {
                "string" != typeof e && (n = r,
                    r = e,
                    e = null),
                    t = c.toArray(t, e),
                    r = c.toArray(r, n),
                    l(t.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"),
                    this._update(t.concat(r || [])),
                    this._reseed = 1
            }
            ,
            S.prototype.generate = function (t, e, r, n) {
                if (this._reseed > this.reseedInterval)
                    throw Error("Reseed is required");
                "string" != typeof e && (n = r,
                    r = e,
                    e = null),
                    r && (r = c.toArray(r, n || "hex"),
                        this._update(r));
                for (var i = []; i.length < t;)
                    this.V = this._hmac().update(this.V).digest(),
                        i = i.concat(this.V);
                var o = i.slice(0, t);
                return this._update(r),
                    this._reseed++,
                    c.encode(o, e)
            }
            ;
        var k = h.assert;
        function P(t, e) {
            this.ec = t,
                this.priv = null,
                this.pub = null,
                e.priv && this._importPrivate(e.priv, e.privEnc),
                e.pub && this._importPublic(e.pub, e.pubEnc)
        }
        P.fromPublic = function (t, e, r) {
            return e instanceof P ? e : new P(t, {
                pub: e,
                pubEnc: r
            })
        }
            ,
            P.fromPrivate = function (t, e, r) {
                return e instanceof P ? e : new P(t, {
                    priv: e,
                    privEnc: r
                })
            }
            ,
            P.prototype.validate = function () {
                var t = this.getPublic();
                return t.isInfinity() ? {
                    result: !1,
                    reason: "Invalid public key"
                } : t.validate() ? t.mul(this.ec.curve.n).isInfinity() ? {
                    result: !0,
                    reason: null
                } : {
                    result: !1,
                    reason: "Public key * N != O"
                } : {
                    result: !1,
                    reason: "Public key is not a point"
                }
            }
            ,
            P.prototype.getPublic = function (t, e) {
                return ("string" == typeof t && (e = t,
                    t = null),
                    this.pub || (this.pub = this.ec.g.mul(this.priv)),
                    e) ? this.pub.encode(e, t) : this.pub
            }
            ,
            P.prototype.getPrivate = function (t) {
                return "hex" === t ? this.priv.toString(16, 2) : this.priv
            }
            ,
            P.prototype._importPrivate = function (t, e) {
                this.priv = new (i())(t, e || 16),
                    this.priv = this.priv.umod(this.ec.curve.n)
            }
            ,
            P.prototype._importPublic = function (t, e) {
                if (t.x || t.y) {
                    "mont" === this.ec.curve.type ? k(t.x, "Need x coordinate") : ("short" === this.ec.curve.type || "edwards" === this.ec.curve.type) && k(t.x && t.y, "Need both x and y coordinate"),
                        this.pub = this.ec.curve.point(t.x, t.y);
                    return
                }
                this.pub = this.ec.curve.decodePoint(t, e)
            }
            ,
            P.prototype.derive = function (t) {
                return t.validate() || k(t.validate(), "public point not validated"),
                    t.mul(this.priv).getX()
            }
            ,
            P.prototype.sign = function (t, e, r) {
                return this.ec.sign(t, this, e, r)
            }
            ,
            P.prototype.verify = function (t, e) {
                return this.ec.verify(t, e, this)
            }
            ,
            P.prototype.inspect = function () {
                return "<Key priv: " + (this.priv && this.priv.toString(16, 2)) + " pub: " + (this.pub && this.pub.inspect()) + " >"
            }
            ;
        var N = h.assert;
        function C(t, e) {
            if (t instanceof C)
                return t;
            this._importDER(t, e) || (N(t.r && t.s, "Signature without r or s"),
                this.r = new (i())(t.r, 16),
                this.s = new (i())(t.s, 16),
                void 0 === t.recoveryParam ? this.recoveryParam = null : this.recoveryParam = t.recoveryParam)
        }
        function T() {
            this.place = 0
        }
        function x(t, e) {
            var r = t[e.place++];
            if (!(128 & r))
                return r;
            var n = 15 & r;
            if (0 === n || n > 4)
                return !1;
            for (var i = 0, o = 0, s = e.place; o < n; o++,
                s++)
                i <<= 8,
                    i |= t[s],
                    i >>>= 0;
            return !(i <= 127) && (e.place = s,
                i)
        }
        function R(t) {
            for (var e = 0, r = t.length - 1; !t[e] && !(128 & t[e + 1]) && e < r;)
                e++;
            return 0 === e ? t : t.slice(e)
        }
        function I(t, e) {
            if (e < 128) {
                t.push(e);
                return
            }
            var r = 1 + (Math.log(e) / Math.LN2 >>> 3);
            for (t.push(128 | r); --r;)
                t.push(e >>> (r << 3) & 255);
            t.push(e)
        }
        C.prototype._importDER = function (t, e) {
            t = h.toArray(t, e);
            var r = new T;
            if (48 !== t[r.place++])
                return !1;
            var n = x(t, r);
            if (!1 === n || n + r.place !== t.length || 2 !== t[r.place++])
                return !1;
            var o = x(t, r);
            if (!1 === o)
                return !1;
            var s = t.slice(r.place, o + r.place);
            if (r.place += o,
                2 !== t[r.place++])
                return !1;
            var a = x(t, r);
            if (!1 === a || t.length !== a + r.place)
                return !1;
            var l = t.slice(r.place, a + r.place);
            if (0 === s[0]) {
                if (!(128 & s[1]))
                    return !1;
                s = s.slice(1)
            }
            if (0 === l[0]) {
                if (!(128 & l[1]))
                    return !1;
                l = l.slice(1)
            }
            return this.r = new (i())(s),
                this.s = new (i())(l),
                this.recoveryParam = null,
                !0
        }
            ,
            C.prototype.toDER = function (t) {
                var e = this.r.toArray()
                    , r = this.s.toArray();
                for (128 & e[0] && (e = [0].concat(e)),
                    128 & r[0] && (r = [0].concat(r)),
                    e = R(e),
                    r = R(r); !r[0] && !(128 & r[1]);)
                    r = r.slice(1);
                var n = [2];
                I(n, e.length),
                    (n = n.concat(e)).push(2),
                    I(n, r.length);
                var i = n.concat(r)
                    , o = [48];
                return I(o, i.length),
                    o = o.concat(i),
                    h.encode(o, t)
            }
            ;
        var O = function () {
            throw Error("unsupported")
        }
            , M = h.assert;
        function B(t) {
            if (!(this instanceof B))
                return new B(t);
            "string" == typeof t && (M(Object.prototype.hasOwnProperty.call(_, t), "Unknown curve " + t),
                t = _[t]),
                t instanceof _.PresetCurve && (t = {
                    curve: t
                }),
                this.curve = t.curve.curve,
                this.n = this.curve.n,
                this.nh = this.n.ushrn(1),
                this.g = this.curve.g,
                this.g = t.curve.g,
                this.g.precompute(t.curve.n.bitLength() + 1),
                this.hash = t.hash || t.curve.hash
        }
        B.prototype.keyPair = function (t) {
            return new P(this, t)
        }
            ,
            B.prototype.keyFromPrivate = function (t, e) {
                return P.fromPrivate(this, t, e)
            }
            ,
            B.prototype.keyFromPublic = function (t, e) {
                return P.fromPublic(this, t, e)
            }
            ,
            B.prototype.genKeyPair = function (t) {
                t || (t = {});
                for (var e = new S({
                    hash: this.hash,
                    pers: t.pers,
                    persEnc: t.persEnc || "utf8",
                    entropy: t.entropy || O(this.hash.hmacStrength),
                    entropyEnc: t.entropy && t.entropyEnc || "utf8",
                    nonce: this.n.toArray()
                }), r = this.n.byteLength(), n = this.n.sub(new (i())(2)); ;) {
                    var o = new (i())(e.generate(r));
                    if (!(o.cmp(n) > 0))
                        return o.iaddn(1),
                            this.keyFromPrivate(o)
                }
            }
            ,
            B.prototype._truncateToN = function (t, e) {
                var r = 8 * t.byteLength() - this.n.bitLength();
                return (r > 0 && (t = t.ushrn(r)),
                    !e && t.cmp(this.n) >= 0) ? t.sub(this.n) : t
            }
            ,
            B.prototype.sign = function (t, e, r, n) {
                "object" == typeof r && (n = r,
                    r = null),
                    n || (n = {}),
                    e = this.keyFromPrivate(e, r),
                    t = this._truncateToN(new (i())(t, 16));
                for (var o = this.n.byteLength(), s = e.getPrivate().toArray("be", o), a = t.toArray("be", o), l = new S({
                    hash: this.hash,
                    entropy: s,
                    nonce: a,
                    pers: n.pers,
                    persEnc: n.persEnc || "utf8"
                }), u = this.n.sub(new (i())(1)), c = 0; ; c++) {
                    var h = n.k ? n.k(c) : new (i())(l.generate(this.n.byteLength()));
                    if (!(0 >= (h = this._truncateToN(h, !0)).cmpn(1) || h.cmp(u) >= 0)) {
                        var f = this.g.mul(h);
                        if (!f.isInfinity()) {
                            var d = f.getX()
                                , p = d.umod(this.n);
                            if (0 !== p.cmpn(0)) {
                                var m = h.invm(this.n).mul(p.mul(e.getPrivate()).iadd(t));
                                if (0 !== (m = m.umod(this.n)).cmpn(0)) {
                                    var g = (f.getY().isOdd() ? 1 : 0) | (0 !== d.cmp(p) ? 2 : 0);
                                    return n.canonical && m.cmp(this.nh) > 0 && (m = this.n.sub(m),
                                        g ^= 1),
                                        new C({
                                            r: p,
                                            s: m,
                                            recoveryParam: g
                                        })
                                }
                            }
                        }
                    }
                }
            }
            ,
            B.prototype.verify = function (t, e, r, n) {
                t = this._truncateToN(new (i())(t, 16)),
                    r = this.keyFromPublic(r, n);
                var o, s = (e = new C(e, "hex")).r, a = e.s;
                if (0 > s.cmpn(1) || s.cmp(this.n) >= 0 || 0 > a.cmpn(1) || a.cmp(this.n) >= 0)
                    return !1;
                var l = a.invm(this.n)
                    , u = l.mul(t).umod(this.n)
                    , c = l.mul(s).umod(this.n);
                return this.curve._maxwellTrick ? !(o = this.g.jmulAdd(u, r.getPublic(), c)).isInfinity() && o.eqXToP(s) : !(o = this.g.mulAdd(u, r.getPublic(), c)).isInfinity() && 0 === o.getX().umod(this.n).cmp(s)
            }
            ,
            B.prototype.recoverPubKey = function (t, e, r, n) {
                M((3 & r) === r, "The recovery param is more than two bits"),
                    e = new C(e, n);
                var o = this.n
                    , s = new (i())(t)
                    , a = e.r
                    , l = e.s
                    , u = 1 & r
                    , c = r >> 1;
                if (a.cmp(this.curve.p.umod(this.curve.n)) >= 0 && c)
                    throw Error("Unable to find sencond key candinate");
                a = c ? this.curve.pointFromX(a.add(this.curve.n), u) : this.curve.pointFromX(a, u);
                var h = e.r.invm(o)
                    , f = o.sub(s).mul(h).umod(o)
                    , d = l.mul(h).umod(o);
                return this.g.mulAdd(f, a, d)
            }
            ,
            B.prototype.getKeyRecoveryParam = function (t, e, r, n) {
                if (null !== (e = new C(e, n)).recoveryParam)
                    return e.recoveryParam;
                for (var i, o = 0; o < 4; o++) {
                    try {
                        i = this.recoverPubKey(t, e, o)
                    } catch (t) {
                        continue
                    }
                    if (i.eq(r))
                        return o
                }
                throw Error("Unable to find valid recovery factor")
            }
            ;
        var D = a(function (t, e) {
            e.version = "6.5.4",
                e.utils = h,
                e.rand = function () {
                    throw Error("unsupported")
                }
                ,
                e.curve = A,
                e.curves = _,
                e.ec = B,
                e.eddsa = null
        }).ec
            , F = r(57273)
            , U = r(17213);
        let L = new (r(36288)).Yd("signing-key/5.7.0")
            , z = null;
        function G() {
            return z || (z = new D("secp256k1")),
                z
        }
        class j {
            constructor(t) {
                (0,
                    U.zG)(this, "curve", "secp256k1"),
                    (0,
                        U.zG)(this, "privateKey", (0,
                            F.Dv)(t)),
                    32 !== (0,
                        F.E1)(this.privateKey) && L.throwArgumentError("invalid private key", "privateKey", "[[ REDACTED ]]");
                let e = G().keyFromPrivate((0,
                    F.lE)(this.privateKey));
                (0,
                    U.zG)(this, "publicKey", "0x" + e.getPublic(!1, "hex")),
                    (0,
                        U.zG)(this, "compressedPublicKey", "0x" + e.getPublic(!0, "hex")),
                    (0,
                        U.zG)(this, "_isSigningKey", !0)
            }
            _addPoint(t) {
                let e = G().keyFromPublic((0,
                    F.lE)(this.publicKey))
                    , r = G().keyFromPublic((0,
                        F.lE)(t));
                return "0x" + e.pub.add(r.pub).encodeCompressed("hex")
            }
            signDigest(t) {
                let e = G().keyFromPrivate((0,
                    F.lE)(this.privateKey))
                    , r = (0,
                        F.lE)(t);
                32 !== r.length && L.throwArgumentError("bad digest length", "digest", t);
                let n = e.sign(r, {
                    canonical: !0
                });
                return (0,
                    F.N)({
                        recoveryParam: n.recoveryParam,
                        r: (0,
                            F.$m)("0x" + n.r.toString(16), 32),
                        s: (0,
                            F.$m)("0x" + n.s.toString(16), 32)
                    })
            }
            computeSharedSecret(t) {
                let e = G().keyFromPrivate((0,
                    F.lE)(this.privateKey))
                    , r = G().keyFromPublic((0,
                        F.lE)(K(t)));
                return (0,
                    F.$m)("0x" + e.derive(r.getPublic()).toString(16), 32)
            }
            static isSigningKey(t) {
                return !!(t && t._isSigningKey)
            }
        }
        function Y(t, e) {
            let r = (0,
                F.N)(e)
                , n = {
                    r: (0,
                        F.lE)(r.r),
                    s: (0,
                        F.lE)(r.s)
                };
            return "0x" + G().recoverPubKey((0,
                F.lE)(t), n, r.recoveryParam).encode("hex", !1)
        }
        function K(t, e) {
            let r = (0,
                F.lE)(t);
            if (32 === r.length) {
                let t = new j(r);
                return e ? "0x" + G().keyFromPrivate(r).getPublic(!0, "hex") : t.publicKey
            }
            return 33 === r.length ? e ? (0,
                F.Dv)(r) : "0x" + G().keyFromPublic(r).getPublic(!1, "hex") : 65 === r.length ? e ? "0x" + G().keyFromPublic(r).getPublic(!0, "hex") : (0,
                    F.Dv)(r) : L.throwArgumentError("invalid public or private key", "key", "[REDACTED]")
        }
    },
    58337: function (t, e, r) {
        "use strict";
        r.d(e, {
            Uj: function () {
                return o
            },
            te: function () {
                return c
            },
            Uw: function () {
                return s
            },
            U$: function () {
                return p
            },
            uu: function () {
                return m
            },
            Y0: function () {
                return f
            },
            XL: function () {
                return y
            },
            ZN: function () {
                return g
            }
        });
        var n, i, o, s, a = r(57273);
        let l = new (r(36288)).Yd("strings/5.7.0");
        function u(t, e, r, n, i) {
            if (t === s.BAD_PREFIX || t === s.UNEXPECTED_CONTINUE) {
                let t = 0;
                for (let n = e + 1; n < r.length && r[n] >> 6 == 2; n++)
                    t++;
                return t
            }
            return t === s.OVERRUN ? r.length - e - 1 : 0
        }
        (n = o || (o = {})).current = "",
            n.NFC = "NFC",
            n.NFD = "NFD",
            n.NFKC = "NFKC",
            n.NFKD = "NFKD",
            (i = s || (s = {})).UNEXPECTED_CONTINUE = "unexpected continuation byte",
            i.BAD_PREFIX = "bad codepoint prefix",
            i.OVERRUN = "string overrun",
            i.MISSING_CONTINUE = "missing continuation byte",
            i.OUT_OF_RANGE = "out of UTF-8 range",
            i.UTF16_SURROGATE = "UTF-16 surrogate",
            i.OVERLONG = "overlong representation";
        let c = Object.freeze({
            error: function (t, e, r, n, i) {
                return l.throwArgumentError(`invalid codepoint at offset ${e}; ${t}`, "bytes", r)
            },
            ignore: u,
            replace: function (t, e, r, n, i) {
                return t === s.OVERLONG ? (n.push(i),
                    0) : (n.push(65533),
                        u(t, e, r, n, i))
            }
        });
        function h(t, e) {
            null == e && (e = c.error),
                t = (0,
                    a.lE)(t);
            let r = []
                , n = 0;
            for (; n < t.length;) {
                let i = t[n++];
                if (i >> 7 == 0) {
                    r.push(i);
                    continue
                }
                let o = null
                    , a = null;
                if ((224 & i) == 192)
                    o = 1,
                        a = 127;
                else if ((240 & i) == 224)
                    o = 2,
                        a = 2047;
                else if ((248 & i) == 240)
                    o = 3,
                        a = 65535;
                else {
                    (192 & i) == 128 ? n += e(s.UNEXPECTED_CONTINUE, n - 1, t, r) : n += e(s.BAD_PREFIX, n - 1, t, r);
                    continue
                }
                if (n - 1 + o >= t.length) {
                    n += e(s.OVERRUN, n - 1, t, r);
                    continue
                }
                let l = i & (1 << 8 - o - 1) - 1;
                for (let i = 0; i < o; i++) {
                    let i = t[n];
                    if ((192 & i) != 128) {
                        n += e(s.MISSING_CONTINUE, n, t, r),
                            l = null;
                        break
                    }
                    l = l << 6 | 63 & i,
                        n++
                }
                if (null !== l) {
                    if (l > 1114111) {
                        n += e(s.OUT_OF_RANGE, n - 1 - o, t, r, l);
                        continue
                    }
                    if (l >= 55296 && l <= 57343) {
                        n += e(s.UTF16_SURROGATE, n - 1 - o, t, r, l);
                        continue
                    }
                    if (l <= a) {
                        n += e(s.OVERLONG, n - 1 - o, t, r, l);
                        continue
                    }
                    r.push(l)
                }
            }
            return r
        }
        function f(t, e = o.current) {
            e != o.current && (l.checkNormalize(),
                t = t.normalize(e));
            let r = [];
            for (let e = 0; e < t.length; e++) {
                let n = t.charCodeAt(e);
                if (n < 128)
                    r.push(n);
                else if (n < 2048)
                    r.push(n >> 6 | 192),
                        r.push(63 & n | 128);
                else if ((64512 & n) == 55296) {
                    e++;
                    let i = t.charCodeAt(e);
                    if (e >= t.length || (64512 & i) != 56320)
                        throw Error("invalid utf-8 string");
                    let o = 65536 + ((1023 & n) << 10) + (1023 & i);
                    r.push(o >> 18 | 240),
                        r.push(o >> 12 & 63 | 128),
                        r.push(o >> 6 & 63 | 128),
                        r.push(63 & o | 128)
                } else
                    r.push(n >> 12 | 224),
                        r.push(n >> 6 & 63 | 128),
                        r.push(63 & n | 128)
            }
            return (0,
                a.lE)(r)
        }
        function d(t) {
            let e = "0000" + t.toString(16);
            return "\\u" + e.substring(e.length - 4)
        }
        function p(t, e) {
            return '"' + h(t, e).map(t => {
                if (t < 256) {
                    switch (t) {
                        case 8:
                            return "\\b";
                        case 9:
                            return "\\t";
                        case 10:
                            return "\\n";
                        case 13:
                            return "\\r";
                        case 34:
                            return '\\"';
                        case 92:
                            return "\\\\"
                    }
                    if (t >= 32 && t < 127)
                        return String.fromCharCode(t)
                }
                return t <= 65535 ? d(t) : d(((t -= 65536) >> 10 & 1023) + 55296) + d((1023 & t) + 56320)
            }
            ).join("") + '"'
        }
        function m(t) {
            return t.map(t => t <= 65535 ? String.fromCharCode(t) : String.fromCharCode(((t -= 65536) >> 10 & 1023) + 55296, (1023 & t) + 56320)).join("")
        }
        function g(t, e) {
            return m(h(t, e))
        }
        function y(t, e = o.current) {
            return h(f(t, e))
        }
    },
    12060: function (t, e, r) {
        "use strict";
        r.d(e, {
            em: function () {
                return i
            },
            z7: function () {
                return _
            },
            db: function () {
                return b
            },
            Qc: function () {
                return T
            },
            RJ: function () {
                return w
            },
            qC: function () {
                return N
            }
        });
        var n, i, o = r(18994), s = r(92598), a = r(57273), l = r(53690), u = r(14184), c = r(17213), h = r(7054), f = r(74731), d = r(36288);
        let p = new d.Yd("transactions/5.7.0");
        function m(t) {
            return "0x" === t ? null : (0,
                o.Kn)(t)
        }
        function g(t) {
            return "0x" === t ? l._Y : s.O$.from(t)
        }
        (n = i || (i = {}))[n.legacy = 0] = "legacy",
            n[n.eip2930 = 1] = "eip2930",
            n[n.eip1559 = 2] = "eip1559";
        let y = [{
            name: "nonce",
            maxLength: 32,
            numeric: !0
        }, {
            name: "gasPrice",
            maxLength: 32,
            numeric: !0
        }, {
            name: "gasLimit",
            maxLength: 32,
            numeric: !0
        }, {
            name: "to",
            length: 20
        }, {
            name: "value",
            maxLength: 32,
            numeric: !0
        }, {
            name: "data"
        }]
            , v = {
                chainId: !0,
                data: !0,
                gasLimit: !0,
                gasPrice: !0,
                nonce: !0,
                to: !0,
                type: !0,
                value: !0
            };
        function b(t) {
            let e = (0,
                f.VW)(t);
            return (0,
                o.Kn)((0,
                    a.p3)((0,
                        u.w)((0,
                            a.p3)(e, 1)), 12))
        }
        function w(t, e) {
            return b((0,
                f.LO)((0,
                    a.lE)(t), e))
        }
        function E(t, e) {
            let r = (0,
                a.G1)(s.O$.from(t).toHexString());
            return r.length > 32 && p.throwArgumentError("invalid length for " + e, "transaction:" + e, t),
                r
        }
        function A(t, e) {
            return {
                address: (0,
                    o.Kn)(t),
                storageKeys: (e || []).map((e, r) => (32 !== (0,
                    a.E1)(e) && p.throwArgumentError("invalid access list storageKey", `accessList[${t}:${r}]`, e),
                    e.toLowerCase()))
            }
        }
        function _(t) {
            if (Array.isArray(t))
                return t.map((t, e) => Array.isArray(t) ? (t.length > 2 && p.throwArgumentError("access list expected to be [ address, storageKeys[] ]", `value[${e}]`, t),
                    A(t[0], t[1])) : A(t.address, t.storageKeys));
            let e = Object.keys(t).map(e => {
                let r = t[e].reduce((t, e) => (t[e] = !0,
                    t), {});
                return A(e, Object.keys(r).sort())
            }
            );
            return e.sort((t, e) => t.address.localeCompare(e.address)),
                e
        }
        function S(t) {
            return _(t).map(t => [t.address, t.storageKeys])
        }
        function k(t, e) {
            if (null != t.gasPrice) {
                let e = s.O$.from(t.gasPrice)
                    , r = s.O$.from(t.maxFeePerGas || 0);
                e.eq(r) || p.throwArgumentError("mismatch EIP-1559 gasPrice != maxFeePerGas", "tx", {
                    gasPrice: e,
                    maxFeePerGas: r
                })
            }
            let r = [E(t.chainId || 0, "chainId"), E(t.nonce || 0, "nonce"), E(t.maxPriorityFeePerGas || 0, "maxPriorityFeePerGas"), E(t.maxFeePerGas || 0, "maxFeePerGas"), E(t.gasLimit || 0, "gasLimit"), null != t.to ? (0,
                o.Kn)(t.to) : "0x", E(t.value || 0, "value"), t.data || "0x", S(t.accessList || [])];
            if (e) {
                let t = (0,
                    a.N)(e);
                r.push(E(t.recoveryParam, "recoveryParam")),
                    r.push((0,
                        a.G1)(t.r)),
                    r.push((0,
                        a.G1)(t.s))
            }
            return (0,
                a.xs)(["0x02", h.encode(r)])
        }
        function P(t, e) {
            let r = [E(t.chainId || 0, "chainId"), E(t.nonce || 0, "nonce"), E(t.gasPrice || 0, "gasPrice"), E(t.gasLimit || 0, "gasLimit"), null != t.to ? (0,
                o.Kn)(t.to) : "0x", E(t.value || 0, "value"), t.data || "0x", S(t.accessList || [])];
            if (e) {
                let t = (0,
                    a.N)(e);
                r.push(E(t.recoveryParam, "recoveryParam")),
                    r.push((0,
                        a.G1)(t.r)),
                    r.push((0,
                        a.G1)(t.s))
            }
            return (0,
                a.xs)(["0x01", h.encode(r)])
        }
        function N(t, e) {
            if (null == t.type || 0 === t.type)
                return null != t.accessList && p.throwArgumentError("untyped transactions do not support accessList; include type: 1", "transaction", t),
                    function (t, e) {
                        (0,
                            c.uj)(t, v);
                        let r = [];
                        y.forEach(function (e) {
                            let n = t[e.name] || []
                                , i = {};
                            e.numeric && (i.hexPad = "left"),
                                n = (0,
                                    a.lE)((0,
                                        a.Dv)(n, i)),
                                e.length && n.length !== e.length && n.length > 0 && p.throwArgumentError("invalid length for " + e.name, "transaction:" + e.name, n),
                                e.maxLength && (n = (0,
                                    a.G1)(n)).length > e.maxLength && p.throwArgumentError("invalid length for " + e.name, "transaction:" + e.name, n),
                                r.push((0,
                                    a.Dv)(n))
                        });
                        let n = 0;
                        if (null != t.chainId ? "number" != typeof (n = t.chainId) && p.throwArgumentError("invalid transaction.chainId", "transaction", t) : e && !(0,
                            a.Zq)(e) && e.v > 28 && (n = Math.floor((e.v - 35) / 2)),
                            0 !== n && (r.push((0,
                                a.Dv)(n)),
                                r.push("0x"),
                                r.push("0x")),
                            !e)
                            return h.encode(r);
                        let i = (0,
                            a.N)(e)
                            , o = 27 + i.recoveryParam;
                        return 0 !== n ? (r.pop(),
                            r.pop(),
                            r.pop(),
                            o += 2 * n + 8,
                            i.v > 28 && i.v !== o && p.throwArgumentError("transaction.chainId/signature.v mismatch", "signature", e)) : i.v !== o && p.throwArgumentError("transaction.chainId/signature.v mismatch", "signature", e),
                            r.push((0,
                                a.Dv)(o)),
                            r.push((0,
                                a.G1)((0,
                                    a.lE)(i.r))),
                            r.push((0,
                                a.G1)((0,
                                    a.lE)(i.s))),
                            h.encode(r)
                    }(t, e);
            switch (t.type) {
                case 1:
                    return P(t, e);
                case 2:
                    return k(t, e)
            }
            return p.throwError(`unsupported transaction type: ${t.type}`, d.Yd.errors.UNSUPPORTED_OPERATION, {
                operation: "serializeTransaction",
                transactionType: t.type
            })
        }
        function C(t, e, r) {
            try {
                let r = g(e[0]).toNumber();
                if (0 !== r && 1 !== r)
                    throw Error("bad recid");
                t.v = r
            } catch (t) {
                p.throwArgumentError("invalid v for transaction type: 1", "v", e[0])
            }
            t.r = (0,
                a.$m)(e[1], 32),
                t.s = (0,
                    a.$m)(e[2], 32);
            try {
                let e = (0,
                    u.w)(r(t));
                t.from = w(e, {
                    r: t.r,
                    s: t.s,
                    recoveryParam: t.v
                })
            } catch (t) { }
        }
        function T(t) {
            let e = (0,
                a.lE)(t);
            if (e[0] > 127)
                return function (t) {
                    let e = h.decode(t);
                    9 !== e.length && 6 !== e.length && p.throwArgumentError("invalid raw transaction", "rawTransaction", t);
                    let r = {
                        nonce: g(e[0]).toNumber(),
                        gasPrice: g(e[1]),
                        gasLimit: g(e[2]),
                        to: m(e[3]),
                        value: g(e[4]),
                        data: e[5],
                        chainId: 0
                    };
                    if (6 === e.length)
                        return r;
                    try {
                        r.v = s.O$.from(e[6]).toNumber()
                    } catch (t) {
                        return r
                    }
                    if (r.r = (0,
                        a.$m)(e[7], 32),
                        r.s = (0,
                            a.$m)(e[8], 32),
                        s.O$.from(r.r).isZero() && s.O$.from(r.s).isZero())
                        r.chainId = r.v,
                            r.v = 0;
                    else {
                        r.chainId = Math.floor((r.v - 35) / 2),
                            r.chainId < 0 && (r.chainId = 0);
                        let n = r.v - 27
                            , i = e.slice(0, 6);
                        0 !== r.chainId && (i.push((0,
                            a.Dv)(r.chainId)),
                            i.push("0x"),
                            i.push("0x"),
                            n -= 2 * r.chainId + 8);
                        let o = (0,
                            u.w)(h.encode(i));
                        try {
                            r.from = w(o, {
                                r: (0,
                                    a.Dv)(r.r),
                                s: (0,
                                    a.Dv)(r.s),
                                recoveryParam: n
                            })
                        } catch (t) { }
                        r.hash = (0,
                            u.w)(t)
                    }
                    return r.type = null,
                        r
                }(e);
            switch (e[0]) {
                case 1:
                    return function (t) {
                        let e = h.decode(t.slice(1));
                        8 !== e.length && 11 !== e.length && p.throwArgumentError("invalid component count for transaction type: 1", "payload", (0,
                            a.Dv)(t));
                        let r = {
                            type: 1,
                            chainId: g(e[0]).toNumber(),
                            nonce: g(e[1]).toNumber(),
                            gasPrice: g(e[2]),
                            gasLimit: g(e[3]),
                            to: m(e[4]),
                            value: g(e[5]),
                            data: e[6],
                            accessList: _(e[7])
                        };
                        return 8 === e.length || (r.hash = (0,
                            u.w)(t),
                            C(r, e.slice(8), P)),
                            r
                    }(e);
                case 2:
                    return function (t) {
                        let e = h.decode(t.slice(1));
                        9 !== e.length && 12 !== e.length && p.throwArgumentError("invalid component count for transaction type: 2", "payload", (0,
                            a.Dv)(t));
                        let r = g(e[2])
                            , n = g(e[3])
                            , i = {
                                type: 2,
                                chainId: g(e[0]).toNumber(),
                                nonce: g(e[1]).toNumber(),
                                maxPriorityFeePerGas: r,
                                maxFeePerGas: n,
                                gasPrice: null,
                                gasLimit: g(e[4]),
                                to: m(e[5]),
                                value: g(e[6]),
                                data: e[7],
                                accessList: _(e[8])
                            };
                        return 9 === e.length || (i.hash = (0,
                            u.w)(t),
                            C(i, e.slice(9), k)),
                            i
                    }(e)
            }
            return p.throwError(`unsupported transaction type: ${e[0]}`, d.Yd.errors.UNSUPPORTED_OPERATION, {
                operation: "parseTransaction",
                transactionType: e[0]
            })
        }
    },
    73760: function (t, e, r) {
        "use strict";
        r.d(e, {
            Fn: function () {
                return s
            },
            dF: function () {
                return u
            },
            bM: function () {
                return a
            },
            fi: function () {
                return c
            },
            vz: function () {
                return l
            }
        });
        var n = r(84844);
        let i = new (r(36288)).Yd("units/5.7.0")
            , o = ["wei", "kwei", "mwei", "gwei", "szabo", "finney", "ether"];
        function s(t) {
            let e = String(t).split(".");
            (e.length > 2 || !e[0].match(/^-?[0-9]*$/) || e[1] && !e[1].match(/^[0-9]*$/) || "." === t || "-." === t) && i.throwArgumentError("invalid value", "value", t);
            let r = e[0]
                , n = "";
            for ("-" === r.substring(0, 1) && (n = "-",
                r = r.substring(1)); "0" === r.substring(0, 1);)
                r = r.substring(1);
            "" === r && (r = "0");
            let o = "";
            for (2 === e.length && (o = "." + (e[1] || "0")); o.length > 2 && "0" === o[o.length - 1];)
                o = o.substring(0, o.length - 1);
            let s = [];
            for (; r.length;) {
                if (r.length <= 3) {
                    s.unshift(r);
                    break
                }
                {
                    let t = r.length - 3;
                    s.unshift(r.substring(t)),
                        r = r.substring(0, t)
                }
            }
            return n + s.join(",") + o
        }
        function a(t, e) {
            if ("string" == typeof e) {
                let t = o.indexOf(e);
                -1 !== t && (e = 3 * t)
            }
            return (0,
                n.S5)(t, null != e ? e : 18)
        }
        function l(t, e) {
            if ("string" != typeof t && i.throwArgumentError("value must be a string", "value", t),
                "string" == typeof e) {
                let t = o.indexOf(e);
                -1 !== t && (e = 3 * t)
            }
            return (0,
                n.Ox)(t, null != e ? e : 18)
        }
        function u(t) {
            return a(t, 18)
        }
        function c(t) {
            return l(t, 18)
        }
    },
    39318: function (t, e, r) {
        "use strict";
        r.d(e, {
            MY: function () {
                return h
            },
            rd: function () {
                return f
            },
            $l: function () {
                return d
            }
        });
        var n = r(72275)
            , i = r(57273)
            , o = r(17213)
            , s = r(58337)
            , a = r(36288);
        let l = new a.Yd("web/5.7.1");
        function u(t) {
            return new Promise(e => {
                setTimeout(e, t)
            }
            )
        }
        function c(t, e) {
            if (null == t)
                return null;
            if ("string" == typeof t)
                return t;
            if ((0,
                i.Zq)(t)) {
                if (e && ("text" === e.split("/")[0] || "application/json" === e.split(";")[0].trim()))
                    try {
                        return (0,
                            s.ZN)(t)
                    } catch (t) { }
                return (0,
                    i.Dv)(t)
            }
            return t
        }
        function h(t, e, r) {
            let h;
            let f = "object" == typeof t && null != t.throttleLimit ? t.throttleLimit : 12;
            l.assertArgument(f > 0 && f % 1 == 0, "invalid connection throttle limit", "connection.throttleLimit", f);
            let d = "object" == typeof t ? t.throttleCallback : null
                , p = "object" == typeof t && "number" == typeof t.throttleSlotInterval ? t.throttleSlotInterval : 100;
            l.assertArgument(p > 0 && p % 1 == 0, "invalid connection throttle slot interval", "connection.throttleSlotInterval", p);
            let m = "object" == typeof t && !!t.errorPassThrough
                , g = {}
                , y = null
                , v = {
                    method: "GET"
                }
                , b = !1
                , w = 12e4;
            if ("string" == typeof t)
                y = t;
            else if ("object" == typeof t) {
                if ((null == t || null == t.url) && l.throwArgumentError("missing URL", "connection.url", t),
                    y = t.url,
                    "number" == typeof t.timeout && t.timeout > 0 && (w = t.timeout),
                    t.headers)
                    for (let e in t.headers)
                        g[e.toLowerCase()] = {
                            key: e,
                            value: String(t.headers[e])
                        },
                            ["if-none-match", "if-modified-since"].indexOf(e.toLowerCase()) >= 0 && (b = !0);
                if (v.allowGzip = !!t.allowGzip,
                    null != t.user && null != t.password) {
                    "https:" !== y.substring(0, 6) && !0 !== t.allowInsecureAuthentication && l.throwError("basic authentication requires a secure https url", a.Yd.errors.INVALID_ARGUMENT, {
                        argument: "url",
                        url: y,
                        user: t.user,
                        password: "[REDACTED]"
                    });
                    let e = t.user + ":" + t.password;
                    g.authorization = {
                        key: "Authorization",
                        value: "Basic " + (0,
                            n.c)((0,
                                s.Y0)(e))
                    }
                }
                null != t.skipFetchSetup && (v.skipFetchSetup = !!t.skipFetchSetup),
                    null != t.fetchOptions && (v.fetchOptions = (0,
                        o.DC)(t.fetchOptions))
            }
            let E = RegExp("^data:([^;:]*)?(;base64)?,(.*)$", "i")
                , A = y ? y.match(E) : null;
            if (A)
                try {
                    var _;
                    let t = {
                        statusCode: 200,
                        statusMessage: "OK",
                        headers: {
                            "content-type": A[1] || "text/plain"
                        },
                        body: A[2] ? (0,
                            n.J)(A[3]) : (_ = A[3],
                                (0,
                                    s.Y0)(_.replace(/%([0-9a-f][0-9a-f])/gi, (t, e) => String.fromCharCode(parseInt(e, 16)))))
                    }
                        , e = t.body;
                    return r && (e = r(t.body, t)),
                        Promise.resolve(e)
                } catch (t) {
                    l.throwError("processing response error", a.Yd.errors.SERVER_ERROR, {
                        body: c(A[1], A[2]),
                        error: t,
                        requestBody: null,
                        requestMethod: "GET",
                        url: y
                    })
                }
            e && (v.method = "POST",
                v.body = e,
                null == g["content-type"] && (g["content-type"] = {
                    key: "Content-Type",
                    value: "application/octet-stream"
                }),
                null == g["content-length"] && (g["content-length"] = {
                    key: "Content-Length",
                    value: String(e.length)
                }));
            let S = {};
            Object.keys(g).forEach(t => {
                let e = g[t];
                S[e.key] = e.value
            }
            ),
                v.headers = S;
            let k = (h = null,
            {
                promise: new Promise(function (t, e) {
                    w && (h = setTimeout(() => {
                        null != h && (h = null,
                            e(l.makeError("timeout", a.Yd.errors.TIMEOUT, {
                                requestBody: c(v.body, S["content-type"]),
                                requestMethod: v.method,
                                timeout: w,
                                url: y
                            })))
                    }
                        , w))
                }
                ),
                cancel: function () {
                    null != h && (clearTimeout(h),
                        h = null)
                }
            })
                , P = function () {
                    var t, e, n, o;
                    return t = this,
                        e = void 0,
                        n = void 0,
                        o = function* () {
                            for (let t = 0; t < f; t++) {
                                let e = null;
                                try {
                                    if (e = yield function (t, e) {
                                        var r, n, o, s;
                                        return r = this,
                                            n = void 0,
                                            o = void 0,
                                            s = function* () {
                                                null == e && (e = {});
                                                let r = {
                                                    method: e.method || "GET",
                                                    headers: e.headers || {},
                                                    body: e.body || void 0
                                                };
                                                if (!0 !== e.skipFetchSetup && (r.mode = "cors",
                                                    r.cache = "no-cache",
                                                    r.credentials = "same-origin",
                                                    r.redirect = "follow",
                                                    r.referrer = "client"),
                                                    null != e.fetchOptions) {
                                                    let t = e.fetchOptions;
                                                    t.mode && (r.mode = t.mode),
                                                        t.cache && (r.cache = t.cache),
                                                        t.credentials && (r.credentials = t.credentials),
                                                        t.redirect && (r.redirect = t.redirect),
                                                        t.referrer && (r.referrer = t.referrer)
                                                }
                                                let n = yield fetch(t, r)
                                                    , o = yield n.arrayBuffer()
                                                    , s = {};
                                                return n.headers.forEach ? n.headers.forEach((t, e) => {
                                                    s[e.toLowerCase()] = t
                                                }
                                                ) : n.headers.keys().forEach(t => {
                                                    s[t.toLowerCase()] = n.headers.get(t)
                                                }
                                                ),
                                                {
                                                    headers: s,
                                                    statusCode: n.status,
                                                    statusMessage: n.statusText,
                                                    body: (0,
                                                        i.lE)(new Uint8Array(o))
                                                }
                                            }
                                            ,
                                            new (o || (o = Promise))(function (t, e) {
                                                function i(t) {
                                                    try {
                                                        l(s.next(t))
                                                    } catch (t) {
                                                        e(t)
                                                    }
                                                }
                                                function a(t) {
                                                    try {
                                                        l(s.throw(t))
                                                    } catch (t) {
                                                        e(t)
                                                    }
                                                }
                                                function l(e) {
                                                    var r;
                                                    e.done ? t(e.value) : ((r = e.value) instanceof o ? r : new o(function (t) {
                                                        t(r)
                                                    }
                                                    )).then(i, a)
                                                }
                                                l((s = s.apply(r, n || [])).next())
                                            }
                                            )
                                    }(y, v),
                                        t < f) {
                                        if (301 === e.statusCode || 302 === e.statusCode) {
                                            let t = e.headers.location || "";
                                            if ("GET" === v.method && t.match(/^https:/)) {
                                                y = e.headers.location;
                                                continue
                                            }
                                        } else if (429 === e.statusCode) {
                                            let r = !0;
                                            if (d && (r = yield d(t, y)),
                                                r) {
                                                let r = 0
                                                    , n = e.headers["retry-after"];
                                                r = "string" == typeof n && n.match(/^[1-9][0-9]*$/) ? 1e3 * parseInt(n) : p * parseInt(String(Math.random() * Math.pow(2, t))),
                                                    yield u(r);
                                                continue
                                            }
                                        }
                                    }
                                } catch (t) {
                                    null == (e = t.response) && (k.cancel(),
                                        l.throwError("missing response", a.Yd.errors.SERVER_ERROR, {
                                            requestBody: c(v.body, S["content-type"]),
                                            requestMethod: v.method,
                                            serverError: t,
                                            url: y
                                        }))
                                }
                                let n = e.body;
                                if (b && 304 === e.statusCode ? n = null : !m && (e.statusCode < 200 || e.statusCode >= 300) && (k.cancel(),
                                    l.throwError("bad response", a.Yd.errors.SERVER_ERROR, {
                                        status: e.statusCode,
                                        headers: e.headers,
                                        body: c(n, e.headers ? e.headers["content-type"] : null),
                                        requestBody: c(v.body, S["content-type"]),
                                        requestMethod: v.method,
                                        url: y
                                    })),
                                    r)
                                    try {
                                        let t = yield r(n, e);
                                        return k.cancel(),
                                            t
                                    } catch (r) {
                                        if (r.throttleRetry && t < f) {
                                            let e = !0;
                                            if (d && (e = yield d(t, y)),
                                                e) {
                                                let e = p * parseInt(String(Math.random() * Math.pow(2, t)));
                                                yield u(e);
                                                continue
                                            }
                                        }
                                        k.cancel(),
                                            l.throwError("processing response error", a.Yd.errors.SERVER_ERROR, {
                                                body: c(n, e.headers ? e.headers["content-type"] : null),
                                                error: r,
                                                requestBody: c(v.body, S["content-type"]),
                                                requestMethod: v.method,
                                                url: y
                                            })
                                    }
                                return k.cancel(),
                                    n
                            }
                            return l.throwError("failed response", a.Yd.errors.SERVER_ERROR, {
                                requestBody: c(v.body, S["content-type"]),
                                requestMethod: v.method,
                                url: y
                            })
                        }
                        ,
                        new (n || (n = Promise))(function (r, i) {
                            function s(t) {
                                try {
                                    l(o.next(t))
                                } catch (t) {
                                    i(t)
                                }
                            }
                            function a(t) {
                                try {
                                    l(o.throw(t))
                                } catch (t) {
                                    i(t)
                                }
                            }
                            function l(t) {
                                var e;
                                t.done ? r(t.value) : ((e = t.value) instanceof n ? e : new n(function (t) {
                                    t(e)
                                }
                                )).then(s, a)
                            }
                            l((o = o.apply(t, e || [])).next())
                        }
                        )
                }();
            return Promise.race([k.promise, P])
        }
        function f(t, e, r) {
            let n = null;
            if (null != e) {
                n = (0,
                    s.Y0)(e);
                let r = "string" == typeof t ? {
                    url: t
                } : (0,
                    o.DC)(t);
                r.headers ? 0 !== Object.keys(r.headers).filter(t => "content-type" === t.toLowerCase()).length || (r.headers = (0,
                    o.DC)(r.headers),
                    r.headers["content-type"] = "application/json") : r.headers = {
                        "content-type": "application/json"
                    },
                    t = r
            }
            return h(t, n, (t, e) => {
                let n = null;
                if (null != t)
                    try {
                        n = JSON.parse((0,
                            s.ZN)(t))
                    } catch (e) {
                        l.throwError("invalid JSON", a.Yd.errors.SERVER_ERROR, {
                            body: t,
                            error: e
                        })
                    }
                return r && (n = r(n, e)),
                    n
            }
            )
        }
        function d(t, e) {
            return e || (e = {}),
                null == (e = (0,
                    o.DC)(e)).floor && (e.floor = 0),
                null == e.ceiling && (e.ceiling = 1e4),
                null == e.interval && (e.interval = 250),
                new Promise(function (r, n) {
                    let i = null
                        , o = !1
                        , s = () => !o && (o = !0,
                            i && clearTimeout(i),
                            !0);
                    e.timeout && (i = setTimeout(() => {
                        s() && n(Error("timeout"))
                    }
                        , e.timeout));
                    let a = e.retryLimit
                        , l = 0;
                    !function i() {
                        return t().then(function (t) {
                            if (void 0 !== t)
                                s() && r(t);
                            else if (e.oncePoll)
                                e.oncePoll.once("poll", i);
                            else if (e.onceBlock)
                                e.onceBlock.once("block", i);
                            else if (!o) {
                                if (++l > a) {
                                    s() && n(Error("retry limit reached"));
                                    return
                                }
                                let t = e.interval * parseInt(String(Math.random() * Math.pow(2, l)));
                                t < e.floor && (t = e.floor),
                                    t > e.ceiling && (t = e.ceiling),
                                    setTimeout(i, t)
                            }
                            return null
                        }, function (t) {
                            s() && n(t)
                        })
                    }()
                }
                )
        }
    },
    66179: function (t) {
        "use strict";
        !function (e) {
            function r(t) {
                return parseInt(t) === t
            }
            function n(t) {
                if (!r(t.length))
                    return !1;
                for (var e = 0; e < t.length; e++)
                    if (!r(t[e]) || t[e] < 0 || t[e] > 255)
                        return !1;
                return !0
            }
            function i(t, e) {
                if (t.buffer && ArrayBuffer.isView(t) && "Uint8Array" === t.name)
                    return e && (t = t.slice ? t.slice() : Array.prototype.slice.call(t)),
                        t;
                if (Array.isArray(t)) {
                    if (!n(t))
                        throw Error("Array contains invalid value: " + t);
                    return new Uint8Array(t)
                }
                if (r(t.length) && n(t))
                    return new Uint8Array(t);
                throw Error("unsupported array-like object")
            }
            function o(t) {
                return new Uint8Array(t)
            }
            function s(t, e, r, n, i) {
                (null != n || null != i) && (t = t.slice ? t.slice(n, i) : Array.prototype.slice.call(t, n, i)),
                    e.set(t, r)
            }
            var a, l = (a = "0123456789abcdef",
            {
                toBytes: function (t) {
                    for (var e = [], r = 0; r < t.length; r += 2)
                        e.push(parseInt(t.substr(r, 2), 16));
                    return e
                },
                fromBytes: function (t) {
                    for (var e = [], r = 0; r < t.length; r++) {
                        var n = t[r];
                        e.push(a[(240 & n) >> 4] + a[15 & n])
                    }
                    return e.join("")
                }
            }), u = {
                16: 10,
                24: 12,
                32: 14
            }, c = [1, 2, 4, 8, 16, 32, 64, 128, 27, 54, 108, 216, 171, 77, 154, 47, 94, 188, 99, 198, 151, 53, 106, 212, 179, 125, 250, 239, 197, 145], h = [99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22], f = [82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125], d = [3328402341, 4168907908, 4000806809, 4135287693, 4294111757, 3597364157, 3731845041, 2445657428, 1613770832, 33620227, 3462883241, 1445669757, 3892248089, 3050821474, 1303096294, 3967186586, 2412431941, 528646813, 2311702848, 4202528135, 4026202645, 2992200171, 2387036105, 4226871307, 1101901292, 3017069671, 1604494077, 1169141738, 597466303, 1403299063, 3832705686, 2613100635, 1974974402, 3791519004, 1033081774, 1277568618, 1815492186, 2118074177, 4126668546, 2211236943, 1748251740, 1369810420, 3521504564, 4193382664, 3799085459, 2883115123, 1647391059, 706024767, 134480908, 2512897874, 1176707941, 2646852446, 806885416, 932615841, 168101135, 798661301, 235341577, 605164086, 461406363, 3756188221, 3454790438, 1311188841, 2142417613, 3933566367, 302582043, 495158174, 1479289972, 874125870, 907746093, 3698224818, 3025820398, 1537253627, 2756858614, 1983593293, 3084310113, 2108928974, 1378429307, 3722699582, 1580150641, 327451799, 2790478837, 3117535592, 0, 3253595436, 1075847264, 3825007647, 2041688520, 3059440621, 3563743934, 2378943302, 1740553945, 1916352843, 2487896798, 2555137236, 2958579944, 2244988746, 3151024235, 3320835882, 1336584933, 3992714006, 2252555205, 2588757463, 1714631509, 293963156, 2319795663, 3925473552, 67240454, 4269768577, 2689618160, 2017213508, 631218106, 1269344483, 2723238387, 1571005438, 2151694528, 93294474, 1066570413, 563977660, 1882732616, 4059428100, 1673313503, 2008463041, 2950355573, 1109467491, 537923632, 3858759450, 4260623118, 3218264685, 2177748300, 403442708, 638784309, 3287084079, 3193921505, 899127202, 2286175436, 773265209, 2479146071, 1437050866, 4236148354, 2050833735, 3362022572, 3126681063, 840505643, 3866325909, 3227541664, 427917720, 2655997905, 2749160575, 1143087718, 1412049534, 999329963, 193497219, 2353415882, 3354324521, 1807268051, 672404540, 2816401017, 3160301282, 369822493, 2916866934, 3688947771, 1681011286, 1949973070, 336202270, 2454276571, 201721354, 1210328172, 3093060836, 2680341085, 3184776046, 1135389935, 3294782118, 965841320, 831886756, 3554993207, 4068047243, 3588745010, 2345191491, 1849112409, 3664604599, 26054028, 2983581028, 2622377682, 1235855840, 3630984372, 2891339514, 4092916743, 3488279077, 3395642799, 4101667470, 1202630377, 268961816, 1874508501, 4034427016, 1243948399, 1546530418, 941366308, 1470539505, 1941222599, 2546386513, 3421038627, 2715671932, 3899946140, 1042226977, 2521517021, 1639824860, 227249030, 260737669, 3765465232, 2084453954, 1907733956, 3429263018, 2420656344, 100860677, 4160157185, 470683154, 3261161891, 1781871967, 2924959737, 1773779408, 394692241, 2579611992, 974986535, 664706745, 3655459128, 3958962195, 731420851, 571543859, 3530123707, 2849626480, 126783113, 865375399, 765172662, 1008606754, 361203602, 3387549984, 2278477385, 2857719295, 1344809080, 2782912378, 59542671, 1503764984, 160008576, 437062935, 1707065306, 3622233649, 2218934982, 3496503480, 2185314755, 697932208, 1512910199, 504303377, 2075177163, 2824099068, 1841019862, 739644986], p = [2781242211, 2230877308, 2582542199, 2381740923, 234877682, 3184946027, 2984144751, 1418839493, 1348481072, 50462977, 2848876391, 2102799147, 434634494, 1656084439, 3863849899, 2599188086, 1167051466, 2636087938, 1082771913, 2281340285, 368048890, 3954334041, 3381544775, 201060592, 3963727277, 1739838676, 4250903202, 3930435503, 3206782108, 4149453988, 2531553906, 1536934080, 3262494647, 484572669, 2923271059, 1783375398, 1517041206, 1098792767, 49674231, 1334037708, 1550332980, 4098991525, 886171109, 150598129, 2481090929, 1940642008, 1398944049, 1059722517, 201851908, 1385547719, 1699095331, 1587397571, 674240536, 2704774806, 252314885, 3039795866, 151914247, 908333586, 2602270848, 1038082786, 651029483, 1766729511, 3447698098, 2682942837, 454166793, 2652734339, 1951935532, 775166490, 758520603, 3000790638, 4004797018, 4217086112, 4137964114, 1299594043, 1639438038, 3464344499, 2068982057, 1054729187, 1901997871, 2534638724, 4121318227, 1757008337, 0, 750906861, 1614815264, 535035132, 3363418545, 3988151131, 3201591914, 1183697867, 3647454910, 1265776953, 3734260298, 3566750796, 3903871064, 1250283471, 1807470800, 717615087, 3847203498, 384695291, 3313910595, 3617213773, 1432761139, 2484176261, 3481945413, 283769337, 100925954, 2180939647, 4037038160, 1148730428, 3123027871, 3813386408, 4087501137, 4267549603, 3229630528, 2315620239, 2906624658, 3156319645, 1215313976, 82966005, 3747855548, 3245848246, 1974459098, 1665278241, 807407632, 451280895, 251524083, 1841287890, 1283575245, 337120268, 891687699, 801369324, 3787349855, 2721421207, 3431482436, 959321879, 1469301956, 4065699751, 2197585534, 1199193405, 2898814052, 3887750493, 724703513, 2514908019, 2696962144, 2551808385, 3516813135, 2141445340, 1715741218, 2119445034, 2872807568, 2198571144, 3398190662, 700968686, 3547052216, 1009259540, 2041044702, 3803995742, 487983883, 1991105499, 1004265696, 1449407026, 1316239930, 504629770, 3683797321, 168560134, 1816667172, 3837287516, 1570751170, 1857934291, 4014189740, 2797888098, 2822345105, 2754712981, 936633572, 2347923833, 852879335, 1133234376, 1500395319, 3084545389, 2348912013, 1689376213, 3533459022, 3762923945, 3034082412, 4205598294, 133428468, 634383082, 2949277029, 2398386810, 3913789102, 403703816, 3580869306, 2297460856, 1867130149, 1918643758, 607656988, 4049053350, 3346248884, 1368901318, 600565992, 2090982877, 2632479860, 557719327, 3717614411, 3697393085, 2249034635, 2232388234, 2430627952, 1115438654, 3295786421, 2865522278, 3633334344, 84280067, 33027830, 303828494, 2747425121, 1600795957, 4188952407, 3496589753, 2434238086, 1486471617, 658119965, 3106381470, 953803233, 334231800, 3005978776, 857870609, 3151128937, 1890179545, 2298973838, 2805175444, 3056442267, 574365214, 2450884487, 550103529, 1233637070, 4289353045, 2018519080, 2057691103, 2399374476, 4166623649, 2148108681, 387583245, 3664101311, 836232934, 3330556482, 3100665960, 3280093505, 2955516313, 2002398509, 287182607, 3413881008, 4238890068, 3597515707, 975967766], m = [1671808611, 2089089148, 2006576759, 2072901243, 4061003762, 1807603307, 1873927791, 3310653893, 810573872, 16974337, 1739181671, 729634347, 4263110654, 3613570519, 2883997099, 1989864566, 3393556426, 2191335298, 3376449993, 2106063485, 4195741690, 1508618841, 1204391495, 4027317232, 2917941677, 3563566036, 2734514082, 2951366063, 2629772188, 2767672228, 1922491506, 3227229120, 3082974647, 4246528509, 2477669779, 644500518, 911895606, 1061256767, 4144166391, 3427763148, 878471220, 2784252325, 3845444069, 4043897329, 1905517169, 3631459288, 827548209, 356461077, 67897348, 3344078279, 593839651, 3277757891, 405286936, 2527147926, 84871685, 2595565466, 118033927, 305538066, 2157648768, 3795705826, 3945188843, 661212711, 2999812018, 1973414517, 152769033, 2208177539, 745822252, 439235610, 455947803, 1857215598, 1525593178, 2700827552, 1391895634, 994932283, 3596728278, 3016654259, 695947817, 3812548067, 795958831, 2224493444, 1408607827, 3513301457, 0, 3979133421, 543178784, 4229948412, 2982705585, 1542305371, 1790891114, 3410398667, 3201918910, 961245753, 1256100938, 1289001036, 1491644504, 3477767631, 3496721360, 4012557807, 2867154858, 4212583931, 1137018435, 1305975373, 861234739, 2241073541, 1171229253, 4178635257, 33948674, 2139225727, 1357946960, 1011120188, 2679776671, 2833468328, 1374921297, 2751356323, 1086357568, 2408187279, 2460827538, 2646352285, 944271416, 4110742005, 3168756668, 3066132406, 3665145818, 560153121, 271589392, 4279952895, 4077846003, 3530407890, 3444343245, 202643468, 322250259, 3962553324, 1608629855, 2543990167, 1154254916, 389623319, 3294073796, 2817676711, 2122513534, 1028094525, 1689045092, 1575467613, 422261273, 1939203699, 1621147744, 2174228865, 1339137615, 3699352540, 577127458, 712922154, 2427141008, 2290289544, 1187679302, 3995715566, 3100863416, 339486740, 3732514782, 1591917662, 186455563, 3681988059, 3762019296, 844522546, 978220090, 169743370, 1239126601, 101321734, 611076132, 1558493276, 3260915650, 3547250131, 2901361580, 1655096418, 2443721105, 2510565781, 3828863972, 2039214713, 3878868455, 3359869896, 928607799, 1840765549, 2374762893, 3580146133, 1322425422, 2850048425, 1823791212, 1459268694, 4094161908, 3928346602, 1706019429, 2056189050, 2934523822, 135794696, 3134549946, 2022240376, 628050469, 779246638, 472135708, 2800834470, 3032970164, 3327236038, 3894660072, 3715932637, 1956440180, 522272287, 1272813131, 3185336765, 2340818315, 2323976074, 1888542832, 1044544574, 3049550261, 1722469478, 1222152264, 50660867, 4127324150, 236067854, 1638122081, 895445557, 1475980887, 3117443513, 2257655686, 3243809217, 489110045, 2662934430, 3778599393, 4162055160, 2561878936, 288563729, 1773916777, 3648039385, 2391345038, 2493985684, 2612407707, 505560094, 2274497927, 3911240169, 3460925390, 1442818645, 678973480, 3749357023, 2358182796, 2717407649, 2306869641, 219617805, 3218761151, 3862026214, 1120306242, 1756942440, 1103331905, 2578459033, 762796589, 252780047, 2966125488, 1425844308, 3151392187, 372911126], g = [1667474886, 2088535288, 2004326894, 2071694838, 4075949567, 1802223062, 1869591006, 3318043793, 808472672, 16843522, 1734846926, 724270422, 4278065639, 3621216949, 2880169549, 1987484396, 3402253711, 2189597983, 3385409673, 2105378810, 4210693615, 1499065266, 1195886990, 4042263547, 2913856577, 3570689971, 2728590687, 2947541573, 2627518243, 2762274643, 1920112356, 3233831835, 3082273397, 4261223649, 2475929149, 640051788, 909531756, 1061110142, 4160160501, 3435941763, 875846760, 2779116625, 3857003729, 4059105529, 1903268834, 3638064043, 825316194, 353713962, 67374088, 3351728789, 589522246, 3284360861, 404236336, 2526454071, 84217610, 2593830191, 117901582, 303183396, 2155911963, 3806477791, 3958056653, 656894286, 2998062463, 1970642922, 151591698, 2206440989, 741110872, 437923380, 454765878, 1852748508, 1515908788, 2694904667, 1381168804, 993742198, 3604373943, 3014905469, 690584402, 3823320797, 791638366, 2223281939, 1398011302, 3520161977, 0, 3991743681, 538992704, 4244381667, 2981218425, 1532751286, 1785380564, 3419096717, 3200178535, 960056178, 1246420628, 1280103576, 1482221744, 3486468741, 3503319995, 4025428677, 2863326543, 4227536621, 1128514950, 1296947098, 859002214, 2240123921, 1162203018, 4193849577, 33687044, 2139062782, 1347481760, 1010582648, 2678045221, 2829640523, 1364325282, 2745433693, 1077985408, 2408548869, 2459086143, 2644360225, 943212656, 4126475505, 3166494563, 3065430391, 3671750063, 555836226, 269496352, 4294908645, 4092792573, 3537006015, 3452783745, 202118168, 320025894, 3974901699, 1600119230, 2543297077, 1145359496, 387397934, 3301201811, 2812801621, 2122220284, 1027426170, 1684319432, 1566435258, 421079858, 1936954854, 1616945344, 2172753945, 1330631070, 3705438115, 572679748, 707427924, 2425400123, 2290647819, 1179044492, 4008585671, 3099120491, 336870440, 3739122087, 1583276732, 185277718, 3688593069, 3772791771, 842159716, 976899700, 168435220, 1229577106, 101059084, 606366792, 1549591736, 3267517855, 3553849021, 2897014595, 1650632388, 2442242105, 2509612081, 3840161747, 2038008818, 3890688725, 3368567691, 926374254, 1835907034, 2374863873, 3587531953, 1313788572, 2846482505, 1819063512, 1448540844, 4109633523, 3941213647, 1701162954, 2054852340, 2930698567, 134748176, 3132806511, 2021165296, 623210314, 774795868, 471606328, 2795958615, 3031746419, 3334885783, 3907527627, 3722280097, 1953799400, 522133822, 1263263126, 3183336545, 2341176845, 2324333839, 1886425312, 1044267644, 3048588401, 1718004428, 1212733584, 50529542, 4143317495, 235803164, 1633788866, 892690282, 1465383342, 3115962473, 2256965911, 3250673817, 488449850, 2661202215, 3789633753, 4177007595, 2560144171, 286339874, 1768537042, 3654906025, 2391705863, 2492770099, 2610673197, 505291324, 2273808917, 3924369609, 3469625735, 1431699370, 673740880, 3755965093, 2358021891, 2711746649, 2307489801, 218961690, 3217021541, 3873845719, 1111672452, 1751693520, 1094828930, 2576986153, 757954394, 252645662, 2964376443, 1414855848, 3149649517, 370555436], y = [1374988112, 2118214995, 437757123, 975658646, 1001089995, 530400753, 2902087851, 1273168787, 540080725, 2910219766, 2295101073, 4110568485, 1340463100, 3307916247, 641025152, 3043140495, 3736164937, 632953703, 1172967064, 1576976609, 3274667266, 2169303058, 2370213795, 1809054150, 59727847, 361929877, 3211623147, 2505202138, 3569255213, 1484005843, 1239443753, 2395588676, 1975683434, 4102977912, 2572697195, 666464733, 3202437046, 4035489047, 3374361702, 2110667444, 1675577880, 3843699074, 2538681184, 1649639237, 2976151520, 3144396420, 4269907996, 4178062228, 1883793496, 2403728665, 2497604743, 1383856311, 2876494627, 1917518562, 3810496343, 1716890410, 3001755655, 800440835, 2261089178, 3543599269, 807962610, 599762354, 33778362, 3977675356, 2328828971, 2809771154, 4077384432, 1315562145, 1708848333, 101039829, 3509871135, 3299278474, 875451293, 2733856160, 92987698, 2767645557, 193195065, 1080094634, 1584504582, 3178106961, 1042385657, 2531067453, 3711829422, 1306967366, 2438237621, 1908694277, 67556463, 1615861247, 429456164, 3602770327, 2302690252, 1742315127, 2968011453, 126454664, 3877198648, 2043211483, 2709260871, 2084704233, 4169408201, 0, 159417987, 841739592, 504459436, 1817866830, 4245618683, 260388950, 1034867998, 908933415, 168810852, 1750902305, 2606453969, 607530554, 202008497, 2472011535, 3035535058, 463180190, 2160117071, 1641816226, 1517767529, 470948374, 3801332234, 3231722213, 1008918595, 303765277, 235474187, 4069246893, 766945465, 337553864, 1475418501, 2943682380, 4003061179, 2743034109, 4144047775, 1551037884, 1147550661, 1543208500, 2336434550, 3408119516, 3069049960, 3102011747, 3610369226, 1113818384, 328671808, 2227573024, 2236228733, 3535486456, 2935566865, 3341394285, 496906059, 3702665459, 226906860, 2009195472, 733156972, 2842737049, 294930682, 1206477858, 2835123396, 2700099354, 1451044056, 573804783, 2269728455, 3644379585, 2362090238, 2564033334, 2801107407, 2776292904, 3669462566, 1068351396, 742039012, 1350078989, 1784663195, 1417561698, 4136440770, 2430122216, 775550814, 2193862645, 2673705150, 1775276924, 1876241833, 3475313331, 3366754619, 270040487, 3902563182, 3678124923, 3441850377, 1851332852, 3969562369, 2203032232, 3868552805, 2868897406, 566021896, 4011190502, 3135740889, 1248802510, 3936291284, 699432150, 832877231, 708780849, 3332740144, 899835584, 1951317047, 4236429990, 3767586992, 866637845, 4043610186, 1106041591, 2144161806, 395441711, 1984812685, 1139781709, 3433712980, 3835036895, 2664543715, 1282050075, 3240894392, 1181045119, 2640243204, 25965917, 4203181171, 4211818798, 3009879386, 2463879762, 3910161971, 1842759443, 2597806476, 933301370, 1509430414, 3943906441, 3467192302, 3076639029, 3776767469, 2051518780, 2631065433, 1441952575, 404016761, 1942435775, 1408749034, 1610459739, 3745345300, 2017778566, 3400528769, 3110650942, 941896748, 3265478751, 371049330, 3168937228, 675039627, 4279080257, 967311729, 135050206, 3635733660, 1683407248, 2076935265, 3576870512, 1215061108, 3501741890], v = [1347548327, 1400783205, 3273267108, 2520393566, 3409685355, 4045380933, 2880240216, 2471224067, 1428173050, 4138563181, 2441661558, 636813900, 4233094615, 3620022987, 2149987652, 2411029155, 1239331162, 1730525723, 2554718734, 3781033664, 46346101, 310463728, 2743944855, 3328955385, 3875770207, 2501218972, 3955191162, 3667219033, 768917123, 3545789473, 692707433, 1150208456, 1786102409, 2029293177, 1805211710, 3710368113, 3065962831, 401639597, 1724457132, 3028143674, 409198410, 2196052529, 1620529459, 1164071807, 3769721975, 2226875310, 486441376, 2499348523, 1483753576, 428819965, 2274680428, 3075636216, 598438867, 3799141122, 1474502543, 711349675, 129166120, 53458370, 2592523643, 2782082824, 4063242375, 2988687269, 3120694122, 1559041666, 730517276, 2460449204, 4042459122, 2706270690, 3446004468, 3573941694, 533804130, 2328143614, 2637442643, 2695033685, 839224033, 1973745387, 957055980, 2856345839, 106852767, 1371368976, 4181598602, 1033297158, 2933734917, 1179510461, 3046200461, 91341917, 1862534868, 4284502037, 605657339, 2547432937, 3431546947, 2003294622, 3182487618, 2282195339, 954669403, 3682191598, 1201765386, 3917234703, 3388507166, 0, 2198438022, 1211247597, 2887651696, 1315723890, 4227665663, 1443857720, 507358933, 657861945, 1678381017, 560487590, 3516619604, 975451694, 2970356327, 261314535, 3535072918, 2652609425, 1333838021, 2724322336, 1767536459, 370938394, 182621114, 3854606378, 1128014560, 487725847, 185469197, 2918353863, 3106780840, 3356761769, 2237133081, 1286567175, 3152976349, 4255350624, 2683765030, 3160175349, 3309594171, 878443390, 1988838185, 3704300486, 1756818940, 1673061617, 3403100636, 272786309, 1075025698, 545572369, 2105887268, 4174560061, 296679730, 1841768865, 1260232239, 4091327024, 3960309330, 3497509347, 1814803222, 2578018489, 4195456072, 575138148, 3299409036, 446754879, 3629546796, 4011996048, 3347532110, 3252238545, 4270639778, 915985419, 3483825537, 681933534, 651868046, 2755636671, 3828103837, 223377554, 2607439820, 1649704518, 3270937875, 3901806776, 1580087799, 4118987695, 3198115200, 2087309459, 2842678573, 3016697106, 1003007129, 2802849917, 1860738147, 2077965243, 164439672, 4100872472, 32283319, 2827177882, 1709610350, 2125135846, 136428751, 3874428392, 3652904859, 3460984630, 3572145929, 3593056380, 2939266226, 824852259, 818324884, 3224740454, 930369212, 2801566410, 2967507152, 355706840, 1257309336, 4148292826, 243256656, 790073846, 2373340630, 1296297904, 1422699085, 3756299780, 3818836405, 457992840, 3099667487, 2135319889, 77422314, 1560382517, 1945798516, 788204353, 1521706781, 1385356242, 870912086, 325965383, 2358957921, 2050466060, 2388260884, 2313884476, 4006521127, 901210569, 3990953189, 1014646705, 1503449823, 1062597235, 2031621326, 3212035895, 3931371469, 1533017514, 350174575, 2256028891, 2177544179, 1052338372, 741876788, 1606591296, 1914052035, 213705253, 2334669897, 1107234197, 1899603969, 3725069491, 2631447780, 2422494913, 1635502980, 1893020342, 1950903388, 1120974935], b = [2807058932, 1699970625, 2764249623, 1586903591, 1808481195, 1173430173, 1487645946, 59984867, 4199882800, 1844882806, 1989249228, 1277555970, 3623636965, 3419915562, 1149249077, 2744104290, 1514790577, 459744698, 244860394, 3235995134, 1963115311, 4027744588, 2544078150, 4190530515, 1608975247, 2627016082, 2062270317, 1507497298, 2200818878, 567498868, 1764313568, 3359936201, 2305455554, 2037970062, 1047239e3, 1910319033, 1337376481, 2904027272, 2892417312, 984907214, 1243112415, 830661914, 861968209, 2135253587, 2011214180, 2927934315, 2686254721, 731183368, 1750626376, 4246310725, 1820824798, 4172763771, 3542330227, 48394827, 2404901663, 2871682645, 671593195, 3254988725, 2073724613, 145085239, 2280796200, 2779915199, 1790575107, 2187128086, 472615631, 3029510009, 4075877127, 3802222185, 4107101658, 3201631749, 1646252340, 4270507174, 1402811438, 1436590835, 3778151818, 3950355702, 3963161475, 4020912224, 2667994737, 273792366, 2331590177, 104699613, 95345982, 3175501286, 2377486676, 1560637892, 3564045318, 369057872, 4213447064, 3919042237, 1137477952, 2658625497, 1119727848, 2340947849, 1530455833, 4007360968, 172466556, 266959938, 516552836, 0, 2256734592, 3980931627, 1890328081, 1917742170, 4294704398, 945164165, 3575528878, 958871085, 3647212047, 2787207260, 1423022939, 775562294, 1739656202, 3876557655, 2530391278, 2443058075, 3310321856, 547512796, 1265195639, 437656594, 3121275539, 719700128, 3762502690, 387781147, 218828297, 3350065803, 2830708150, 2848461854, 428169201, 122466165, 3720081049, 1627235199, 648017665, 4122762354, 1002783846, 2117360635, 695634755, 3336358691, 4234721005, 4049844452, 3704280881, 2232435299, 574624663, 287343814, 612205898, 1039717051, 840019705, 2708326185, 793451934, 821288114, 1391201670, 3822090177, 376187827, 3113855344, 1224348052, 1679968233, 2361698556, 1058709744, 752375421, 2431590963, 1321699145, 3519142200, 2734591178, 188127444, 2177869557, 3727205754, 2384911031, 3215212461, 2648976442, 2450346104, 3432737375, 1180849278, 331544205, 3102249176, 4150144569, 2952102595, 2159976285, 2474404304, 766078933, 313773861, 2570832044, 2108100632, 1668212892, 3145456443, 2013908262, 418672217, 3070356634, 2594734927, 1852171925, 3867060991, 3473416636, 3907448597, 2614737639, 919489135, 164948639, 2094410160, 2997825956, 590424639, 2486224549, 1723872674, 3157750862, 3399941250, 3501252752, 3625268135, 2555048196, 3673637356, 1343127501, 4130281361, 3599595085, 2957853679, 1297403050, 81781910, 3051593425, 2283490410, 532201772, 1367295589, 3926170974, 895287692, 1953757831, 1093597963, 492483431, 3528626907, 1446242576, 1192455638, 1636604631, 209336225, 344873464, 1015671571, 669961897, 3375740769, 3857572124, 2973530695, 3747192018, 1933530610, 3464042516, 935293895, 3454686199, 2858115069, 1863638845, 3683022916, 4085369519, 3292445032, 875313188, 1080017571, 3279033885, 621591778, 1233856572, 2504130317, 24197544, 3017672716, 3835484340, 3247465558, 2220981195, 3060847922, 1551124588, 1463996600], w = [4104605777, 1097159550, 396673818, 660510266, 2875968315, 2638606623, 4200115116, 3808662347, 821712160, 1986918061, 3430322568, 38544885, 3856137295, 718002117, 893681702, 1654886325, 2975484382, 3122358053, 3926825029, 4274053469, 796197571, 1290801793, 1184342925, 3556361835, 2405426947, 2459735317, 1836772287, 1381620373, 3196267988, 1948373848, 3764988233, 3385345166, 3263785589, 2390325492, 1480485785, 3111247143, 3780097726, 2293045232, 548169417, 3459953789, 3746175075, 439452389, 1362321559, 1400849762, 1685577905, 1806599355, 2174754046, 137073913, 1214797936, 1174215055, 3731654548, 2079897426, 1943217067, 1258480242, 529487843, 1437280870, 3945269170, 3049390895, 3313212038, 923313619, 679998e3, 3215307299, 57326082, 377642221, 3474729866, 2041877159, 133361907, 1776460110, 3673476453, 96392454, 878845905, 2801699524, 777231668, 4082475170, 2330014213, 4142626212, 2213296395, 1626319424, 1906247262, 1846563261, 562755902, 3708173718, 1040559837, 3871163981, 1418573201, 3294430577, 114585348, 1343618912, 2566595609, 3186202582, 1078185097, 3651041127, 3896688048, 2307622919, 425408743, 3371096953, 2081048481, 1108339068, 2216610296, 0, 2156299017, 736970802, 292596766, 1517440620, 251657213, 2235061775, 2933202493, 758720310, 265905162, 1554391400, 1532285339, 908999204, 174567692, 1474760595, 4002861748, 2610011675, 3234156416, 3693126241, 2001430874, 303699484, 2478443234, 2687165888, 585122620, 454499602, 151849742, 2345119218, 3064510765, 514443284, 4044981591, 1963412655, 2581445614, 2137062819, 19308535, 1928707164, 1715193156, 4219352155, 1126790795, 600235211, 3992742070, 3841024952, 836553431, 1669664834, 2535604243, 3323011204, 1243905413, 3141400786, 4180808110, 698445255, 2653899549, 2989552604, 2253581325, 3252932727, 3004591147, 1891211689, 2487810577, 3915653703, 4237083816, 4030667424, 2100090966, 865136418, 1229899655, 953270745, 3399679628, 3557504664, 4118925222, 2061379749, 3079546586, 2915017791, 983426092, 2022837584, 1607244650, 2118541908, 2366882550, 3635996816, 972512814, 3283088770, 1568718495, 3499326569, 3576539503, 621982671, 2895723464, 410887952, 2623762152, 1002142683, 645401037, 1494807662, 2595684844, 1335535747, 2507040230, 4293295786, 3167684641, 367585007, 3885750714, 1865862730, 2668221674, 2960971305, 2763173681, 1059270954, 2777952454, 2724642869, 1320957812, 2194319100, 2429595872, 2815956275, 77089521, 3973773121, 3444575871, 2448830231, 1305906550, 4021308739, 2857194700, 2516901860, 3518358430, 1787304780, 740276417, 1699839814, 1592394909, 2352307457, 2272556026, 188821243, 1729977011, 3687994002, 274084841, 3594982253, 3613494426, 2701949495, 4162096729, 322734571, 2837966542, 1640576439, 484830689, 1202797690, 3537852828, 4067639125, 349075736, 3342319475, 4157467219, 4255800159, 1030690015, 1155237496, 2951971274, 1757691577, 607398968, 2738905026, 499347990, 3794078908, 1011452712, 227885567, 2818666809, 213114376, 3034881240, 1455525988, 3414450555, 850817237, 1817998408, 3092726480], E = [0, 235474187, 470948374, 303765277, 941896748, 908933415, 607530554, 708780849, 1883793496, 2118214995, 1817866830, 1649639237, 1215061108, 1181045119, 1417561698, 1517767529, 3767586992, 4003061179, 4236429990, 4069246893, 3635733660, 3602770327, 3299278474, 3400528769, 2430122216, 2664543715, 2362090238, 2193862645, 2835123396, 2801107407, 3035535058, 3135740889, 3678124923, 3576870512, 3341394285, 3374361702, 3810496343, 3977675356, 4279080257, 4043610186, 2876494627, 2776292904, 3076639029, 3110650942, 2472011535, 2640243204, 2403728665, 2169303058, 1001089995, 899835584, 666464733, 699432150, 59727847, 226906860, 530400753, 294930682, 1273168787, 1172967064, 1475418501, 1509430414, 1942435775, 2110667444, 1876241833, 1641816226, 2910219766, 2743034109, 2976151520, 3211623147, 2505202138, 2606453969, 2302690252, 2269728455, 3711829422, 3543599269, 3240894392, 3475313331, 3843699074, 3943906441, 4178062228, 4144047775, 1306967366, 1139781709, 1374988112, 1610459739, 1975683434, 2076935265, 1775276924, 1742315127, 1034867998, 866637845, 566021896, 800440835, 92987698, 193195065, 429456164, 395441711, 1984812685, 2017778566, 1784663195, 1683407248, 1315562145, 1080094634, 1383856311, 1551037884, 101039829, 135050206, 437757123, 337553864, 1042385657, 807962610, 573804783, 742039012, 2531067453, 2564033334, 2328828971, 2227573024, 2935566865, 2700099354, 3001755655, 3168937228, 3868552805, 3902563182, 4203181171, 4102977912, 3736164937, 3501741890, 3265478751, 3433712980, 1106041591, 1340463100, 1576976609, 1408749034, 2043211483, 2009195472, 1708848333, 1809054150, 832877231, 1068351396, 766945465, 599762354, 159417987, 126454664, 361929877, 463180190, 2709260871, 2943682380, 3178106961, 3009879386, 2572697195, 2538681184, 2236228733, 2336434550, 3509871135, 3745345300, 3441850377, 3274667266, 3910161971, 3877198648, 4110568485, 4211818798, 2597806476, 2497604743, 2261089178, 2295101073, 2733856160, 2902087851, 3202437046, 2968011453, 3936291284, 3835036895, 4136440770, 4169408201, 3535486456, 3702665459, 3467192302, 3231722213, 2051518780, 1951317047, 1716890410, 1750902305, 1113818384, 1282050075, 1584504582, 1350078989, 168810852, 67556463, 371049330, 404016761, 841739592, 1008918595, 775550814, 540080725, 3969562369, 3801332234, 4035489047, 4269907996, 3569255213, 3669462566, 3366754619, 3332740144, 2631065433, 2463879762, 2160117071, 2395588676, 2767645557, 2868897406, 3102011747, 3069049960, 202008497, 33778362, 270040487, 504459436, 875451293, 975658646, 675039627, 641025152, 2084704233, 1917518562, 1615861247, 1851332852, 1147550661, 1248802510, 1484005843, 1451044056, 933301370, 967311729, 733156972, 632953703, 260388950, 25965917, 328671808, 496906059, 1206477858, 1239443753, 1543208500, 1441952575, 2144161806, 1908694277, 1675577880, 1842759443, 3610369226, 3644379585, 3408119516, 3307916247, 4011190502, 3776767469, 4077384432, 4245618683, 2809771154, 2842737049, 3144396420, 3043140495, 2673705150, 2438237621, 2203032232, 2370213795], A = [0, 185469197, 370938394, 487725847, 741876788, 657861945, 975451694, 824852259, 1483753576, 1400783205, 1315723890, 1164071807, 1950903388, 2135319889, 1649704518, 1767536459, 2967507152, 3152976349, 2801566410, 2918353863, 2631447780, 2547432937, 2328143614, 2177544179, 3901806776, 3818836405, 4270639778, 4118987695, 3299409036, 3483825537, 3535072918, 3652904859, 2077965243, 1893020342, 1841768865, 1724457132, 1474502543, 1559041666, 1107234197, 1257309336, 598438867, 681933534, 901210569, 1052338372, 261314535, 77422314, 428819965, 310463728, 3409685355, 3224740454, 3710368113, 3593056380, 3875770207, 3960309330, 4045380933, 4195456072, 2471224067, 2554718734, 2237133081, 2388260884, 3212035895, 3028143674, 2842678573, 2724322336, 4138563181, 4255350624, 3769721975, 3955191162, 3667219033, 3516619604, 3431546947, 3347532110, 2933734917, 2782082824, 3099667487, 3016697106, 2196052529, 2313884476, 2499348523, 2683765030, 1179510461, 1296297904, 1347548327, 1533017514, 1786102409, 1635502980, 2087309459, 2003294622, 507358933, 355706840, 136428751, 53458370, 839224033, 957055980, 605657339, 790073846, 2373340630, 2256028891, 2607439820, 2422494913, 2706270690, 2856345839, 3075636216, 3160175349, 3573941694, 3725069491, 3273267108, 3356761769, 4181598602, 4063242375, 4011996048, 3828103837, 1033297158, 915985419, 730517276, 545572369, 296679730, 446754879, 129166120, 213705253, 1709610350, 1860738147, 1945798516, 2029293177, 1239331162, 1120974935, 1606591296, 1422699085, 4148292826, 4233094615, 3781033664, 3931371469, 3682191598, 3497509347, 3446004468, 3328955385, 2939266226, 2755636671, 3106780840, 2988687269, 2198438022, 2282195339, 2501218972, 2652609425, 1201765386, 1286567175, 1371368976, 1521706781, 1805211710, 1620529459, 2105887268, 1988838185, 533804130, 350174575, 164439672, 46346101, 870912086, 954669403, 636813900, 788204353, 2358957921, 2274680428, 2592523643, 2441661558, 2695033685, 2880240216, 3065962831, 3182487618, 3572145929, 3756299780, 3270937875, 3388507166, 4174560061, 4091327024, 4006521127, 3854606378, 1014646705, 930369212, 711349675, 560487590, 272786309, 457992840, 106852767, 223377554, 1678381017, 1862534868, 1914052035, 2031621326, 1211247597, 1128014560, 1580087799, 1428173050, 32283319, 182621114, 401639597, 486441376, 768917123, 651868046, 1003007129, 818324884, 1503449823, 1385356242, 1333838021, 1150208456, 1973745387, 2125135846, 1673061617, 1756818940, 2970356327, 3120694122, 2802849917, 2887651696, 2637442643, 2520393566, 2334669897, 2149987652, 3917234703, 3799141122, 4284502037, 4100872472, 3309594171, 3460984630, 3545789473, 3629546796, 2050466060, 1899603969, 1814803222, 1730525723, 1443857720, 1560382517, 1075025698, 1260232239, 575138148, 692707433, 878443390, 1062597235, 243256656, 91341917, 409198410, 325965383, 3403100636, 3252238545, 3704300486, 3620022987, 3874428392, 3990953189, 4042459122, 4227665663, 2460449204, 2578018489, 2226875310, 2411029155, 3198115200, 3046200461, 2827177882, 2743944855], _ = [0, 218828297, 437656594, 387781147, 875313188, 958871085, 775562294, 590424639, 1750626376, 1699970625, 1917742170, 2135253587, 1551124588, 1367295589, 1180849278, 1265195639, 3501252752, 3720081049, 3399941250, 3350065803, 3835484340, 3919042237, 4270507174, 4085369519, 3102249176, 3051593425, 2734591178, 2952102595, 2361698556, 2177869557, 2530391278, 2614737639, 3145456443, 3060847922, 2708326185, 2892417312, 2404901663, 2187128086, 2504130317, 2555048196, 3542330227, 3727205754, 3375740769, 3292445032, 3876557655, 3926170974, 4246310725, 4027744588, 1808481195, 1723872674, 1910319033, 2094410160, 1608975247, 1391201670, 1173430173, 1224348052, 59984867, 244860394, 428169201, 344873464, 935293895, 984907214, 766078933, 547512796, 1844882806, 1627235199, 2011214180, 2062270317, 1507497298, 1423022939, 1137477952, 1321699145, 95345982, 145085239, 532201772, 313773861, 830661914, 1015671571, 731183368, 648017665, 3175501286, 2957853679, 2807058932, 2858115069, 2305455554, 2220981195, 2474404304, 2658625497, 3575528878, 3625268135, 3473416636, 3254988725, 3778151818, 3963161475, 4213447064, 4130281361, 3599595085, 3683022916, 3432737375, 3247465558, 3802222185, 4020912224, 4172763771, 4122762354, 3201631749, 3017672716, 2764249623, 2848461854, 2331590177, 2280796200, 2431590963, 2648976442, 104699613, 188127444, 472615631, 287343814, 840019705, 1058709744, 671593195, 621591778, 1852171925, 1668212892, 1953757831, 2037970062, 1514790577, 1463996600, 1080017571, 1297403050, 3673637356, 3623636965, 3235995134, 3454686199, 4007360968, 3822090177, 4107101658, 4190530515, 2997825956, 3215212461, 2830708150, 2779915199, 2256734592, 2340947849, 2627016082, 2443058075, 172466556, 122466165, 273792366, 492483431, 1047239e3, 861968209, 612205898, 695634755, 1646252340, 1863638845, 2013908262, 1963115311, 1446242576, 1530455833, 1277555970, 1093597963, 1636604631, 1820824798, 2073724613, 1989249228, 1436590835, 1487645946, 1337376481, 1119727848, 164948639, 81781910, 331544205, 516552836, 1039717051, 821288114, 669961897, 719700128, 2973530695, 3157750862, 2871682645, 2787207260, 2232435299, 2283490410, 2667994737, 2450346104, 3647212047, 3564045318, 3279033885, 3464042516, 3980931627, 3762502690, 4150144569, 4199882800, 3070356634, 3121275539, 2904027272, 2686254721, 2200818878, 2384911031, 2570832044, 2486224549, 3747192018, 3528626907, 3310321856, 3359936201, 3950355702, 3867060991, 4049844452, 4234721005, 1739656202, 1790575107, 2108100632, 1890328081, 1402811438, 1586903591, 1233856572, 1149249077, 266959938, 48394827, 369057872, 418672217, 1002783846, 919489135, 567498868, 752375421, 209336225, 24197544, 376187827, 459744698, 945164165, 895287692, 574624663, 793451934, 1679968233, 1764313568, 2117360635, 1933530610, 1343127501, 1560637892, 1243112415, 1192455638, 3704280881, 3519142200, 3336358691, 3419915562, 3907448597, 3857572124, 4075877127, 4294704398, 3029510009, 3113855344, 2927934315, 2744104290, 2159976285, 2377486676, 2594734927, 2544078150], S = [0, 151849742, 303699484, 454499602, 607398968, 758720310, 908999204, 1059270954, 1214797936, 1097159550, 1517440620, 1400849762, 1817998408, 1699839814, 2118541908, 2001430874, 2429595872, 2581445614, 2194319100, 2345119218, 3034881240, 3186202582, 2801699524, 2951971274, 3635996816, 3518358430, 3399679628, 3283088770, 4237083816, 4118925222, 4002861748, 3885750714, 1002142683, 850817237, 698445255, 548169417, 529487843, 377642221, 227885567, 77089521, 1943217067, 2061379749, 1640576439, 1757691577, 1474760595, 1592394909, 1174215055, 1290801793, 2875968315, 2724642869, 3111247143, 2960971305, 2405426947, 2253581325, 2638606623, 2487810577, 3808662347, 3926825029, 4044981591, 4162096729, 3342319475, 3459953789, 3576539503, 3693126241, 1986918061, 2137062819, 1685577905, 1836772287, 1381620373, 1532285339, 1078185097, 1229899655, 1040559837, 923313619, 740276417, 621982671, 439452389, 322734571, 137073913, 19308535, 3871163981, 4021308739, 4104605777, 4255800159, 3263785589, 3414450555, 3499326569, 3651041127, 2933202493, 2815956275, 3167684641, 3049390895, 2330014213, 2213296395, 2566595609, 2448830231, 1305906550, 1155237496, 1607244650, 1455525988, 1776460110, 1626319424, 2079897426, 1928707164, 96392454, 213114376, 396673818, 514443284, 562755902, 679998e3, 865136418, 983426092, 3708173718, 3557504664, 3474729866, 3323011204, 4180808110, 4030667424, 3945269170, 3794078908, 2507040230, 2623762152, 2272556026, 2390325492, 2975484382, 3092726480, 2738905026, 2857194700, 3973773121, 3856137295, 4274053469, 4157467219, 3371096953, 3252932727, 3673476453, 3556361835, 2763173681, 2915017791, 3064510765, 3215307299, 2156299017, 2307622919, 2459735317, 2610011675, 2081048481, 1963412655, 1846563261, 1729977011, 1480485785, 1362321559, 1243905413, 1126790795, 878845905, 1030690015, 645401037, 796197571, 274084841, 425408743, 38544885, 188821243, 3613494426, 3731654548, 3313212038, 3430322568, 4082475170, 4200115116, 3780097726, 3896688048, 2668221674, 2516901860, 2366882550, 2216610296, 3141400786, 2989552604, 2837966542, 2687165888, 1202797690, 1320957812, 1437280870, 1554391400, 1669664834, 1787304780, 1906247262, 2022837584, 265905162, 114585348, 499347990, 349075736, 736970802, 585122620, 972512814, 821712160, 2595684844, 2478443234, 2293045232, 2174754046, 3196267988, 3079546586, 2895723464, 2777952454, 3537852828, 3687994002, 3234156416, 3385345166, 4142626212, 4293295786, 3841024952, 3992742070, 174567692, 57326082, 410887952, 292596766, 777231668, 660510266, 1011452712, 893681702, 1108339068, 1258480242, 1343618912, 1494807662, 1715193156, 1865862730, 1948373848, 2100090966, 2701949495, 2818666809, 3004591147, 3122358053, 2235061775, 2352307457, 2535604243, 2653899549, 3915653703, 3764988233, 4219352155, 4067639125, 3444575871, 3294430577, 3746175075, 3594982253, 836553431, 953270745, 600235211, 718002117, 367585007, 484830689, 133361907, 251657213, 2041877159, 1891211689, 1806599355, 1654886325, 1568718495, 1418573201, 1335535747, 1184342925];
            function k(t) {
                for (var e = [], r = 0; r < t.length; r += 4)
                    e.push(t[r] << 24 | t[r + 1] << 16 | t[r + 2] << 8 | t[r + 3]);
                return e
            }
            var P = function (t) {
                if (!(this instanceof P))
                    throw Error("AES must be instanitated with `new`");
                Object.defineProperty(this, "key", {
                    value: i(t, !0)
                }),
                    this._prepare()
            };
            P.prototype._prepare = function () {
                var t = u[this.key.length];
                if (null == t)
                    throw Error("invalid key size (must be 16, 24 or 32 bytes)");
                this._Ke = [],
                    this._Kd = [];
                for (var e = 0; e <= t; e++)
                    this._Ke.push([0, 0, 0, 0]),
                        this._Kd.push([0, 0, 0, 0]);
                for (var r = (t + 1) * 4, n = this.key.length / 4, i = k(this.key), e = 0; e < n; e++)
                    o = e >> 2,
                        this._Ke[o][e % 4] = i[e],
                        this._Kd[t - o][e % 4] = i[e];
                for (var o, s, a = 0, l = n; l < r;) {
                    if (s = i[n - 1],
                        i[0] ^= h[s >> 16 & 255] << 24 ^ h[s >> 8 & 255] << 16 ^ h[255 & s] << 8 ^ h[s >> 24 & 255] ^ c[a] << 24,
                        a += 1,
                        8 != n)
                        for (var e = 1; e < n; e++)
                            i[e] ^= i[e - 1];
                    else {
                        for (var e = 1; e < n / 2; e++)
                            i[e] ^= i[e - 1];
                        s = i[n / 2 - 1],
                            i[n / 2] ^= h[255 & s] ^ h[s >> 8 & 255] << 8 ^ h[s >> 16 & 255] << 16 ^ h[s >> 24 & 255] << 24;
                        for (var e = n / 2 + 1; e < n; e++)
                            i[e] ^= i[e - 1]
                    }
                    for (var f, d, e = 0; e < n && l < r;)
                        f = l >> 2,
                            d = l % 4,
                            this._Ke[f][d] = i[e],
                            this._Kd[t - f][d] = i[e++],
                            l++
                }
                for (var f = 1; f < t; f++)
                    for (var d = 0; d < 4; d++)
                        s = this._Kd[f][d],
                            this._Kd[f][d] = E[s >> 24 & 255] ^ A[s >> 16 & 255] ^ _[s >> 8 & 255] ^ S[255 & s]
            }
                ,
                P.prototype.encrypt = function (t) {
                    if (16 != t.length)
                        throw Error("invalid plaintext size (must be 16 bytes)");
                    for (var e = this._Ke.length - 1, r = [0, 0, 0, 0], n = k(t), i = 0; i < 4; i++)
                        n[i] ^= this._Ke[0][i];
                    for (var s = 1; s < e; s++) {
                        for (var i = 0; i < 4; i++)
                            r[i] = d[n[i] >> 24 & 255] ^ p[n[(i + 1) % 4] >> 16 & 255] ^ m[n[(i + 2) % 4] >> 8 & 255] ^ g[255 & n[(i + 3) % 4]] ^ this._Ke[s][i];
                        n = r.slice()
                    }
                    for (var a, l = o(16), i = 0; i < 4; i++)
                        a = this._Ke[e][i],
                            l[4 * i] = (h[n[i] >> 24 & 255] ^ a >> 24) & 255,
                            l[4 * i + 1] = (h[n[(i + 1) % 4] >> 16 & 255] ^ a >> 16) & 255,
                            l[4 * i + 2] = (h[n[(i + 2) % 4] >> 8 & 255] ^ a >> 8) & 255,
                            l[4 * i + 3] = (h[255 & n[(i + 3) % 4]] ^ a) & 255;
                    return l
                }
                ,
                P.prototype.decrypt = function (t) {
                    if (16 != t.length)
                        throw Error("invalid ciphertext size (must be 16 bytes)");
                    for (var e = this._Kd.length - 1, r = [0, 0, 0, 0], n = k(t), i = 0; i < 4; i++)
                        n[i] ^= this._Kd[0][i];
                    for (var s = 1; s < e; s++) {
                        for (var i = 0; i < 4; i++)
                            r[i] = y[n[i] >> 24 & 255] ^ v[n[(i + 3) % 4] >> 16 & 255] ^ b[n[(i + 2) % 4] >> 8 & 255] ^ w[255 & n[(i + 1) % 4]] ^ this._Kd[s][i];
                        n = r.slice()
                    }
                    for (var a, l = o(16), i = 0; i < 4; i++)
                        a = this._Kd[e][i],
                            l[4 * i] = (f[n[i] >> 24 & 255] ^ a >> 24) & 255,
                            l[4 * i + 1] = (f[n[(i + 3) % 4] >> 16 & 255] ^ a >> 16) & 255,
                            l[4 * i + 2] = (f[n[(i + 2) % 4] >> 8 & 255] ^ a >> 8) & 255,
                            l[4 * i + 3] = (f[255 & n[(i + 1) % 4]] ^ a) & 255;
                    return l
                }
                ;
            var N = function (t) {
                if (!(this instanceof N))
                    throw Error("AES must be instanitated with `new`");
                this.description = "Electronic Code Block",
                    this.name = "ecb",
                    this._aes = new P(t)
            };
            N.prototype.encrypt = function (t) {
                if ((t = i(t)).length % 16 != 0)
                    throw Error("invalid plaintext size (must be multiple of 16 bytes)");
                for (var e = o(t.length), r = o(16), n = 0; n < t.length; n += 16)
                    s(t, r, 0, n, n + 16),
                        s(r = this._aes.encrypt(r), e, n);
                return e
            }
                ,
                N.prototype.decrypt = function (t) {
                    if ((t = i(t)).length % 16 != 0)
                        throw Error("invalid ciphertext size (must be multiple of 16 bytes)");
                    for (var e = o(t.length), r = o(16), n = 0; n < t.length; n += 16)
                        s(t, r, 0, n, n + 16),
                            s(r = this._aes.decrypt(r), e, n);
                    return e
                }
                ;
            var C = function (t, e) {
                if (!(this instanceof C))
                    throw Error("AES must be instanitated with `new`");
                if (this.description = "Cipher Block Chaining",
                    this.name = "cbc",
                    e) {
                    if (16 != e.length)
                        throw Error("invalid initialation vector size (must be 16 bytes)")
                } else
                    e = o(16);
                this._lastCipherblock = i(e, !0),
                    this._aes = new P(t)
            };
            C.prototype.encrypt = function (t) {
                if ((t = i(t)).length % 16 != 0)
                    throw Error("invalid plaintext size (must be multiple of 16 bytes)");
                for (var e = o(t.length), r = o(16), n = 0; n < t.length; n += 16) {
                    s(t, r, 0, n, n + 16);
                    for (var a = 0; a < 16; a++)
                        r[a] ^= this._lastCipherblock[a];
                    this._lastCipherblock = this._aes.encrypt(r),
                        s(this._lastCipherblock, e, n)
                }
                return e
            }
                ,
                C.prototype.decrypt = function (t) {
                    if ((t = i(t)).length % 16 != 0)
                        throw Error("invalid ciphertext size (must be multiple of 16 bytes)");
                    for (var e = o(t.length), r = o(16), n = 0; n < t.length; n += 16) {
                        s(t, r, 0, n, n + 16),
                            r = this._aes.decrypt(r);
                        for (var a = 0; a < 16; a++)
                            e[n + a] = r[a] ^ this._lastCipherblock[a];
                        s(t, this._lastCipherblock, 0, n, n + 16)
                    }
                    return e
                }
                ;
            var T = function (t, e, r) {
                if (!(this instanceof T))
                    throw Error("AES must be instanitated with `new`");
                if (this.description = "Cipher Feedback",
                    this.name = "cfb",
                    e) {
                    if (16 != e.length)
                        throw Error("invalid initialation vector size (must be 16 size)")
                } else
                    e = o(16);
                r || (r = 1),
                    this.segmentSize = r,
                    this._shiftRegister = i(e, !0),
                    this._aes = new P(t)
            };
            T.prototype.encrypt = function (t) {
                if (t.length % this.segmentSize != 0)
                    throw Error("invalid plaintext size (must be segmentSize bytes)");
                for (var e, r = i(t, !0), n = 0; n < r.length; n += this.segmentSize) {
                    e = this._aes.encrypt(this._shiftRegister);
                    for (var o = 0; o < this.segmentSize; o++)
                        r[n + o] ^= e[o];
                    s(this._shiftRegister, this._shiftRegister, 0, this.segmentSize),
                        s(r, this._shiftRegister, 16 - this.segmentSize, n, n + this.segmentSize)
                }
                return r
            }
                ,
                T.prototype.decrypt = function (t) {
                    if (t.length % this.segmentSize != 0)
                        throw Error("invalid ciphertext size (must be segmentSize bytes)");
                    for (var e, r = i(t, !0), n = 0; n < r.length; n += this.segmentSize) {
                        e = this._aes.encrypt(this._shiftRegister);
                        for (var o = 0; o < this.segmentSize; o++)
                            r[n + o] ^= e[o];
                        s(this._shiftRegister, this._shiftRegister, 0, this.segmentSize),
                            s(t, this._shiftRegister, 16 - this.segmentSize, n, n + this.segmentSize)
                    }
                    return r
                }
                ;
            var x = function (t, e) {
                if (!(this instanceof x))
                    throw Error("AES must be instanitated with `new`");
                if (this.description = "Output Feedback",
                    this.name = "ofb",
                    e) {
                    if (16 != e.length)
                        throw Error("invalid initialation vector size (must be 16 bytes)")
                } else
                    e = o(16);
                this._lastPrecipher = i(e, !0),
                    this._lastPrecipherIndex = 16,
                    this._aes = new P(t)
            };
            x.prototype.encrypt = function (t) {
                for (var e = i(t, !0), r = 0; r < e.length; r++)
                    16 === this._lastPrecipherIndex && (this._lastPrecipher = this._aes.encrypt(this._lastPrecipher),
                        this._lastPrecipherIndex = 0),
                        e[r] ^= this._lastPrecipher[this._lastPrecipherIndex++];
                return e
            }
                ,
                x.prototype.decrypt = x.prototype.encrypt;
            var R = function (t) {
                if (!(this instanceof R))
                    throw Error("Counter must be instanitated with `new`");
                0 === t || t || (t = 1),
                    "number" == typeof t ? (this._counter = o(16),
                        this.setValue(t)) : this.setBytes(t)
            };
            R.prototype.setValue = function (t) {
                if ("number" != typeof t || parseInt(t) != t)
                    throw Error("invalid counter value (must be an integer)");
                for (var e = 15; e >= 0; --e)
                    this._counter[e] = t % 256,
                        t >>= 8
            }
                ,
                R.prototype.setBytes = function (t) {
                    if (16 != (t = i(t, !0)).length)
                        throw Error("invalid counter bytes size (must be 16 bytes)");
                    this._counter = t
                }
                ,
                R.prototype.increment = function () {
                    for (var t = 15; t >= 0; t--)
                        if (255 === this._counter[t])
                            this._counter[t] = 0;
                        else {
                            this._counter[t]++;
                            break
                        }
                }
                ;
            var I = function (t, e) {
                if (!(this instanceof I))
                    throw Error("AES must be instanitated with `new`");
                this.description = "Counter",
                    this.name = "ctr",
                    e instanceof R || (e = new R(e)),
                    this._counter = e,
                    this._remainingCounter = null,
                    this._remainingCounterIndex = 16,
                    this._aes = new P(t)
            };
            I.prototype.encrypt = function (t) {
                for (var e = i(t, !0), r = 0; r < e.length; r++)
                    16 === this._remainingCounterIndex && (this._remainingCounter = this._aes.encrypt(this._counter._counter),
                        this._remainingCounterIndex = 0,
                        this._counter.increment()),
                        e[r] ^= this._remainingCounter[this._remainingCounterIndex++];
                return e
            }
                ,
                I.prototype.decrypt = I.prototype.encrypt,
                t.exports = {
                    AES: P,
                    Counter: R,
                    ModeOfOperation: {
                        ecb: N,
                        cbc: C,
                        cfb: T,
                        ofb: x,
                        ctr: I
                    },
                    utils: {
                        hex: l,
                        utf8: {
                            toBytes: function (t) {
                                var e = []
                                    , r = 0;
                                for (t = encodeURI(t); r < t.length;) {
                                    var n = t.charCodeAt(r++);
                                    37 === n ? (e.push(parseInt(t.substr(r, 2), 16)),
                                        r += 2) : e.push(n)
                                }
                                return i(e)
                            },
                            fromBytes: function (t) {
                                for (var e = [], r = 0; r < t.length;) {
                                    var n = t[r];
                                    n < 128 ? (e.push(String.fromCharCode(n)),
                                        r++) : n > 191 && n < 224 ? (e.push(String.fromCharCode((31 & n) << 6 | 63 & t[r + 1])),
                                            r += 2) : (e.push(String.fromCharCode((15 & n) << 12 | (63 & t[r + 1]) << 6 | 63 & t[r + 2])),
                                                r += 3)
                                }
                                return e.join("")
                            }
                        }
                    },
                    padding: {
                        pkcs7: {
                            pad: function (t) {
                                var e = 16 - (t = i(t, !0)).length % 16
                                    , r = o(t.length + e);
                                s(t, r);
                                for (var n = t.length; n < r.length; n++)
                                    r[n] = e;
                                return r
                            },
                            strip: function (t) {
                                if ((t = i(t, !0)).length < 16)
                                    throw Error("PKCS#7 invalid length");
                                var e = t[t.length - 1];
                                if (e > 16)
                                    throw Error("PKCS#7 padding byte out of range");
                                for (var r = t.length - e, n = 0; n < e; n++)
                                    if (t[r + n] !== e)
                                        throw Error("PKCS#7 invalid padding byte");
                                var a = o(r);
                                return s(t, a, 0, 0, r),
                                    a
                            }
                        }
                    },
                    _arrayTest: {
                        coerceArray: i,
                        createArray: o,
                        copyArray: s
                    }
                }
        }(0)
    },
    34699: function (t, e) {
        "use strict";
        e.byteLength = function (t) {
            var e = l(t)
                , r = e[0]
                , n = e[1];
            return (r + n) * 3 / 4 - n
        }
            ,
            e.toByteArray = function (t) {
                var e, r, o = l(t), s = o[0], a = o[1], u = new i((s + a) * 3 / 4 - a), c = 0, h = a > 0 ? s - 4 : s;
                for (r = 0; r < h; r += 4)
                    e = n[t.charCodeAt(r)] << 18 | n[t.charCodeAt(r + 1)] << 12 | n[t.charCodeAt(r + 2)] << 6 | n[t.charCodeAt(r + 3)],
                        u[c++] = e >> 16 & 255,
                        u[c++] = e >> 8 & 255,
                        u[c++] = 255 & e;
                return 2 === a && (e = n[t.charCodeAt(r)] << 2 | n[t.charCodeAt(r + 1)] >> 4,
                    u[c++] = 255 & e),
                    1 === a && (e = n[t.charCodeAt(r)] << 10 | n[t.charCodeAt(r + 1)] << 4 | n[t.charCodeAt(r + 2)] >> 2,
                        u[c++] = e >> 8 & 255,
                        u[c++] = 255 & e),
                    u
            }
            ,
            e.fromByteArray = function (t) {
                for (var e, n = t.length, i = n % 3, o = [], s = 0, a = n - i; s < a; s += 16383)
                    o.push(function (t, e, n) {
                        for (var i, o = [], s = e; s < n; s += 3)
                            o.push(r[(i = (t[s] << 16 & 16711680) + (t[s + 1] << 8 & 65280) + (255 & t[s + 2])) >> 18 & 63] + r[i >> 12 & 63] + r[i >> 6 & 63] + r[63 & i]);
                        return o.join("")
                    }(t, s, s + 16383 > a ? a : s + 16383));
                return 1 === i ? o.push(r[(e = t[n - 1]) >> 2] + r[e << 4 & 63] + "==") : 2 === i && o.push(r[(e = (t[n - 2] << 8) + t[n - 1]) >> 10] + r[e >> 4 & 63] + r[e << 2 & 63] + "="),
                    o.join("")
            }
            ;
        for (var r = [], n = [], i = "undefined" != typeof Uint8Array ? Uint8Array : Array, o = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", s = 0, a = o.length; s < a; ++s)
            r[s] = o[s],
                n[o.charCodeAt(s)] = s;
        function l(t) {
            var e = t.length;
            if (e % 4 > 0)
                throw Error("Invalid string. Length must be a multiple of 4");
            var r = t.indexOf("=");
            -1 === r && (r = e);
            var n = r === e ? 0 : 4 - r % 4;
            return [r, n]
        }
        n["-".charCodeAt(0)] = 62,
            n["_".charCodeAt(0)] = 63
    },
    76942: function (t) {
        "use strict";
        for (var e = "qpzry9x8gf2tvdw0s3jn54khce6mua7l", r = {}, n = 0; n < e.length; n++) {
            var i = e.charAt(n);
            if (void 0 !== r[i])
                throw TypeError(i + " is ambiguous");
            r[i] = n
        }
        function o(t) {
            var e = t >> 25;
            return (33554431 & t) << 5 ^ 996825010 & -(e >> 0 & 1) ^ 642813549 & -(e >> 1 & 1) ^ 513874426 & -(e >> 2 & 1) ^ 1027748829 & -(e >> 3 & 1) ^ 705979059 & -(e >> 4 & 1)
        }
        function s(t) {
            for (var e = 1, r = 0; r < t.length; ++r) {
                var n = t.charCodeAt(r);
                if (n < 33 || n > 126)
                    return "Invalid prefix (" + t + ")";
                e = o(e) ^ n >> 5
            }
            for (r = 0,
                e = o(e); r < t.length; ++r) {
                var i = t.charCodeAt(r);
                e = o(e) ^ 31 & i
            }
            return e
        }
        function a(t, e) {
            if (e = e || 90,
                t.length < 8)
                return t + " too short";
            if (t.length > e)
                return "Exceeds length limit";
            var n = t.toLowerCase()
                , i = t.toUpperCase();
            if (t !== n && t !== i)
                return "Mixed-case string " + t;
            var a = (t = n).lastIndexOf("1");
            if (-1 === a)
                return "No separator character for " + t;
            if (0 === a)
                return "Missing prefix for " + t;
            var l = t.slice(0, a)
                , u = t.slice(a + 1);
            if (u.length < 6)
                return "Data too short";
            var c = s(l);
            if ("string" == typeof c)
                return c;
            for (var h = [], f = 0; f < u.length; ++f) {
                var d = u.charAt(f)
                    , p = r[d];
                if (void 0 === p)
                    return "Unknown character " + d;
                c = o(c) ^ p,
                    f + 6 >= u.length || h.push(p)
            }
            return 1 !== c ? "Invalid checksum for " + t : {
                prefix: l,
                words: h
            }
        }
        function l(t, e, r, n) {
            for (var i = 0, o = 0, s = (1 << r) - 1, a = [], l = 0; l < t.length; ++l)
                for (i = i << e | t[l],
                    o += e; o >= r;)
                    a.push(i >> (o -= r) & s);
            if (n)
                o > 0 && a.push(i << r - o & s);
            else {
                if (o >= e)
                    return "Excess padding";
                if (i << r - o & s)
                    return "Non-zero padding"
            }
            return a
        }
        t.exports = {
            decodeUnsafe: function () {
                var t = a.apply(null, arguments);
                if ("object" == typeof t)
                    return t
            },
            decode: function (t) {
                var e = a.apply(null, arguments);
                if ("object" == typeof e)
                    return e;
                throw Error(e)
            },
            encode: function (t, r, n) {
                if (n = n || 90,
                    t.length + 7 + r.length > n)
                    throw TypeError("Exceeds length limit");
                var i = s(t = t.toLowerCase());
                if ("string" == typeof i)
                    throw Error(i);
                for (var a = t + "1", l = 0; l < r.length; ++l) {
                    var u = r[l];
                    if (u >> 5 != 0)
                        throw Error("Non 5-bit word");
                    i = o(i) ^ u,
                        a += e.charAt(u)
                }
                for (l = 0; l < 6; ++l)
                    i = o(i);
                for (i ^= 1,
                    l = 0; l < 6; ++l) {
                    var c = i >> (5 - l) * 5 & 31;
                    a += e.charAt(c)
                }
                return a
            },
            toWordsUnsafe: function (t) {
                var e = l(t, 8, 5, !0);
                if (Array.isArray(e))
                    return e
            },
            toWords: function (t) {
                var e = l(t, 8, 5, !0);
                if (Array.isArray(e))
                    return e;
                throw Error(e)
            },
            fromWordsUnsafe: function (t) {
                var e = l(t, 5, 8, !1);
                if (Array.isArray(e))
                    return e
            },
            fromWords: function (t) {
                var e = l(t, 5, 8, !1);
                if (Array.isArray(e))
                    return e;
                throw Error(e)
            }
        }
    },
    56662: function (t, e, r) {
        !function (t, e) {
            "use strict";
            function n(t, e) {
                if (!t)
                    throw Error(e || "Assertion failed")
            }
            function i(t, e) {
                t.super_ = e;
                var r = function () { };
                r.prototype = e.prototype,
                    t.prototype = new r,
                    t.prototype.constructor = t
            }
            function o(t, e, r) {
                if (o.isBN(t))
                    return t;
                this.negative = 0,
                    this.words = null,
                    this.length = 0,
                    this.red = null,
                    null !== t && (("le" === e || "be" === e) && (r = e,
                        e = 10),
                        this._init(t || 0, e || 10, r || "be"))
            }
            "object" == typeof t ? t.exports = o : e.BN = o,
                o.BN = o,
                o.wordSize = 26;
            try {
                h = "undefined" != typeof window && void 0 !== window.Buffer ? window.Buffer : r(46601).Buffer
            } catch (t) { }
            function s(t, e) {
                var r = t.charCodeAt(e);
                return r >= 48 && r <= 57 ? r - 48 : r >= 65 && r <= 70 ? r - 55 : r >= 97 && r <= 102 ? r - 87 : void n(!1, "Invalid character in " + t)
            }
            function a(t, e, r) {
                var n = s(t, r);
                return r - 1 >= e && (n |= s(t, r - 1) << 4),
                    n
            }
            function l(t, e, r, i) {
                for (var o = 0, s = 0, a = Math.min(t.length, r), l = e; l < a; l++) {
                    var u = t.charCodeAt(l) - 48;
                    o *= i,
                        s = u >= 49 ? u - 49 + 10 : u >= 17 ? u - 17 + 10 : u,
                        n(u >= 0 && s < i, "Invalid character"),
                        o += s
                }
                return o
            }
            function u(t, e) {
                t.words = e.words,
                    t.length = e.length,
                    t.negative = e.negative,
                    t.red = e.red
            }
            if (o.isBN = function (t) {
                return t instanceof o || null !== t && "object" == typeof t && t.constructor.wordSize === o.wordSize && Array.isArray(t.words)
            }
                ,
                o.max = function (t, e) {
                    return t.cmp(e) > 0 ? t : e
                }
                ,
                o.min = function (t, e) {
                    return 0 > t.cmp(e) ? t : e
                }
                ,
                o.prototype._init = function (t, e, r) {
                    if ("number" == typeof t)
                        return this._initNumber(t, e, r);
                    if ("object" == typeof t)
                        return this._initArray(t, e, r);
                    "hex" === e && (e = 16),
                        n(e === (0 | e) && e >= 2 && e <= 36);
                    var i = 0;
                    "-" === (t = t.toString().replace(/\s+/g, ""))[0] && (i++,
                        this.negative = 1),
                        i < t.length && (16 === e ? this._parseHex(t, i, r) : (this._parseBase(t, e, i),
                            "le" === r && this._initArray(this.toArray(), e, r)))
                }
                ,
                o.prototype._initNumber = function (t, e, r) {
                    t < 0 && (this.negative = 1,
                        t = -t),
                        t < 67108864 ? (this.words = [67108863 & t],
                            this.length = 1) : t < 4503599627370496 ? (this.words = [67108863 & t, t / 67108864 & 67108863],
                                this.length = 2) : (n(t < 9007199254740992),
                                    this.words = [67108863 & t, t / 67108864 & 67108863, 1],
                                    this.length = 3),
                        "le" === r && this._initArray(this.toArray(), e, r)
                }
                ,
                o.prototype._initArray = function (t, e, r) {
                    if (n("number" == typeof t.length),
                        t.length <= 0)
                        return this.words = [0],
                            this.length = 1,
                            this;
                    this.length = Math.ceil(t.length / 3),
                        this.words = Array(this.length);
                    for (var i, o, s = 0; s < this.length; s++)
                        this.words[s] = 0;
                    var a = 0;
                    if ("be" === r)
                        for (s = t.length - 1,
                            i = 0; s >= 0; s -= 3)
                            o = t[s] | t[s - 1] << 8 | t[s - 2] << 16,
                                this.words[i] |= o << a & 67108863,
                                this.words[i + 1] = o >>> 26 - a & 67108863,
                                (a += 24) >= 26 && (a -= 26,
                                    i++);
                    else if ("le" === r)
                        for (s = 0,
                            i = 0; s < t.length; s += 3)
                            o = t[s] | t[s + 1] << 8 | t[s + 2] << 16,
                                this.words[i] |= o << a & 67108863,
                                this.words[i + 1] = o >>> 26 - a & 67108863,
                                (a += 24) >= 26 && (a -= 26,
                                    i++);
                    return this._strip()
                }
                ,
                o.prototype._parseHex = function (t, e, r) {
                    this.length = Math.ceil((t.length - e) / 6),
                        this.words = Array(this.length);
                    for (var n, i = 0; i < this.length; i++)
                        this.words[i] = 0;
                    var o = 0
                        , s = 0;
                    if ("be" === r)
                        for (i = t.length - 1; i >= e; i -= 2)
                            n = a(t, e, i) << o,
                                this.words[s] |= 67108863 & n,
                                o >= 18 ? (o -= 18,
                                    s += 1,
                                    this.words[s] |= n >>> 26) : o += 8;
                    else
                        for (i = (t.length - e) % 2 == 0 ? e + 1 : e; i < t.length; i += 2)
                            n = a(t, e, i) << o,
                                this.words[s] |= 67108863 & n,
                                o >= 18 ? (o -= 18,
                                    s += 1,
                                    this.words[s] |= n >>> 26) : o += 8;
                    this._strip()
                }
                ,
                o.prototype._parseBase = function (t, e, r) {
                    this.words = [0],
                        this.length = 1;
                    for (var n = 0, i = 1; i <= 67108863; i *= e)
                        n++;
                    n--,
                        i = i / e | 0;
                    for (var o = t.length - r, s = o % n, a = Math.min(o, o - s) + r, u = 0, c = r; c < a; c += n)
                        u = l(t, c, c + n, e),
                            this.imuln(i),
                            this.words[0] + u < 67108864 ? this.words[0] += u : this._iaddn(u);
                    if (0 !== s) {
                        var h = 1;
                        for (u = l(t, c, t.length, e),
                            c = 0; c < s; c++)
                            h *= e;
                        this.imuln(h),
                            this.words[0] + u < 67108864 ? this.words[0] += u : this._iaddn(u)
                    }
                    this._strip()
                }
                ,
                o.prototype.copy = function (t) {
                    t.words = Array(this.length);
                    for (var e = 0; e < this.length; e++)
                        t.words[e] = this.words[e];
                    t.length = this.length,
                        t.negative = this.negative,
                        t.red = this.red
                }
                ,
                o.prototype._move = function (t) {
                    u(t, this)
                }
                ,
                o.prototype.clone = function () {
                    var t = new o(null);
                    return this.copy(t),
                        t
                }
                ,
                o.prototype._expand = function (t) {
                    for (; this.length < t;)
                        this.words[this.length++] = 0;
                    return this
                }
                ,
                o.prototype._strip = function () {
                    for (; this.length > 1 && 0 === this.words[this.length - 1];)
                        this.length--;
                    return this._normSign()
                }
                ,
                o.prototype._normSign = function () {
                    return 1 === this.length && 0 === this.words[0] && (this.negative = 0),
                        this
                }
                ,
                "undefined" != typeof Symbol && "function" == typeof Symbol.for)
                try {
                    o.prototype[Symbol.for("nodejs.util.inspect.custom")] = c
                } catch (t) {
                    o.prototype.inspect = c
                }
            else
                o.prototype.inspect = c;
            function c() {
                return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">"
            }
            var h, f = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"], d = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5], p = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64e6, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 243e5, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];
            function m(t, e, r) {
                r.negative = e.negative ^ t.negative;
                var n = t.length + e.length | 0;
                r.length = n,
                    n = n - 1 | 0;
                var i = 0 | t.words[0]
                    , o = 0 | e.words[0]
                    , s = i * o
                    , a = 67108863 & s
                    , l = s / 67108864 | 0;
                r.words[0] = a;
                for (var u = 1; u < n; u++) {
                    for (var c = l >>> 26, h = 67108863 & l, f = Math.min(u, e.length - 1), d = Math.max(0, u - t.length + 1); d <= f; d++) {
                        var p = u - d | 0;
                        c += (s = (i = 0 | t.words[p]) * (o = 0 | e.words[d]) + h) / 67108864 | 0,
                            h = 67108863 & s
                    }
                    r.words[u] = 0 | h,
                        l = 0 | c
                }
                return 0 !== l ? r.words[u] = 0 | l : r.length--,
                    r._strip()
            }
            o.prototype.toString = function (t, e) {
                if (e = 0 | e || 1,
                    16 === (t = t || 10) || "hex" === t) {
                    r = "";
                    for (var r, i = 0, o = 0, s = 0; s < this.length; s++) {
                        var a = this.words[s]
                            , l = ((a << i | o) & 16777215).toString(16);
                        o = a >>> 24 - i & 16777215,
                            (i += 2) >= 26 && (i -= 26,
                                s--),
                            r = 0 !== o || s !== this.length - 1 ? f[6 - l.length] + l + r : l + r
                    }
                    for (0 !== o && (r = o.toString(16) + r); r.length % e != 0;)
                        r = "0" + r;
                    return 0 !== this.negative && (r = "-" + r),
                        r
                }
                if (t === (0 | t) && t >= 2 && t <= 36) {
                    var u = d[t]
                        , c = p[t];
                    r = "";
                    var h = this.clone();
                    for (h.negative = 0; !h.isZero();) {
                        var m = h.modrn(c).toString(t);
                        r = (h = h.idivn(c)).isZero() ? m + r : f[u - m.length] + m + r
                    }
                    for (this.isZero() && (r = "0" + r); r.length % e != 0;)
                        r = "0" + r;
                    return 0 !== this.negative && (r = "-" + r),
                        r
                }
                n(!1, "Base should be between 2 and 36")
            }
                ,
                o.prototype.toNumber = function () {
                    var t = this.words[0];
                    return 2 === this.length ? t += 67108864 * this.words[1] : 3 === this.length && 1 === this.words[2] ? t += 4503599627370496 + 67108864 * this.words[1] : this.length > 2 && n(!1, "Number can only safely store up to 53 bits"),
                        0 !== this.negative ? -t : t
                }
                ,
                o.prototype.toJSON = function () {
                    return this.toString(16, 2)
                }
                ,
                h && (o.prototype.toBuffer = function (t, e) {
                    return this.toArrayLike(h, t, e)
                }
                ),
                o.prototype.toArray = function (t, e) {
                    return this.toArrayLike(Array, t, e)
                }
                ,
                o.prototype.toArrayLike = function (t, e, r) {
                    this._strip();
                    var i = this.byteLength()
                        , o = r || Math.max(1, i);
                    n(i <= o, "byte array longer than desired length"),
                        n(o > 0, "Requested array length <= 0");
                    var s = t.allocUnsafe ? t.allocUnsafe(o) : new t(o);
                    return this["_toArrayLike" + ("le" === e ? "LE" : "BE")](s, i),
                        s
                }
                ,
                o.prototype._toArrayLikeLE = function (t, e) {
                    for (var r = 0, n = 0, i = 0, o = 0; i < this.length; i++) {
                        var s = this.words[i] << o | n;
                        t[r++] = 255 & s,
                            r < t.length && (t[r++] = s >> 8 & 255),
                            r < t.length && (t[r++] = s >> 16 & 255),
                            6 === o ? (r < t.length && (t[r++] = s >> 24 & 255),
                                n = 0,
                                o = 0) : (n = s >>> 24,
                                    o += 2)
                    }
                    if (r < t.length)
                        for (t[r++] = n; r < t.length;)
                            t[r++] = 0
                }
                ,
                o.prototype._toArrayLikeBE = function (t, e) {
                    for (var r = t.length - 1, n = 0, i = 0, o = 0; i < this.length; i++) {
                        var s = this.words[i] << o | n;
                        t[r--] = 255 & s,
                            r >= 0 && (t[r--] = s >> 8 & 255),
                            r >= 0 && (t[r--] = s >> 16 & 255),
                            6 === o ? (r >= 0 && (t[r--] = s >> 24 & 255),
                                n = 0,
                                o = 0) : (n = s >>> 24,
                                    o += 2)
                    }
                    if (r >= 0)
                        for (t[r--] = n; r >= 0;)
                            t[r--] = 0
                }
                ,
                Math.clz32 ? o.prototype._countBits = function (t) {
                    return 32 - Math.clz32(t)
                }
                    : o.prototype._countBits = function (t) {
                        var e = t
                            , r = 0;
                        return e >= 4096 && (r += 13,
                            e >>>= 13),
                            e >= 64 && (r += 7,
                                e >>>= 7),
                            e >= 8 && (r += 4,
                                e >>>= 4),
                            e >= 2 && (r += 2,
                                e >>>= 2),
                            r + e
                    }
                ,
                o.prototype._zeroBits = function (t) {
                    if (0 === t)
                        return 26;
                    var e = t
                        , r = 0;
                    return (8191 & e) == 0 && (r += 13,
                        e >>>= 13),
                        (127 & e) == 0 && (r += 7,
                            e >>>= 7),
                        (15 & e) == 0 && (r += 4,
                            e >>>= 4),
                        (3 & e) == 0 && (r += 2,
                            e >>>= 2),
                        (1 & e) == 0 && r++,
                        r
                }
                ,
                o.prototype.bitLength = function () {
                    var t = this.words[this.length - 1]
                        , e = this._countBits(t);
                    return (this.length - 1) * 26 + e
                }
                ,
                o.prototype.zeroBits = function () {
                    if (this.isZero())
                        return 0;
                    for (var t = 0, e = 0; e < this.length; e++) {
                        var r = this._zeroBits(this.words[e]);
                        if (t += r,
                            26 !== r)
                            break
                    }
                    return t
                }
                ,
                o.prototype.byteLength = function () {
                    return Math.ceil(this.bitLength() / 8)
                }
                ,
                o.prototype.toTwos = function (t) {
                    return 0 !== this.negative ? this.abs().inotn(t).iaddn(1) : this.clone()
                }
                ,
                o.prototype.fromTwos = function (t) {
                    return this.testn(t - 1) ? this.notn(t).iaddn(1).ineg() : this.clone()
                }
                ,
                o.prototype.isNeg = function () {
                    return 0 !== this.negative
                }
                ,
                o.prototype.neg = function () {
                    return this.clone().ineg()
                }
                ,
                o.prototype.ineg = function () {
                    return this.isZero() || (this.negative ^= 1),
                        this
                }
                ,
                o.prototype.iuor = function (t) {
                    for (; this.length < t.length;)
                        this.words[this.length++] = 0;
                    for (var e = 0; e < t.length; e++)
                        this.words[e] = this.words[e] | t.words[e];
                    return this._strip()
                }
                ,
                o.prototype.ior = function (t) {
                    return n((this.negative | t.negative) == 0),
                        this.iuor(t)
                }
                ,
                o.prototype.or = function (t) {
                    return this.length > t.length ? this.clone().ior(t) : t.clone().ior(this)
                }
                ,
                o.prototype.uor = function (t) {
                    return this.length > t.length ? this.clone().iuor(t) : t.clone().iuor(this)
                }
                ,
                o.prototype.iuand = function (t) {
                    var e;
                    e = this.length > t.length ? t : this;
                    for (var r = 0; r < e.length; r++)
                        this.words[r] = this.words[r] & t.words[r];
                    return this.length = e.length,
                        this._strip()
                }
                ,
                o.prototype.iand = function (t) {
                    return n((this.negative | t.negative) == 0),
                        this.iuand(t)
                }
                ,
                o.prototype.and = function (t) {
                    return this.length > t.length ? this.clone().iand(t) : t.clone().iand(this)
                }
                ,
                o.prototype.uand = function (t) {
                    return this.length > t.length ? this.clone().iuand(t) : t.clone().iuand(this)
                }
                ,
                o.prototype.iuxor = function (t) {
                    this.length > t.length ? (e = this,
                        r = t) : (e = t,
                            r = this);
                    for (var e, r, n = 0; n < r.length; n++)
                        this.words[n] = e.words[n] ^ r.words[n];
                    if (this !== e)
                        for (; n < e.length; n++)
                            this.words[n] = e.words[n];
                    return this.length = e.length,
                        this._strip()
                }
                ,
                o.prototype.ixor = function (t) {
                    return n((this.negative | t.negative) == 0),
                        this.iuxor(t)
                }
                ,
                o.prototype.xor = function (t) {
                    return this.length > t.length ? this.clone().ixor(t) : t.clone().ixor(this)
                }
                ,
                o.prototype.uxor = function (t) {
                    return this.length > t.length ? this.clone().iuxor(t) : t.clone().iuxor(this)
                }
                ,
                o.prototype.inotn = function (t) {
                    n("number" == typeof t && t >= 0);
                    var e = 0 | Math.ceil(t / 26)
                        , r = t % 26;
                    this._expand(e),
                        r > 0 && e--;
                    for (var i = 0; i < e; i++)
                        this.words[i] = 67108863 & ~this.words[i];
                    return r > 0 && (this.words[i] = ~this.words[i] & 67108863 >> 26 - r),
                        this._strip()
                }
                ,
                o.prototype.notn = function (t) {
                    return this.clone().inotn(t)
                }
                ,
                o.prototype.setn = function (t, e) {
                    n("number" == typeof t && t >= 0);
                    var r = t / 26 | 0
                        , i = t % 26;
                    return this._expand(r + 1),
                        e ? this.words[r] = this.words[r] | 1 << i : this.words[r] = this.words[r] & ~(1 << i),
                        this._strip()
                }
                ,
                o.prototype.iadd = function (t) {
                    if (0 !== this.negative && 0 === t.negative)
                        return this.negative = 0,
                            e = this.isub(t),
                            this.negative ^= 1,
                            this._normSign();
                    if (0 === this.negative && 0 !== t.negative)
                        return t.negative = 0,
                            e = this.isub(t),
                            t.negative = 1,
                            e._normSign();
                    this.length > t.length ? (r = this,
                        n = t) : (r = t,
                            n = this);
                    for (var e, r, n, i = 0, o = 0; o < n.length; o++)
                        e = (0 | r.words[o]) + (0 | n.words[o]) + i,
                            this.words[o] = 67108863 & e,
                            i = e >>> 26;
                    for (; 0 !== i && o < r.length; o++)
                        e = (0 | r.words[o]) + i,
                            this.words[o] = 67108863 & e,
                            i = e >>> 26;
                    if (this.length = r.length,
                        0 !== i)
                        this.words[this.length] = i,
                            this.length++;
                    else if (r !== this)
                        for (; o < r.length; o++)
                            this.words[o] = r.words[o];
                    return this
                }
                ,
                o.prototype.add = function (t) {
                    var e;
                    return 0 !== t.negative && 0 === this.negative ? (t.negative = 0,
                        e = this.sub(t),
                        t.negative ^= 1,
                        e) : 0 === t.negative && 0 !== this.negative ? (this.negative = 0,
                            e = t.sub(this),
                            this.negative = 1,
                            e) : this.length > t.length ? this.clone().iadd(t) : t.clone().iadd(this)
                }
                ,
                o.prototype.isub = function (t) {
                    if (0 !== t.negative) {
                        t.negative = 0;
                        var e, r, n = this.iadd(t);
                        return t.negative = 1,
                            n._normSign()
                    }
                    if (0 !== this.negative)
                        return this.negative = 0,
                            this.iadd(t),
                            this.negative = 1,
                            this._normSign();
                    var i = this.cmp(t);
                    if (0 === i)
                        return this.negative = 0,
                            this.length = 1,
                            this.words[0] = 0,
                            this;
                    i > 0 ? (e = this,
                        r = t) : (e = t,
                            r = this);
                    for (var o = 0, s = 0; s < r.length; s++)
                        o = (n = (0 | e.words[s]) - (0 | r.words[s]) + o) >> 26,
                            this.words[s] = 67108863 & n;
                    for (; 0 !== o && s < e.length; s++)
                        o = (n = (0 | e.words[s]) + o) >> 26,
                            this.words[s] = 67108863 & n;
                    if (0 === o && s < e.length && e !== this)
                        for (; s < e.length; s++)
                            this.words[s] = e.words[s];
                    return this.length = Math.max(this.length, s),
                        e !== this && (this.negative = 1),
                        this._strip()
                }
                ,
                o.prototype.sub = function (t) {
                    return this.clone().isub(t)
                }
                ;
            var g = function (t, e, r) {
                var n, i, o, s = t.words, a = e.words, l = r.words, u = 0, c = 0 | s[0], h = 8191 & c, f = c >>> 13, d = 0 | s[1], p = 8191 & d, m = d >>> 13, g = 0 | s[2], y = 8191 & g, v = g >>> 13, b = 0 | s[3], w = 8191 & b, E = b >>> 13, A = 0 | s[4], _ = 8191 & A, S = A >>> 13, k = 0 | s[5], P = 8191 & k, N = k >>> 13, C = 0 | s[6], T = 8191 & C, x = C >>> 13, R = 0 | s[7], I = 8191 & R, O = R >>> 13, M = 0 | s[8], B = 8191 & M, D = M >>> 13, F = 0 | s[9], U = 8191 & F, L = F >>> 13, z = 0 | a[0], G = 8191 & z, j = z >>> 13, Y = 0 | a[1], K = 8191 & Y, q = Y >>> 13, H = 0 | a[2], J = 8191 & H, V = H >>> 13, W = 0 | a[3], Q = 8191 & W, $ = W >>> 13, X = 0 | a[4], Z = 8191 & X, tt = X >>> 13, te = 0 | a[5], tr = 8191 & te, tn = te >>> 13, ti = 0 | a[6], to = 8191 & ti, ts = ti >>> 13, ta = 0 | a[7], tl = 8191 & ta, tu = ta >>> 13, tc = 0 | a[8], th = 8191 & tc, tf = tc >>> 13, td = 0 | a[9], tp = 8191 & td, tm = td >>> 13;
                r.negative = t.negative ^ e.negative,
                    r.length = 19;
                var tg = (u + (n = Math.imul(h, G)) | 0) + ((8191 & (i = (i = Math.imul(h, j)) + Math.imul(f, G) | 0)) << 13) | 0;
                u = ((o = Math.imul(f, j)) + (i >>> 13) | 0) + (tg >>> 26) | 0,
                    tg &= 67108863,
                    n = Math.imul(p, G),
                    i = (i = Math.imul(p, j)) + Math.imul(m, G) | 0,
                    o = Math.imul(m, j);
                var ty = (u + (n = n + Math.imul(h, K) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, q) | 0) + Math.imul(f, K) | 0)) << 13) | 0;
                u = ((o = o + Math.imul(f, q) | 0) + (i >>> 13) | 0) + (ty >>> 26) | 0,
                    ty &= 67108863,
                    n = Math.imul(y, G),
                    i = (i = Math.imul(y, j)) + Math.imul(v, G) | 0,
                    o = Math.imul(v, j),
                    n = n + Math.imul(p, K) | 0,
                    i = (i = i + Math.imul(p, q) | 0) + Math.imul(m, K) | 0,
                    o = o + Math.imul(m, q) | 0;
                var tv = (u + (n = n + Math.imul(h, J) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, V) | 0) + Math.imul(f, J) | 0)) << 13) | 0;
                u = ((o = o + Math.imul(f, V) | 0) + (i >>> 13) | 0) + (tv >>> 26) | 0,
                    tv &= 67108863,
                    n = Math.imul(w, G),
                    i = (i = Math.imul(w, j)) + Math.imul(E, G) | 0,
                    o = Math.imul(E, j),
                    n = n + Math.imul(y, K) | 0,
                    i = (i = i + Math.imul(y, q) | 0) + Math.imul(v, K) | 0,
                    o = o + Math.imul(v, q) | 0,
                    n = n + Math.imul(p, J) | 0,
                    i = (i = i + Math.imul(p, V) | 0) + Math.imul(m, J) | 0,
                    o = o + Math.imul(m, V) | 0;
                var tb = (u + (n = n + Math.imul(h, Q) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, $) | 0) + Math.imul(f, Q) | 0)) << 13) | 0;
                u = ((o = o + Math.imul(f, $) | 0) + (i >>> 13) | 0) + (tb >>> 26) | 0,
                    tb &= 67108863,
                    n = Math.imul(_, G),
                    i = (i = Math.imul(_, j)) + Math.imul(S, G) | 0,
                    o = Math.imul(S, j),
                    n = n + Math.imul(w, K) | 0,
                    i = (i = i + Math.imul(w, q) | 0) + Math.imul(E, K) | 0,
                    o = o + Math.imul(E, q) | 0,
                    n = n + Math.imul(y, J) | 0,
                    i = (i = i + Math.imul(y, V) | 0) + Math.imul(v, J) | 0,
                    o = o + Math.imul(v, V) | 0,
                    n = n + Math.imul(p, Q) | 0,
                    i = (i = i + Math.imul(p, $) | 0) + Math.imul(m, Q) | 0,
                    o = o + Math.imul(m, $) | 0;
                var tw = (u + (n = n + Math.imul(h, Z) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, tt) | 0) + Math.imul(f, Z) | 0)) << 13) | 0;
                u = ((o = o + Math.imul(f, tt) | 0) + (i >>> 13) | 0) + (tw >>> 26) | 0,
                    tw &= 67108863,
                    n = Math.imul(P, G),
                    i = (i = Math.imul(P, j)) + Math.imul(N, G) | 0,
                    o = Math.imul(N, j),
                    n = n + Math.imul(_, K) | 0,
                    i = (i = i + Math.imul(_, q) | 0) + Math.imul(S, K) | 0,
                    o = o + Math.imul(S, q) | 0,
                    n = n + Math.imul(w, J) | 0,
                    i = (i = i + Math.imul(w, V) | 0) + Math.imul(E, J) | 0,
                    o = o + Math.imul(E, V) | 0,
                    n = n + Math.imul(y, Q) | 0,
                    i = (i = i + Math.imul(y, $) | 0) + Math.imul(v, Q) | 0,
                    o = o + Math.imul(v, $) | 0,
                    n = n + Math.imul(p, Z) | 0,
                    i = (i = i + Math.imul(p, tt) | 0) + Math.imul(m, Z) | 0,
                    o = o + Math.imul(m, tt) | 0;
                var tE = (u + (n = n + Math.imul(h, tr) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, tn) | 0) + Math.imul(f, tr) | 0)) << 13) | 0;
                u = ((o = o + Math.imul(f, tn) | 0) + (i >>> 13) | 0) + (tE >>> 26) | 0,
                    tE &= 67108863,
                    n = Math.imul(T, G),
                    i = (i = Math.imul(T, j)) + Math.imul(x, G) | 0,
                    o = Math.imul(x, j),
                    n = n + Math.imul(P, K) | 0,
                    i = (i = i + Math.imul(P, q) | 0) + Math.imul(N, K) | 0,
                    o = o + Math.imul(N, q) | 0,
                    n = n + Math.imul(_, J) | 0,
                    i = (i = i + Math.imul(_, V) | 0) + Math.imul(S, J) | 0,
                    o = o + Math.imul(S, V) | 0,
                    n = n + Math.imul(w, Q) | 0,
                    i = (i = i + Math.imul(w, $) | 0) + Math.imul(E, Q) | 0,
                    o = o + Math.imul(E, $) | 0,
                    n = n + Math.imul(y, Z) | 0,
                    i = (i = i + Math.imul(y, tt) | 0) + Math.imul(v, Z) | 0,
                    o = o + Math.imul(v, tt) | 0,
                    n = n + Math.imul(p, tr) | 0,
                    i = (i = i + Math.imul(p, tn) | 0) + Math.imul(m, tr) | 0,
                    o = o + Math.imul(m, tn) | 0;
                var tA = (u + (n = n + Math.imul(h, to) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, ts) | 0) + Math.imul(f, to) | 0)) << 13) | 0;
                u = ((o = o + Math.imul(f, ts) | 0) + (i >>> 13) | 0) + (tA >>> 26) | 0,
                    tA &= 67108863,
                    n = Math.imul(I, G),
                    i = (i = Math.imul(I, j)) + Math.imul(O, G) | 0,
                    o = Math.imul(O, j),
                    n = n + Math.imul(T, K) | 0,
                    i = (i = i + Math.imul(T, q) | 0) + Math.imul(x, K) | 0,
                    o = o + Math.imul(x, q) | 0,
                    n = n + Math.imul(P, J) | 0,
                    i = (i = i + Math.imul(P, V) | 0) + Math.imul(N, J) | 0,
                    o = o + Math.imul(N, V) | 0,
                    n = n + Math.imul(_, Q) | 0,
                    i = (i = i + Math.imul(_, $) | 0) + Math.imul(S, Q) | 0,
                    o = o + Math.imul(S, $) | 0,
                    n = n + Math.imul(w, Z) | 0,
                    i = (i = i + Math.imul(w, tt) | 0) + Math.imul(E, Z) | 0,
                    o = o + Math.imul(E, tt) | 0,
                    n = n + Math.imul(y, tr) | 0,
                    i = (i = i + Math.imul(y, tn) | 0) + Math.imul(v, tr) | 0,
                    o = o + Math.imul(v, tn) | 0,
                    n = n + Math.imul(p, to) | 0,
                    i = (i = i + Math.imul(p, ts) | 0) + Math.imul(m, to) | 0,
                    o = o + Math.imul(m, ts) | 0;
                var t_ = (u + (n = n + Math.imul(h, tl) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, tu) | 0) + Math.imul(f, tl) | 0)) << 13) | 0;
                u = ((o = o + Math.imul(f, tu) | 0) + (i >>> 13) | 0) + (t_ >>> 26) | 0,
                    t_ &= 67108863,
                    n = Math.imul(B, G),
                    i = (i = Math.imul(B, j)) + Math.imul(D, G) | 0,
                    o = Math.imul(D, j),
                    n = n + Math.imul(I, K) | 0,
                    i = (i = i + Math.imul(I, q) | 0) + Math.imul(O, K) | 0,
                    o = o + Math.imul(O, q) | 0,
                    n = n + Math.imul(T, J) | 0,
                    i = (i = i + Math.imul(T, V) | 0) + Math.imul(x, J) | 0,
                    o = o + Math.imul(x, V) | 0,
                    n = n + Math.imul(P, Q) | 0,
                    i = (i = i + Math.imul(P, $) | 0) + Math.imul(N, Q) | 0,
                    o = o + Math.imul(N, $) | 0,
                    n = n + Math.imul(_, Z) | 0,
                    i = (i = i + Math.imul(_, tt) | 0) + Math.imul(S, Z) | 0,
                    o = o + Math.imul(S, tt) | 0,
                    n = n + Math.imul(w, tr) | 0,
                    i = (i = i + Math.imul(w, tn) | 0) + Math.imul(E, tr) | 0,
                    o = o + Math.imul(E, tn) | 0,
                    n = n + Math.imul(y, to) | 0,
                    i = (i = i + Math.imul(y, ts) | 0) + Math.imul(v, to) | 0,
                    o = o + Math.imul(v, ts) | 0,
                    n = n + Math.imul(p, tl) | 0,
                    i = (i = i + Math.imul(p, tu) | 0) + Math.imul(m, tl) | 0,
                    o = o + Math.imul(m, tu) | 0;
                var tS = (u + (n = n + Math.imul(h, th) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, tf) | 0) + Math.imul(f, th) | 0)) << 13) | 0;
                u = ((o = o + Math.imul(f, tf) | 0) + (i >>> 13) | 0) + (tS >>> 26) | 0,
                    tS &= 67108863,
                    n = Math.imul(U, G),
                    i = (i = Math.imul(U, j)) + Math.imul(L, G) | 0,
                    o = Math.imul(L, j),
                    n = n + Math.imul(B, K) | 0,
                    i = (i = i + Math.imul(B, q) | 0) + Math.imul(D, K) | 0,
                    o = o + Math.imul(D, q) | 0,
                    n = n + Math.imul(I, J) | 0,
                    i = (i = i + Math.imul(I, V) | 0) + Math.imul(O, J) | 0,
                    o = o + Math.imul(O, V) | 0,
                    n = n + Math.imul(T, Q) | 0,
                    i = (i = i + Math.imul(T, $) | 0) + Math.imul(x, Q) | 0,
                    o = o + Math.imul(x, $) | 0,
                    n = n + Math.imul(P, Z) | 0,
                    i = (i = i + Math.imul(P, tt) | 0) + Math.imul(N, Z) | 0,
                    o = o + Math.imul(N, tt) | 0,
                    n = n + Math.imul(_, tr) | 0,
                    i = (i = i + Math.imul(_, tn) | 0) + Math.imul(S, tr) | 0,
                    o = o + Math.imul(S, tn) | 0,
                    n = n + Math.imul(w, to) | 0,
                    i = (i = i + Math.imul(w, ts) | 0) + Math.imul(E, to) | 0,
                    o = o + Math.imul(E, ts) | 0,
                    n = n + Math.imul(y, tl) | 0,
                    i = (i = i + Math.imul(y, tu) | 0) + Math.imul(v, tl) | 0,
                    o = o + Math.imul(v, tu) | 0,
                    n = n + Math.imul(p, th) | 0,
                    i = (i = i + Math.imul(p, tf) | 0) + Math.imul(m, th) | 0,
                    o = o + Math.imul(m, tf) | 0;
                var tk = (u + (n = n + Math.imul(h, tp) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, tm) | 0) + Math.imul(f, tp) | 0)) << 13) | 0;
                u = ((o = o + Math.imul(f, tm) | 0) + (i >>> 13) | 0) + (tk >>> 26) | 0,
                    tk &= 67108863,
                    n = Math.imul(U, K),
                    i = (i = Math.imul(U, q)) + Math.imul(L, K) | 0,
                    o = Math.imul(L, q),
                    n = n + Math.imul(B, J) | 0,
                    i = (i = i + Math.imul(B, V) | 0) + Math.imul(D, J) | 0,
                    o = o + Math.imul(D, V) | 0,
                    n = n + Math.imul(I, Q) | 0,
                    i = (i = i + Math.imul(I, $) | 0) + Math.imul(O, Q) | 0,
                    o = o + Math.imul(O, $) | 0,
                    n = n + Math.imul(T, Z) | 0,
                    i = (i = i + Math.imul(T, tt) | 0) + Math.imul(x, Z) | 0,
                    o = o + Math.imul(x, tt) | 0,
                    n = n + Math.imul(P, tr) | 0,
                    i = (i = i + Math.imul(P, tn) | 0) + Math.imul(N, tr) | 0,
                    o = o + Math.imul(N, tn) | 0,
                    n = n + Math.imul(_, to) | 0,
                    i = (i = i + Math.imul(_, ts) | 0) + Math.imul(S, to) | 0,
                    o = o + Math.imul(S, ts) | 0,
                    n = n + Math.imul(w, tl) | 0,
                    i = (i = i + Math.imul(w, tu) | 0) + Math.imul(E, tl) | 0,
                    o = o + Math.imul(E, tu) | 0,
                    n = n + Math.imul(y, th) | 0,
                    i = (i = i + Math.imul(y, tf) | 0) + Math.imul(v, th) | 0,
                    o = o + Math.imul(v, tf) | 0;
                var tP = (u + (n = n + Math.imul(p, tp) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(p, tm) | 0) + Math.imul(m, tp) | 0)) << 13) | 0;
                u = ((o = o + Math.imul(m, tm) | 0) + (i >>> 13) | 0) + (tP >>> 26) | 0,
                    tP &= 67108863,
                    n = Math.imul(U, J),
                    i = (i = Math.imul(U, V)) + Math.imul(L, J) | 0,
                    o = Math.imul(L, V),
                    n = n + Math.imul(B, Q) | 0,
                    i = (i = i + Math.imul(B, $) | 0) + Math.imul(D, Q) | 0,
                    o = o + Math.imul(D, $) | 0,
                    n = n + Math.imul(I, Z) | 0,
                    i = (i = i + Math.imul(I, tt) | 0) + Math.imul(O, Z) | 0,
                    o = o + Math.imul(O, tt) | 0,
                    n = n + Math.imul(T, tr) | 0,
                    i = (i = i + Math.imul(T, tn) | 0) + Math.imul(x, tr) | 0,
                    o = o + Math.imul(x, tn) | 0,
                    n = n + Math.imul(P, to) | 0,
                    i = (i = i + Math.imul(P, ts) | 0) + Math.imul(N, to) | 0,
                    o = o + Math.imul(N, ts) | 0,
                    n = n + Math.imul(_, tl) | 0,
                    i = (i = i + Math.imul(_, tu) | 0) + Math.imul(S, tl) | 0,
                    o = o + Math.imul(S, tu) | 0,
                    n = n + Math.imul(w, th) | 0,
                    i = (i = i + Math.imul(w, tf) | 0) + Math.imul(E, th) | 0,
                    o = o + Math.imul(E, tf) | 0;
                var tN = (u + (n = n + Math.imul(y, tp) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(y, tm) | 0) + Math.imul(v, tp) | 0)) << 13) | 0;
                u = ((o = o + Math.imul(v, tm) | 0) + (i >>> 13) | 0) + (tN >>> 26) | 0,
                    tN &= 67108863,
                    n = Math.imul(U, Q),
                    i = (i = Math.imul(U, $)) + Math.imul(L, Q) | 0,
                    o = Math.imul(L, $),
                    n = n + Math.imul(B, Z) | 0,
                    i = (i = i + Math.imul(B, tt) | 0) + Math.imul(D, Z) | 0,
                    o = o + Math.imul(D, tt) | 0,
                    n = n + Math.imul(I, tr) | 0,
                    i = (i = i + Math.imul(I, tn) | 0) + Math.imul(O, tr) | 0,
                    o = o + Math.imul(O, tn) | 0,
                    n = n + Math.imul(T, to) | 0,
                    i = (i = i + Math.imul(T, ts) | 0) + Math.imul(x, to) | 0,
                    o = o + Math.imul(x, ts) | 0,
                    n = n + Math.imul(P, tl) | 0,
                    i = (i = i + Math.imul(P, tu) | 0) + Math.imul(N, tl) | 0,
                    o = o + Math.imul(N, tu) | 0,
                    n = n + Math.imul(_, th) | 0,
                    i = (i = i + Math.imul(_, tf) | 0) + Math.imul(S, th) | 0,
                    o = o + Math.imul(S, tf) | 0;
                var tC = (u + (n = n + Math.imul(w, tp) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(w, tm) | 0) + Math.imul(E, tp) | 0)) << 13) | 0;
                u = ((o = o + Math.imul(E, tm) | 0) + (i >>> 13) | 0) + (tC >>> 26) | 0,
                    tC &= 67108863,
                    n = Math.imul(U, Z),
                    i = (i = Math.imul(U, tt)) + Math.imul(L, Z) | 0,
                    o = Math.imul(L, tt),
                    n = n + Math.imul(B, tr) | 0,
                    i = (i = i + Math.imul(B, tn) | 0) + Math.imul(D, tr) | 0,
                    o = o + Math.imul(D, tn) | 0,
                    n = n + Math.imul(I, to) | 0,
                    i = (i = i + Math.imul(I, ts) | 0) + Math.imul(O, to) | 0,
                    o = o + Math.imul(O, ts) | 0,
                    n = n + Math.imul(T, tl) | 0,
                    i = (i = i + Math.imul(T, tu) | 0) + Math.imul(x, tl) | 0,
                    o = o + Math.imul(x, tu) | 0,
                    n = n + Math.imul(P, th) | 0,
                    i = (i = i + Math.imul(P, tf) | 0) + Math.imul(N, th) | 0,
                    o = o + Math.imul(N, tf) | 0;
                var tT = (u + (n = n + Math.imul(_, tp) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(_, tm) | 0) + Math.imul(S, tp) | 0)) << 13) | 0;
                u = ((o = o + Math.imul(S, tm) | 0) + (i >>> 13) | 0) + (tT >>> 26) | 0,
                    tT &= 67108863,
                    n = Math.imul(U, tr),
                    i = (i = Math.imul(U, tn)) + Math.imul(L, tr) | 0,
                    o = Math.imul(L, tn),
                    n = n + Math.imul(B, to) | 0,
                    i = (i = i + Math.imul(B, ts) | 0) + Math.imul(D, to) | 0,
                    o = o + Math.imul(D, ts) | 0,
                    n = n + Math.imul(I, tl) | 0,
                    i = (i = i + Math.imul(I, tu) | 0) + Math.imul(O, tl) | 0,
                    o = o + Math.imul(O, tu) | 0,
                    n = n + Math.imul(T, th) | 0,
                    i = (i = i + Math.imul(T, tf) | 0) + Math.imul(x, th) | 0,
                    o = o + Math.imul(x, tf) | 0;
                var tx = (u + (n = n + Math.imul(P, tp) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(P, tm) | 0) + Math.imul(N, tp) | 0)) << 13) | 0;
                u = ((o = o + Math.imul(N, tm) | 0) + (i >>> 13) | 0) + (tx >>> 26) | 0,
                    tx &= 67108863,
                    n = Math.imul(U, to),
                    i = (i = Math.imul(U, ts)) + Math.imul(L, to) | 0,
                    o = Math.imul(L, ts),
                    n = n + Math.imul(B, tl) | 0,
                    i = (i = i + Math.imul(B, tu) | 0) + Math.imul(D, tl) | 0,
                    o = o + Math.imul(D, tu) | 0,
                    n = n + Math.imul(I, th) | 0,
                    i = (i = i + Math.imul(I, tf) | 0) + Math.imul(O, th) | 0,
                    o = o + Math.imul(O, tf) | 0;
                var tR = (u + (n = n + Math.imul(T, tp) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(T, tm) | 0) + Math.imul(x, tp) | 0)) << 13) | 0;
                u = ((o = o + Math.imul(x, tm) | 0) + (i >>> 13) | 0) + (tR >>> 26) | 0,
                    tR &= 67108863,
                    n = Math.imul(U, tl),
                    i = (i = Math.imul(U, tu)) + Math.imul(L, tl) | 0,
                    o = Math.imul(L, tu),
                    n = n + Math.imul(B, th) | 0,
                    i = (i = i + Math.imul(B, tf) | 0) + Math.imul(D, th) | 0,
                    o = o + Math.imul(D, tf) | 0;
                var tI = (u + (n = n + Math.imul(I, tp) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(I, tm) | 0) + Math.imul(O, tp) | 0)) << 13) | 0;
                u = ((o = o + Math.imul(O, tm) | 0) + (i >>> 13) | 0) + (tI >>> 26) | 0,
                    tI &= 67108863,
                    n = Math.imul(U, th),
                    i = (i = Math.imul(U, tf)) + Math.imul(L, th) | 0,
                    o = Math.imul(L, tf);
                var tO = (u + (n = n + Math.imul(B, tp) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(B, tm) | 0) + Math.imul(D, tp) | 0)) << 13) | 0;
                u = ((o = o + Math.imul(D, tm) | 0) + (i >>> 13) | 0) + (tO >>> 26) | 0,
                    tO &= 67108863;
                var tM = (u + (n = Math.imul(U, tp)) | 0) + ((8191 & (i = (i = Math.imul(U, tm)) + Math.imul(L, tp) | 0)) << 13) | 0;
                return u = ((o = Math.imul(L, tm)) + (i >>> 13) | 0) + (tM >>> 26) | 0,
                    tM &= 67108863,
                    l[0] = tg,
                    l[1] = ty,
                    l[2] = tv,
                    l[3] = tb,
                    l[4] = tw,
                    l[5] = tE,
                    l[6] = tA,
                    l[7] = t_,
                    l[8] = tS,
                    l[9] = tk,
                    l[10] = tP,
                    l[11] = tN,
                    l[12] = tC,
                    l[13] = tT,
                    l[14] = tx,
                    l[15] = tR,
                    l[16] = tI,
                    l[17] = tO,
                    l[18] = tM,
                    0 !== u && (l[19] = u,
                        r.length++),
                    r
            };
            function y(t, e, r) {
                r.negative = e.negative ^ t.negative,
                    r.length = t.length + e.length;
                for (var n = 0, i = 0, o = 0; o < r.length - 1; o++) {
                    var s = i;
                    i = 0;
                    for (var a = 67108863 & n, l = Math.min(o, e.length - 1), u = Math.max(0, o - t.length + 1); u <= l; u++) {
                        var c = o - u
                            , h = (0 | t.words[c]) * (0 | e.words[u])
                            , f = 67108863 & h;
                        s = s + (h / 67108864 | 0) | 0,
                            a = 67108863 & (f = f + a | 0),
                            i += (s = s + (f >>> 26) | 0) >>> 26,
                            s &= 67108863
                    }
                    r.words[o] = a,
                        n = s,
                        s = i
                }
                return 0 !== n ? r.words[o] = n : r.length--,
                    r._strip()
            }
            function v(t, e) {
                this.x = t,
                    this.y = e
            }
            Math.imul || (g = m),
                o.prototype.mulTo = function (t, e) {
                    var r, n = this.length + t.length;
                    return 10 === this.length && 10 === t.length ? g(this, t, e) : n < 63 ? m(this, t, e) : y(this, t, e)
                }
                ,
                v.prototype.makeRBT = function (t) {
                    for (var e = Array(t), r = o.prototype._countBits(t) - 1, n = 0; n < t; n++)
                        e[n] = this.revBin(n, r, t);
                    return e
                }
                ,
                v.prototype.revBin = function (t, e, r) {
                    if (0 === t || t === r - 1)
                        return t;
                    for (var n = 0, i = 0; i < e; i++)
                        n |= (1 & t) << e - i - 1,
                            t >>= 1;
                    return n
                }
                ,
                v.prototype.permute = function (t, e, r, n, i, o) {
                    for (var s = 0; s < o; s++)
                        n[s] = e[t[s]],
                            i[s] = r[t[s]]
                }
                ,
                v.prototype.transform = function (t, e, r, n, i, o) {
                    this.permute(o, t, e, r, n, i);
                    for (var s = 1; s < i; s <<= 1)
                        for (var a = s << 1, l = Math.cos(2 * Math.PI / a), u = Math.sin(2 * Math.PI / a), c = 0; c < i; c += a)
                            for (var h = l, f = u, d = 0; d < s; d++) {
                                var p = r[c + d]
                                    , m = n[c + d]
                                    , g = r[c + d + s]
                                    , y = n[c + d + s]
                                    , v = h * g - f * y;
                                y = h * y + f * g,
                                    g = v,
                                    r[c + d] = p + g,
                                    n[c + d] = m + y,
                                    r[c + d + s] = p - g,
                                    n[c + d + s] = m - y,
                                    d !== a && (v = l * h - u * f,
                                        f = l * f + u * h,
                                        h = v)
                            }
                }
                ,
                v.prototype.guessLen13b = function (t, e) {
                    var r = 1 | Math.max(e, t)
                        , n = 1 & r
                        , i = 0;
                    for (r = r / 2 | 0; r; r >>>= 1)
                        i++;
                    return 1 << i + 1 + n
                }
                ,
                v.prototype.conjugate = function (t, e, r) {
                    if (!(r <= 1))
                        for (var n = 0; n < r / 2; n++) {
                            var i = t[n];
                            t[n] = t[r - n - 1],
                                t[r - n - 1] = i,
                                i = e[n],
                                e[n] = -e[r - n - 1],
                                e[r - n - 1] = -i
                        }
                }
                ,
                v.prototype.normalize13b = function (t, e) {
                    for (var r = 0, n = 0; n < e / 2; n++) {
                        var i = 8192 * Math.round(t[2 * n + 1] / e) + Math.round(t[2 * n] / e) + r;
                        t[n] = 67108863 & i,
                            r = i < 67108864 ? 0 : i / 67108864 | 0
                    }
                    return t
                }
                ,
                v.prototype.convert13b = function (t, e, r, i) {
                    for (var o = 0, s = 0; s < e; s++)
                        o += 0 | t[s],
                            r[2 * s] = 8191 & o,
                            o >>>= 13,
                            r[2 * s + 1] = 8191 & o,
                            o >>>= 13;
                    for (s = 2 * e; s < i; ++s)
                        r[s] = 0;
                    n(0 === o),
                        n((-8192 & o) == 0)
                }
                ,
                v.prototype.stub = function (t) {
                    for (var e = Array(t), r = 0; r < t; r++)
                        e[r] = 0;
                    return e
                }
                ,
                v.prototype.mulp = function (t, e, r) {
                    var n = 2 * this.guessLen13b(t.length, e.length)
                        , i = this.makeRBT(n)
                        , o = this.stub(n)
                        , s = Array(n)
                        , a = Array(n)
                        , l = Array(n)
                        , u = Array(n)
                        , c = Array(n)
                        , h = Array(n)
                        , f = r.words;
                    f.length = n,
                        this.convert13b(t.words, t.length, s, n),
                        this.convert13b(e.words, e.length, u, n),
                        this.transform(s, o, a, l, n, i),
                        this.transform(u, o, c, h, n, i);
                    for (var d = 0; d < n; d++) {
                        var p = a[d] * c[d] - l[d] * h[d];
                        l[d] = a[d] * h[d] + l[d] * c[d],
                            a[d] = p
                    }
                    return this.conjugate(a, l, n),
                        this.transform(a, l, f, o, n, i),
                        this.conjugate(f, o, n),
                        this.normalize13b(f, n),
                        r.negative = t.negative ^ e.negative,
                        r.length = t.length + e.length,
                        r._strip()
                }
                ,
                o.prototype.mul = function (t) {
                    var e = new o(null);
                    return e.words = Array(this.length + t.length),
                        this.mulTo(t, e)
                }
                ,
                o.prototype.mulf = function (t) {
                    var e = new o(null);
                    return e.words = Array(this.length + t.length),
                        y(this, t, e)
                }
                ,
                o.prototype.imul = function (t) {
                    return this.clone().mulTo(t, this)
                }
                ,
                o.prototype.imuln = function (t) {
                    var e = t < 0;
                    e && (t = -t),
                        n("number" == typeof t),
                        n(t < 67108864);
                    for (var r = 0, i = 0; i < this.length; i++) {
                        var o = (0 | this.words[i]) * t
                            , s = (67108863 & o) + (67108863 & r);
                        r >>= 26,
                            r += (o / 67108864 | 0) + (s >>> 26),
                            this.words[i] = 67108863 & s
                    }
                    return 0 !== r && (this.words[i] = r,
                        this.length++),
                        e ? this.ineg() : this
                }
                ,
                o.prototype.muln = function (t) {
                    return this.clone().imuln(t)
                }
                ,
                o.prototype.sqr = function () {
                    return this.mul(this)
                }
                ,
                o.prototype.isqr = function () {
                    return this.imul(this.clone())
                }
                ,
                o.prototype.pow = function (t) {
                    var e = function (t) {
                        for (var e = Array(t.bitLength()), r = 0; r < e.length; r++) {
                            var n = r / 26 | 0
                                , i = r % 26;
                            e[r] = t.words[n] >>> i & 1
                        }
                        return e
                    }(t);
                    if (0 === e.length)
                        return new o(1);
                    for (var r = this, n = 0; n < e.length && 0 === e[n]; n++,
                        r = r.sqr())
                        ;
                    if (++n < e.length)
                        for (var i = r.sqr(); n < e.length; n++,
                            i = i.sqr())
                            0 !== e[n] && (r = r.mul(i));
                    return r
                }
                ,
                o.prototype.iushln = function (t) {
                    n("number" == typeof t && t >= 0);
                    var e, r = t % 26, i = (t - r) / 26, o = 67108863 >>> 26 - r << 26 - r;
                    if (0 !== r) {
                        var s = 0;
                        for (e = 0; e < this.length; e++) {
                            var a = this.words[e] & o
                                , l = (0 | this.words[e]) - a << r;
                            this.words[e] = l | s,
                                s = a >>> 26 - r
                        }
                        s && (this.words[e] = s,
                            this.length++)
                    }
                    if (0 !== i) {
                        for (e = this.length - 1; e >= 0; e--)
                            this.words[e + i] = this.words[e];
                        for (e = 0; e < i; e++)
                            this.words[e] = 0;
                        this.length += i
                    }
                    return this._strip()
                }
                ,
                o.prototype.ishln = function (t) {
                    return n(0 === this.negative),
                        this.iushln(t)
                }
                ,
                o.prototype.iushrn = function (t, e, r) {
                    n("number" == typeof t && t >= 0),
                        i = e ? (e - e % 26) / 26 : 0;
                    var i, o = t % 26, s = Math.min((t - o) / 26, this.length), a = 67108863 ^ 67108863 >>> o << o;
                    if (i -= s,
                        i = Math.max(0, i),
                        r) {
                        for (var l = 0; l < s; l++)
                            r.words[l] = this.words[l];
                        r.length = s
                    }
                    if (0 === s)
                        ;
                    else if (this.length > s)
                        for (this.length -= s,
                            l = 0; l < this.length; l++)
                            this.words[l] = this.words[l + s];
                    else
                        this.words[0] = 0,
                            this.length = 1;
                    var u = 0;
                    for (l = this.length - 1; l >= 0 && (0 !== u || l >= i); l--) {
                        var c = 0 | this.words[l];
                        this.words[l] = u << 26 - o | c >>> o,
                            u = c & a
                    }
                    return r && 0 !== u && (r.words[r.length++] = u),
                        0 === this.length && (this.words[0] = 0,
                            this.length = 1),
                        this._strip()
                }
                ,
                o.prototype.ishrn = function (t, e, r) {
                    return n(0 === this.negative),
                        this.iushrn(t, e, r)
                }
                ,
                o.prototype.shln = function (t) {
                    return this.clone().ishln(t)
                }
                ,
                o.prototype.ushln = function (t) {
                    return this.clone().iushln(t)
                }
                ,
                o.prototype.shrn = function (t) {
                    return this.clone().ishrn(t)
                }
                ,
                o.prototype.ushrn = function (t) {
                    return this.clone().iushrn(t)
                }
                ,
                o.prototype.testn = function (t) {
                    n("number" == typeof t && t >= 0);
                    var e = t % 26
                        , r = (t - e) / 26;
                    return !(this.length <= r) && !!(this.words[r] & 1 << e)
                }
                ,
                o.prototype.imaskn = function (t) {
                    n("number" == typeof t && t >= 0);
                    var e = t % 26
                        , r = (t - e) / 26;
                    return (n(0 === this.negative, "imaskn works only with positive numbers"),
                        this.length <= r) ? this : (0 !== e && r++,
                            this.length = Math.min(r, this.length),
                            0 !== e && (this.words[this.length - 1] &= 67108863 ^ 67108863 >>> e << e),
                            this._strip())
                }
                ,
                o.prototype.maskn = function (t) {
                    return this.clone().imaskn(t)
                }
                ,
                o.prototype.iaddn = function (t) {
                    return (n("number" == typeof t),
                        n(t < 67108864),
                        t < 0) ? this.isubn(-t) : 0 !== this.negative ? (1 === this.length && (0 | this.words[0]) <= t ? (this.words[0] = t - (0 | this.words[0]),
                            this.negative = 0) : (this.negative = 0,
                                this.isubn(t),
                                this.negative = 1),
                            this) : this._iaddn(t)
                }
                ,
                o.prototype._iaddn = function (t) {
                    this.words[0] += t;
                    for (var e = 0; e < this.length && this.words[e] >= 67108864; e++)
                        this.words[e] -= 67108864,
                            e === this.length - 1 ? this.words[e + 1] = 1 : this.words[e + 1]++;
                    return this.length = Math.max(this.length, e + 1),
                        this
                }
                ,
                o.prototype.isubn = function (t) {
                    if (n("number" == typeof t),
                        n(t < 67108864),
                        t < 0)
                        return this.iaddn(-t);
                    if (0 !== this.negative)
                        return this.negative = 0,
                            this.iaddn(t),
                            this.negative = 1,
                            this;
                    if (this.words[0] -= t,
                        1 === this.length && this.words[0] < 0)
                        this.words[0] = -this.words[0],
                            this.negative = 1;
                    else
                        for (var e = 0; e < this.length && this.words[e] < 0; e++)
                            this.words[e] += 67108864,
                                this.words[e + 1] -= 1;
                    return this._strip()
                }
                ,
                o.prototype.addn = function (t) {
                    return this.clone().iaddn(t)
                }
                ,
                o.prototype.subn = function (t) {
                    return this.clone().isubn(t)
                }
                ,
                o.prototype.iabs = function () {
                    return this.negative = 0,
                        this
                }
                ,
                o.prototype.abs = function () {
                    return this.clone().iabs()
                }
                ,
                o.prototype._ishlnsubmul = function (t, e, r) {
                    var i, o, s = t.length + r;
                    this._expand(s);
                    var a = 0;
                    for (i = 0; i < t.length; i++) {
                        o = (0 | this.words[i + r]) + a;
                        var l = (0 | t.words[i]) * e;
                        o -= 67108863 & l,
                            a = (o >> 26) - (l / 67108864 | 0),
                            this.words[i + r] = 67108863 & o
                    }
                    for (; i < this.length - r; i++)
                        a = (o = (0 | this.words[i + r]) + a) >> 26,
                            this.words[i + r] = 67108863 & o;
                    if (0 === a)
                        return this._strip();
                    for (n(-1 === a),
                        a = 0,
                        i = 0; i < this.length; i++)
                        a = (o = -(0 | this.words[i]) + a) >> 26,
                            this.words[i] = 67108863 & o;
                    return this.negative = 1,
                        this._strip()
                }
                ,
                o.prototype._wordDiv = function (t, e) {
                    var r, n = this.length - t.length, i = this.clone(), s = t, a = 0 | s.words[s.length - 1];
                    0 != (n = 26 - this._countBits(a)) && (s = s.ushln(n),
                        i.iushln(n),
                        a = 0 | s.words[s.length - 1]);
                    var l = i.length - s.length;
                    if ("mod" !== e) {
                        (r = new o(null)).length = l + 1,
                            r.words = Array(r.length);
                        for (var u = 0; u < r.length; u++)
                            r.words[u] = 0
                    }
                    var c = i.clone()._ishlnsubmul(s, 1, l);
                    0 === c.negative && (i = c,
                        r && (r.words[l] = 1));
                    for (var h = l - 1; h >= 0; h--) {
                        var f = (0 | i.words[s.length + h]) * 67108864 + (0 | i.words[s.length + h - 1]);
                        for (f = Math.min(f / a | 0, 67108863),
                            i._ishlnsubmul(s, f, h); 0 !== i.negative;)
                            f--,
                                i.negative = 0,
                                i._ishlnsubmul(s, 1, h),
                                i.isZero() || (i.negative ^= 1);
                        r && (r.words[h] = f)
                    }
                    return r && r._strip(),
                        i._strip(),
                        "div" !== e && 0 !== n && i.iushrn(n),
                    {
                        div: r || null,
                        mod: i
                    }
                }
                ,
                o.prototype.divmod = function (t, e, r) {
                    var i, s, a;
                    return (n(!t.isZero()),
                        this.isZero()) ? {
                        div: new o(0),
                        mod: new o(0)
                    } : 0 !== this.negative && 0 === t.negative ? (a = this.neg().divmod(t, e),
                        "mod" !== e && (i = a.div.neg()),
                        "div" !== e && (s = a.mod.neg(),
                            r && 0 !== s.negative && s.iadd(t)),
                    {
                        div: i,
                        mod: s
                    }) : 0 === this.negative && 0 !== t.negative ? (a = this.divmod(t.neg(), e),
                        "mod" !== e && (i = a.div.neg()),
                    {
                        div: i,
                        mod: a.mod
                    }) : (this.negative & t.negative) != 0 ? (a = this.neg().divmod(t.neg(), e),
                        "div" !== e && (s = a.mod.neg(),
                            r && 0 !== s.negative && s.isub(t)),
                    {
                        div: a.div,
                        mod: s
                    }) : t.length > this.length || 0 > this.cmp(t) ? {
                        div: new o(0),
                        mod: this
                    } : 1 === t.length ? "div" === e ? {
                        div: this.divn(t.words[0]),
                        mod: null
                    } : "mod" === e ? {
                        div: null,
                        mod: new o(this.modrn(t.words[0]))
                    } : {
                        div: this.divn(t.words[0]),
                        mod: new o(this.modrn(t.words[0]))
                    } : this._wordDiv(t, e)
                }
                ,
                o.prototype.div = function (t) {
                    return this.divmod(t, "div", !1).div
                }
                ,
                o.prototype.mod = function (t) {
                    return this.divmod(t, "mod", !1).mod
                }
                ,
                o.prototype.umod = function (t) {
                    return this.divmod(t, "mod", !0).mod
                }
                ,
                o.prototype.divRound = function (t) {
                    var e = this.divmod(t);
                    if (e.mod.isZero())
                        return e.div;
                    var r = 0 !== e.div.negative ? e.mod.isub(t) : e.mod
                        , n = t.ushrn(1)
                        , i = t.andln(1)
                        , o = r.cmp(n);
                    return o < 0 || 1 === i && 0 === o ? e.div : 0 !== e.div.negative ? e.div.isubn(1) : e.div.iaddn(1)
                }
                ,
                o.prototype.modrn = function (t) {
                    var e = t < 0;
                    e && (t = -t),
                        n(t <= 67108863);
                    for (var r = 67108864 % t, i = 0, o = this.length - 1; o >= 0; o--)
                        i = (r * i + (0 | this.words[o])) % t;
                    return e ? -i : i
                }
                ,
                o.prototype.modn = function (t) {
                    return this.modrn(t)
                }
                ,
                o.prototype.idivn = function (t) {
                    var e = t < 0;
                    e && (t = -t),
                        n(t <= 67108863);
                    for (var r = 0, i = this.length - 1; i >= 0; i--) {
                        var o = (0 | this.words[i]) + 67108864 * r;
                        this.words[i] = o / t | 0,
                            r = o % t
                    }
                    return this._strip(),
                        e ? this.ineg() : this
                }
                ,
                o.prototype.divn = function (t) {
                    return this.clone().idivn(t)
                }
                ,
                o.prototype.egcd = function (t) {
                    n(0 === t.negative),
                        n(!t.isZero());
                    var e = this
                        , r = t.clone();
                    e = 0 !== e.negative ? e.umod(t) : e.clone();
                    for (var i = new o(1), s = new o(0), a = new o(0), l = new o(1), u = 0; e.isEven() && r.isEven();)
                        e.iushrn(1),
                            r.iushrn(1),
                            ++u;
                    for (var c = r.clone(), h = e.clone(); !e.isZero();) {
                        for (var f = 0, d = 1; (e.words[0] & d) == 0 && f < 26; ++f,
                            d <<= 1)
                            ;
                        if (f > 0)
                            for (e.iushrn(f); f-- > 0;)
                                (i.isOdd() || s.isOdd()) && (i.iadd(c),
                                    s.isub(h)),
                                    i.iushrn(1),
                                    s.iushrn(1);
                        for (var p = 0, m = 1; (r.words[0] & m) == 0 && p < 26; ++p,
                            m <<= 1)
                            ;
                        if (p > 0)
                            for (r.iushrn(p); p-- > 0;)
                                (a.isOdd() || l.isOdd()) && (a.iadd(c),
                                    l.isub(h)),
                                    a.iushrn(1),
                                    l.iushrn(1);
                        e.cmp(r) >= 0 ? (e.isub(r),
                            i.isub(a),
                            s.isub(l)) : (r.isub(e),
                                a.isub(i),
                                l.isub(s))
                    }
                    return {
                        a: a,
                        b: l,
                        gcd: r.iushln(u)
                    }
                }
                ,
                o.prototype._invmp = function (t) {
                    n(0 === t.negative),
                        n(!t.isZero());
                    var e, r = this, i = t.clone();
                    r = 0 !== r.negative ? r.umod(t) : r.clone();
                    for (var s = new o(1), a = new o(0), l = i.clone(); r.cmpn(1) > 0 && i.cmpn(1) > 0;) {
                        for (var u = 0, c = 1; (r.words[0] & c) == 0 && u < 26; ++u,
                            c <<= 1)
                            ;
                        if (u > 0)
                            for (r.iushrn(u); u-- > 0;)
                                s.isOdd() && s.iadd(l),
                                    s.iushrn(1);
                        for (var h = 0, f = 1; (i.words[0] & f) == 0 && h < 26; ++h,
                            f <<= 1)
                            ;
                        if (h > 0)
                            for (i.iushrn(h); h-- > 0;)
                                a.isOdd() && a.iadd(l),
                                    a.iushrn(1);
                        r.cmp(i) >= 0 ? (r.isub(i),
                            s.isub(a)) : (i.isub(r),
                                a.isub(s))
                    }
                    return 0 > (e = 0 === r.cmpn(1) ? s : a).cmpn(0) && e.iadd(t),
                        e
                }
                ,
                o.prototype.gcd = function (t) {
                    if (this.isZero())
                        return t.abs();
                    if (t.isZero())
                        return this.abs();
                    var e = this.clone()
                        , r = t.clone();
                    e.negative = 0,
                        r.negative = 0;
                    for (var n = 0; e.isEven() && r.isEven(); n++)
                        e.iushrn(1),
                            r.iushrn(1);
                    for (; ;) {
                        for (; e.isEven();)
                            e.iushrn(1);
                        for (; r.isEven();)
                            r.iushrn(1);
                        var i = e.cmp(r);
                        if (i < 0) {
                            var o = e;
                            e = r,
                                r = o
                        } else if (0 === i || 0 === r.cmpn(1))
                            break;
                        e.isub(r)
                    }
                    return r.iushln(n)
                }
                ,
                o.prototype.invm = function (t) {
                    return this.egcd(t).a.umod(t)
                }
                ,
                o.prototype.isEven = function () {
                    return (1 & this.words[0]) == 0
                }
                ,
                o.prototype.isOdd = function () {
                    return (1 & this.words[0]) == 1
                }
                ,
                o.prototype.andln = function (t) {
                    return this.words[0] & t
                }
                ,
                o.prototype.bincn = function (t) {
                    n("number" == typeof t);
                    var e = t % 26
                        , r = (t - e) / 26
                        , i = 1 << e;
                    if (this.length <= r)
                        return this._expand(r + 1),
                            this.words[r] |= i,
                            this;
                    for (var o = i, s = r; 0 !== o && s < this.length; s++) {
                        var a = 0 | this.words[s];
                        a += o,
                            o = a >>> 26,
                            a &= 67108863,
                            this.words[s] = a
                    }
                    return 0 !== o && (this.words[s] = o,
                        this.length++),
                        this
                }
                ,
                o.prototype.isZero = function () {
                    return 1 === this.length && 0 === this.words[0]
                }
                ,
                o.prototype.cmpn = function (t) {
                    var e, r = t < 0;
                    if (0 !== this.negative && !r)
                        return -1;
                    if (0 === this.negative && r)
                        return 1;
                    if (this._strip(),
                        this.length > 1)
                        e = 1;
                    else {
                        r && (t = -t),
                            n(t <= 67108863, "Number is too big");
                        var i = 0 | this.words[0];
                        e = i === t ? 0 : i < t ? -1 : 1
                    }
                    return 0 !== this.negative ? 0 | -e : e
                }
                ,
                o.prototype.cmp = function (t) {
                    if (0 !== this.negative && 0 === t.negative)
                        return -1;
                    if (0 === this.negative && 0 !== t.negative)
                        return 1;
                    var e = this.ucmp(t);
                    return 0 !== this.negative ? 0 | -e : e
                }
                ,
                o.prototype.ucmp = function (t) {
                    if (this.length > t.length)
                        return 1;
                    if (this.length < t.length)
                        return -1;
                    for (var e = 0, r = this.length - 1; r >= 0; r--) {
                        var n = 0 | this.words[r]
                            , i = 0 | t.words[r];
                        if (n !== i) {
                            n < i ? e = -1 : n > i && (e = 1);
                            break
                        }
                    }
                    return e
                }
                ,
                o.prototype.gtn = function (t) {
                    return 1 === this.cmpn(t)
                }
                ,
                o.prototype.gt = function (t) {
                    return 1 === this.cmp(t)
                }
                ,
                o.prototype.gten = function (t) {
                    return this.cmpn(t) >= 0
                }
                ,
                o.prototype.gte = function (t) {
                    return this.cmp(t) >= 0
                }
                ,
                o.prototype.ltn = function (t) {
                    return -1 === this.cmpn(t)
                }
                ,
                o.prototype.lt = function (t) {
                    return -1 === this.cmp(t)
                }
                ,
                o.prototype.lten = function (t) {
                    return 0 >= this.cmpn(t)
                }
                ,
                o.prototype.lte = function (t) {
                    return 0 >= this.cmp(t)
                }
                ,
                o.prototype.eqn = function (t) {
                    return 0 === this.cmpn(t)
                }
                ,
                o.prototype.eq = function (t) {
                    return 0 === this.cmp(t)
                }
                ,
                o.red = function (t) {
                    return new k(t)
                }
                ,
                o.prototype.toRed = function (t) {
                    return n(!this.red, "Already a number in reduction context"),
                        n(0 === this.negative, "red works only with positives"),
                        t.convertTo(this)._forceRed(t)
                }
                ,
                o.prototype.fromRed = function () {
                    return n(this.red, "fromRed works only with numbers in reduction context"),
                        this.red.convertFrom(this)
                }
                ,
                o.prototype._forceRed = function (t) {
                    return this.red = t,
                        this
                }
                ,
                o.prototype.forceRed = function (t) {
                    return n(!this.red, "Already a number in reduction context"),
                        this._forceRed(t)
                }
                ,
                o.prototype.redAdd = function (t) {
                    return n(this.red, "redAdd works only with red numbers"),
                        this.red.add(this, t)
                }
                ,
                o.prototype.redIAdd = function (t) {
                    return n(this.red, "redIAdd works only with red numbers"),
                        this.red.iadd(this, t)
                }
                ,
                o.prototype.redSub = function (t) {
                    return n(this.red, "redSub works only with red numbers"),
                        this.red.sub(this, t)
                }
                ,
                o.prototype.redISub = function (t) {
                    return n(this.red, "redISub works only with red numbers"),
                        this.red.isub(this, t)
                }
                ,
                o.prototype.redShl = function (t) {
                    return n(this.red, "redShl works only with red numbers"),
                        this.red.shl(this, t)
                }
                ,
                o.prototype.redMul = function (t) {
                    return n(this.red, "redMul works only with red numbers"),
                        this.red._verify2(this, t),
                        this.red.mul(this, t)
                }
                ,
                o.prototype.redIMul = function (t) {
                    return n(this.red, "redMul works only with red numbers"),
                        this.red._verify2(this, t),
                        this.red.imul(this, t)
                }
                ,
                o.prototype.redSqr = function () {
                    return n(this.red, "redSqr works only with red numbers"),
                        this.red._verify1(this),
                        this.red.sqr(this)
                }
                ,
                o.prototype.redISqr = function () {
                    return n(this.red, "redISqr works only with red numbers"),
                        this.red._verify1(this),
                        this.red.isqr(this)
                }
                ,
                o.prototype.redSqrt = function () {
                    return n(this.red, "redSqrt works only with red numbers"),
                        this.red._verify1(this),
                        this.red.sqrt(this)
                }
                ,
                o.prototype.redInvm = function () {
                    return n(this.red, "redInvm works only with red numbers"),
                        this.red._verify1(this),
                        this.red.invm(this)
                }
                ,
                o.prototype.redNeg = function () {
                    return n(this.red, "redNeg works only with red numbers"),
                        this.red._verify1(this),
                        this.red.neg(this)
                }
                ,
                o.prototype.redPow = function (t) {
                    return n(this.red && !t.red, "redPow(normalNum)"),
                        this.red._verify1(this),
                        this.red.pow(this, t)
                }
                ;
            var b = {
                k256: null,
                p224: null,
                p192: null,
                p25519: null
            };
            function w(t, e) {
                this.name = t,
                    this.p = new o(e, 16),
                    this.n = this.p.bitLength(),
                    this.k = new o(1).iushln(this.n).isub(this.p),
                    this.tmp = this._tmp()
            }
            function E() {
                w.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")
            }
            function A() {
                w.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")
            }
            function _() {
                w.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")
            }
            function S() {
                w.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")
            }
            function k(t) {
                if ("string" == typeof t) {
                    var e = o._prime(t);
                    this.m = e.p,
                        this.prime = e
                } else
                    n(t.gtn(1), "modulus must be greater than 1"),
                        this.m = t,
                        this.prime = null
            }
            function P(t) {
                k.call(this, t),
                    this.shift = this.m.bitLength(),
                    this.shift % 26 != 0 && (this.shift += 26 - this.shift % 26),
                    this.r = new o(1).iushln(this.shift),
                    this.r2 = this.imod(this.r.sqr()),
                    this.rinv = this.r._invmp(this.m),
                    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m),
                    this.minv = this.minv.umod(this.r),
                    this.minv = this.r.sub(this.minv)
            }
            w.prototype._tmp = function () {
                var t = new o(null);
                return t.words = Array(Math.ceil(this.n / 13)),
                    t
            }
                ,
                w.prototype.ireduce = function (t) {
                    var e, r = t;
                    do
                        this.split(r, this.tmp),
                            e = (r = (r = this.imulK(r)).iadd(this.tmp)).bitLength();
                    while (e > this.n);
                    var n = e < this.n ? -1 : r.ucmp(this.p);
                    return 0 === n ? (r.words[0] = 0,
                        r.length = 1) : n > 0 ? r.isub(this.p) : void 0 !== r.strip ? r.strip() : r._strip(),
                        r
                }
                ,
                w.prototype.split = function (t, e) {
                    t.iushrn(this.n, 0, e)
                }
                ,
                w.prototype.imulK = function (t) {
                    return t.imul(this.k)
                }
                ,
                i(E, w),
                E.prototype.split = function (t, e) {
                    for (var r = Math.min(t.length, 9), n = 0; n < r; n++)
                        e.words[n] = t.words[n];
                    if (e.length = r,
                        t.length <= 9) {
                        t.words[0] = 0,
                            t.length = 1;
                        return
                    }
                    var i = t.words[9];
                    for (n = 10,
                        e.words[e.length++] = 4194303 & i; n < t.length; n++) {
                        var o = 0 | t.words[n];
                        t.words[n - 10] = (4194303 & o) << 4 | i >>> 22,
                            i = o
                    }
                    i >>>= 22,
                        t.words[n - 10] = i,
                        0 === i && t.length > 10 ? t.length -= 10 : t.length -= 9
                }
                ,
                E.prototype.imulK = function (t) {
                    t.words[t.length] = 0,
                        t.words[t.length + 1] = 0,
                        t.length += 2;
                    for (var e = 0, r = 0; r < t.length; r++) {
                        var n = 0 | t.words[r];
                        e += 977 * n,
                            t.words[r] = 67108863 & e,
                            e = 64 * n + (e / 67108864 | 0)
                    }
                    return 0 === t.words[t.length - 1] && (t.length--,
                        0 === t.words[t.length - 1] && t.length--),
                        t
                }
                ,
                i(A, w),
                i(_, w),
                i(S, w),
                S.prototype.imulK = function (t) {
                    for (var e = 0, r = 0; r < t.length; r++) {
                        var n = (0 | t.words[r]) * 19 + e
                            , i = 67108863 & n;
                        n >>>= 26,
                            t.words[r] = i,
                            e = n
                    }
                    return 0 !== e && (t.words[t.length++] = e),
                        t
                }
                ,
                o._prime = function (t) {
                    var e;
                    if (b[t])
                        return b[t];
                    if ("k256" === t)
                        e = new E;
                    else if ("p224" === t)
                        e = new A;
                    else if ("p192" === t)
                        e = new _;
                    else if ("p25519" === t)
                        e = new S;
                    else
                        throw Error("Unknown prime " + t);
                    return b[t] = e,
                        e
                }
                ,
                k.prototype._verify1 = function (t) {
                    n(0 === t.negative, "red works only with positives"),
                        n(t.red, "red works only with red numbers")
                }
                ,
                k.prototype._verify2 = function (t, e) {
                    n((t.negative | e.negative) == 0, "red works only with positives"),
                        n(t.red && t.red === e.red, "red works only with red numbers")
                }
                ,
                k.prototype.imod = function (t) {
                    return this.prime ? this.prime.ireduce(t)._forceRed(this) : (u(t, t.umod(this.m)._forceRed(this)),
                        t)
                }
                ,
                k.prototype.neg = function (t) {
                    return t.isZero() ? t.clone() : this.m.sub(t)._forceRed(this)
                }
                ,
                k.prototype.add = function (t, e) {
                    this._verify2(t, e);
                    var r = t.add(e);
                    return r.cmp(this.m) >= 0 && r.isub(this.m),
                        r._forceRed(this)
                }
                ,
                k.prototype.iadd = function (t, e) {
                    this._verify2(t, e);
                    var r = t.iadd(e);
                    return r.cmp(this.m) >= 0 && r.isub(this.m),
                        r
                }
                ,
                k.prototype.sub = function (t, e) {
                    this._verify2(t, e);
                    var r = t.sub(e);
                    return 0 > r.cmpn(0) && r.iadd(this.m),
                        r._forceRed(this)
                }
                ,
                k.prototype.isub = function (t, e) {
                    this._verify2(t, e);
                    var r = t.isub(e);
                    return 0 > r.cmpn(0) && r.iadd(this.m),
                        r
                }
                ,
                k.prototype.shl = function (t, e) {
                    return this._verify1(t),
                        this.imod(t.ushln(e))
                }
                ,
                k.prototype.imul = function (t, e) {
                    return this._verify2(t, e),
                        this.imod(t.imul(e))
                }
                ,
                k.prototype.mul = function (t, e) {
                    return this._verify2(t, e),
                        this.imod(t.mul(e))
                }
                ,
                k.prototype.isqr = function (t) {
                    return this.imul(t, t.clone())
                }
                ,
                k.prototype.sqr = function (t) {
                    return this.mul(t, t)
                }
                ,
                k.prototype.sqrt = function (t) {
                    if (t.isZero())
                        return t.clone();
                    var e = this.m.andln(3);
                    if (n(e % 2 == 1),
                        3 === e) {
                        var r = this.m.add(new o(1)).iushrn(2);
                        return this.pow(t, r)
                    }
                    for (var i = this.m.subn(1), s = 0; !i.isZero() && 0 === i.andln(1);)
                        s++,
                            i.iushrn(1);
                    n(!i.isZero());
                    var a = new o(1).toRed(this)
                        , l = a.redNeg()
                        , u = this.m.subn(1).iushrn(1)
                        , c = this.m.bitLength();
                    for (c = new o(2 * c * c).toRed(this); 0 !== this.pow(c, u).cmp(l);)
                        c.redIAdd(l);
                    for (var h = this.pow(c, i), f = this.pow(t, i.addn(1).iushrn(1)), d = this.pow(t, i), p = s; 0 !== d.cmp(a);) {
                        for (var m = d, g = 0; 0 !== m.cmp(a); g++)
                            m = m.redSqr();
                        n(g < p);
                        var y = this.pow(h, new o(1).iushln(p - g - 1));
                        f = f.redMul(y),
                            h = y.redSqr(),
                            d = d.redMul(h),
                            p = g
                    }
                    return f
                }
                ,
                k.prototype.invm = function (t) {
                    var e = t._invmp(this.m);
                    return 0 !== e.negative ? (e.negative = 0,
                        this.imod(e).redNeg()) : this.imod(e)
                }
                ,
                k.prototype.pow = function (t, e) {
                    if (e.isZero())
                        return new o(1).toRed(this);
                    if (0 === e.cmpn(1))
                        return t.clone();
                    var r = Array(16);
                    r[0] = new o(1).toRed(this),
                        r[1] = t;
                    for (var n = 2; n < r.length; n++)
                        r[n] = this.mul(r[n - 1], t);
                    var i = r[0]
                        , s = 0
                        , a = 0
                        , l = e.bitLength() % 26;
                    for (0 === l && (l = 26),
                        n = e.length - 1; n >= 0; n--) {
                        for (var u = e.words[n], c = l - 1; c >= 0; c--) {
                            var h = u >> c & 1;
                            if (i !== r[0] && (i = this.sqr(i)),
                                0 === h && 0 === s) {
                                a = 0;
                                continue
                            }
                            s <<= 1,
                                s |= h,
                                (4 == ++a || 0 === n && 0 === c) && (i = this.mul(i, r[s]),
                                    a = 0,
                                    s = 0)
                        }
                        l = 26
                    }
                    return i
                }
                ,
                k.prototype.convertTo = function (t) {
                    var e = t.umod(this.m);
                    return e === t ? e.clone() : e
                }
                ,
                k.prototype.convertFrom = function (t) {
                    var e = t.clone();
                    return e.red = null,
                        e
                }
                ,
                o.mont = function (t) {
                    return new P(t)
                }
                ,
                i(P, k),
                P.prototype.convertTo = function (t) {
                    return this.imod(t.ushln(this.shift))
                }
                ,
                P.prototype.convertFrom = function (t) {
                    var e = this.imod(t.mul(this.rinv));
                    return e.red = null,
                        e
                }
                ,
                P.prototype.imul = function (t, e) {
                    if (t.isZero() || e.isZero())
                        return t.words[0] = 0,
                            t.length = 1,
                            t;
                    var r = t.imul(e)
                        , n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m)
                        , i = r.isub(n).iushrn(this.shift)
                        , o = i;
                    return i.cmp(this.m) >= 0 ? o = i.isub(this.m) : 0 > i.cmpn(0) && (o = i.iadd(this.m)),
                        o._forceRed(this)
                }
                ,
                P.prototype.mul = function (t, e) {
                    if (t.isZero() || e.isZero())
                        return new o(0)._forceRed(this);
                    var r = t.mul(e)
                        , n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m)
                        , i = r.isub(n).iushrn(this.shift)
                        , s = i;
                    return i.cmp(this.m) >= 0 ? s = i.isub(this.m) : 0 > i.cmpn(0) && (s = i.iadd(this.m)),
                        s._forceRed(this)
                }
                ,
                P.prototype.invm = function (t) {
                    return this.imod(t._invmp(this.m).mul(this.r2))._forceRed(this)
                }
        }(t = r.nmd(t), this)
    },
    67133: function (t, e, r) {
        "use strict";
        /*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
        let n = r(34699)
            , i = r(19087)
            , o = "function" == typeof Symbol && "function" == typeof Symbol.for ? Symbol.for("nodejs.util.inspect.custom") : null;
        function s(t) {
            if (t > 2147483647)
                throw RangeError('The value "' + t + '" is invalid for option "size"');
            let e = new Uint8Array(t);
            return Object.setPrototypeOf(e, a.prototype),
                e
        }
        function a(t, e, r) {
            if ("number" == typeof t) {
                if ("string" == typeof e)
                    throw TypeError('The "string" argument must be of type string. Received type number');
                return c(t)
            }
            return l(t, e, r)
        }
        function l(t, e, r) {
            if ("string" == typeof t)
                return function (t, e) {
                    if (("string" != typeof e || "" === e) && (e = "utf8"),
                        !a.isEncoding(e))
                        throw TypeError("Unknown encoding: " + e);
                    let r = 0 | p(t, e)
                        , n = s(r)
                        , i = n.write(t, e);
                    return i !== r && (n = n.slice(0, i)),
                        n
                }(t, e);
            if (ArrayBuffer.isView(t))
                return function (t) {
                    if (F(t, Uint8Array)) {
                        let e = new Uint8Array(t);
                        return f(e.buffer, e.byteOffset, e.byteLength)
                    }
                    return h(t)
                }(t);
            if (null == t)
                throw TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof t);
            if (F(t, ArrayBuffer) || t && F(t.buffer, ArrayBuffer) || "undefined" != typeof SharedArrayBuffer && (F(t, SharedArrayBuffer) || t && F(t.buffer, SharedArrayBuffer)))
                return f(t, e, r);
            if ("number" == typeof t)
                throw TypeError('The "value" argument must not be of type number. Received type number');
            let n = t.valueOf && t.valueOf();
            if (null != n && n !== t)
                return a.from(n, e, r);
            let i = function (t) {
                var e;
                if (a.isBuffer(t)) {
                    let e = 0 | d(t.length)
                        , r = s(e);
                    return 0 === r.length || t.copy(r, 0, 0, e),
                        r
                }
                return void 0 !== t.length ? "number" != typeof t.length || (e = t.length) != e ? s(0) : h(t) : "Buffer" === t.type && Array.isArray(t.data) ? h(t.data) : void 0
            }(t);
            if (i)
                return i;
            if ("undefined" != typeof Symbol && null != Symbol.toPrimitive && "function" == typeof t[Symbol.toPrimitive])
                return a.from(t[Symbol.toPrimitive]("string"), e, r);
            throw TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof t)
        }
        function u(t) {
            if ("number" != typeof t)
                throw TypeError('"size" argument must be of type number');
            if (t < 0)
                throw RangeError('The value "' + t + '" is invalid for option "size"')
        }
        function c(t) {
            return u(t),
                s(t < 0 ? 0 : 0 | d(t))
        }
        function h(t) {
            let e = t.length < 0 ? 0 : 0 | d(t.length)
                , r = s(e);
            for (let n = 0; n < e; n += 1)
                r[n] = 255 & t[n];
            return r
        }
        function f(t, e, r) {
            let n;
            if (e < 0 || t.byteLength < e)
                throw RangeError('"offset" is outside of buffer bounds');
            if (t.byteLength < e + (r || 0))
                throw RangeError('"length" is outside of buffer bounds');
            return Object.setPrototypeOf(n = void 0 === e && void 0 === r ? new Uint8Array(t) : void 0 === r ? new Uint8Array(t, e) : new Uint8Array(t, e, r), a.prototype),
                n
        }
        function d(t) {
            if (t >= 2147483647)
                throw RangeError("Attempt to allocate Buffer larger than maximum size: 0x7fffffff bytes");
            return 0 | t
        }
        function p(t, e) {
            if (a.isBuffer(t))
                return t.length;
            if (ArrayBuffer.isView(t) || F(t, ArrayBuffer))
                return t.byteLength;
            if ("string" != typeof t)
                throw TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof t);
            let r = t.length
                , n = arguments.length > 2 && !0 === arguments[2];
            if (!n && 0 === r)
                return 0;
            let i = !1;
            for (; ;)
                switch (e) {
                    case "ascii":
                    case "latin1":
                    case "binary":
                        return r;
                    case "utf8":
                    case "utf-8":
                        return M(t).length;
                    case "ucs2":
                    case "ucs-2":
                    case "utf16le":
                    case "utf-16le":
                        return 2 * r;
                    case "hex":
                        return r >>> 1;
                    case "base64":
                        return B(t).length;
                    default:
                        if (i)
                            return n ? -1 : M(t).length;
                        e = ("" + e).toLowerCase(),
                            i = !0
                }
        }
        function m(t, e, r) {
            let i = !1;
            if ((void 0 === e || e < 0) && (e = 0),
                e > this.length || ((void 0 === r || r > this.length) && (r = this.length),
                    r <= 0 || (r >>>= 0) <= (e >>>= 0)))
                return "";
            for (t || (t = "utf8"); ;)
                switch (t) {
                    case "hex":
                        return function (t, e, r) {
                            let n = t.length;
                            (!e || e < 0) && (e = 0),
                                (!r || r < 0 || r > n) && (r = n);
                            let i = "";
                            for (let n = e; n < r; ++n)
                                i += U[t[n]];
                            return i
                        }(this, e, r);
                    case "utf8":
                    case "utf-8":
                        return b(this, e, r);
                    case "ascii":
                        return function (t, e, r) {
                            let n = "";
                            r = Math.min(t.length, r);
                            for (let i = e; i < r; ++i)
                                n += String.fromCharCode(127 & t[i]);
                            return n
                        }(this, e, r);
                    case "latin1":
                    case "binary":
                        return function (t, e, r) {
                            let n = "";
                            r = Math.min(t.length, r);
                            for (let i = e; i < r; ++i)
                                n += String.fromCharCode(t[i]);
                            return n
                        }(this, e, r);
                    case "base64":
                        var o, s;
                        return o = e,
                            s = r,
                            0 === o && s === this.length ? n.fromByteArray(this) : n.fromByteArray(this.slice(o, s));
                    case "ucs2":
                    case "ucs-2":
                    case "utf16le":
                    case "utf-16le":
                        return function (t, e, r) {
                            let n = t.slice(e, r)
                                , i = "";
                            for (let t = 0; t < n.length - 1; t += 2)
                                i += String.fromCharCode(n[t] + 256 * n[t + 1]);
                            return i
                        }(this, e, r);
                    default:
                        if (i)
                            throw TypeError("Unknown encoding: " + t);
                        t = (t + "").toLowerCase(),
                            i = !0
                }
        }
        function g(t, e, r) {
            let n = t[e];
            t[e] = t[r],
                t[r] = n
        }
        function y(t, e, r, n, i) {
            var o;
            if (0 === t.length)
                return -1;
            if ("string" == typeof r ? (n = r,
                r = 0) : r > 2147483647 ? r = 2147483647 : r < -2147483648 && (r = -2147483648),
                (o = r = +r) != o && (r = i ? 0 : t.length - 1),
                r < 0 && (r = t.length + r),
                r >= t.length) {
                if (i)
                    return -1;
                r = t.length - 1
            } else if (r < 0) {
                if (!i)
                    return -1;
                r = 0
            }
            if ("string" == typeof e && (e = a.from(e, n)),
                a.isBuffer(e))
                return 0 === e.length ? -1 : v(t, e, r, n, i);
            if ("number" == typeof e)
                return (e &= 255,
                    "function" == typeof Uint8Array.prototype.indexOf) ? i ? Uint8Array.prototype.indexOf.call(t, e, r) : Uint8Array.prototype.lastIndexOf.call(t, e, r) : v(t, [e], r, n, i);
            throw TypeError("val must be string, number or Buffer")
        }
        function v(t, e, r, n, i) {
            let o, s = 1, a = t.length, l = e.length;
            if (void 0 !== n && ("ucs2" === (n = String(n).toLowerCase()) || "ucs-2" === n || "utf16le" === n || "utf-16le" === n)) {
                if (t.length < 2 || e.length < 2)
                    return -1;
                s = 2,
                    a /= 2,
                    l /= 2,
                    r /= 2
            }
            function u(t, e) {
                return 1 === s ? t[e] : t.readUInt16BE(e * s)
            }
            if (i) {
                let n = -1;
                for (o = r; o < a; o++)
                    if (u(t, o) === u(e, -1 === n ? 0 : o - n)) {
                        if (-1 === n && (n = o),
                            o - n + 1 === l)
                            return n * s
                    } else
                        -1 !== n && (o -= o - n),
                            n = -1
            } else
                for (r + l > a && (r = a - l),
                    o = r; o >= 0; o--) {
                    let r = !0;
                    for (let n = 0; n < l; n++)
                        if (u(t, o + n) !== u(e, n)) {
                            r = !1;
                            break
                        }
                    if (r)
                        return o
                }
            return -1
        }
        function b(t, e, r) {
            r = Math.min(t.length, r);
            let n = []
                , i = e;
            for (; i < r;) {
                let e = t[i]
                    , o = null
                    , s = e > 239 ? 4 : e > 223 ? 3 : e > 191 ? 2 : 1;
                if (i + s <= r) {
                    let r, n, a, l;
                    switch (s) {
                        case 1:
                            e < 128 && (o = e);
                            break;
                        case 2:
                            (192 & (r = t[i + 1])) == 128 && (l = (31 & e) << 6 | 63 & r) > 127 && (o = l);
                            break;
                        case 3:
                            r = t[i + 1],
                                n = t[i + 2],
                                (192 & r) == 128 && (192 & n) == 128 && (l = (15 & e) << 12 | (63 & r) << 6 | 63 & n) > 2047 && (l < 55296 || l > 57343) && (o = l);
                            break;
                        case 4:
                            r = t[i + 1],
                                n = t[i + 2],
                                a = t[i + 3],
                                (192 & r) == 128 && (192 & n) == 128 && (192 & a) == 128 && (l = (15 & e) << 18 | (63 & r) << 12 | (63 & n) << 6 | 63 & a) > 65535 && l < 1114112 && (o = l)
                    }
                }
                null === o ? (o = 65533,
                    s = 1) : o > 65535 && (o -= 65536,
                        n.push(o >>> 10 & 1023 | 55296),
                        o = 56320 | 1023 & o),
                    n.push(o),
                    i += s
            }
            return function (t) {
                let e = t.length;
                if (e <= 4096)
                    return String.fromCharCode.apply(String, t);
                let r = ""
                    , n = 0;
                for (; n < e;)
                    r += String.fromCharCode.apply(String, t.slice(n, n += 4096));
                return r
            }(n)
        }
        function w(t, e, r) {
            if (t % 1 != 0 || t < 0)
                throw RangeError("offset is not uint");
            if (t + e > r)
                throw RangeError("Trying to access beyond buffer length")
        }
        function E(t, e, r, n, i, o) {
            if (!a.isBuffer(t))
                throw TypeError('"buffer" argument must be a Buffer instance');
            if (e > i || e < o)
                throw RangeError('"value" argument is out of bounds');
            if (r + n > t.length)
                throw RangeError("Index out of range")
        }
        function A(t, e, r, n, i) {
            x(e, n, i, t, r, 7);
            let o = Number(e & BigInt(4294967295));
            t[r++] = o,
                o >>= 8,
                t[r++] = o,
                o >>= 8,
                t[r++] = o,
                o >>= 8,
                t[r++] = o;
            let s = Number(e >> BigInt(32) & BigInt(4294967295));
            return t[r++] = s,
                s >>= 8,
                t[r++] = s,
                s >>= 8,
                t[r++] = s,
                s >>= 8,
                t[r++] = s,
                r
        }
        function _(t, e, r, n, i) {
            x(e, n, i, t, r, 7);
            let o = Number(e & BigInt(4294967295));
            t[r + 7] = o,
                o >>= 8,
                t[r + 6] = o,
                o >>= 8,
                t[r + 5] = o,
                o >>= 8,
                t[r + 4] = o;
            let s = Number(e >> BigInt(32) & BigInt(4294967295));
            return t[r + 3] = s,
                s >>= 8,
                t[r + 2] = s,
                s >>= 8,
                t[r + 1] = s,
                s >>= 8,
                t[r] = s,
                r + 8
        }
        function S(t, e, r, n, i, o) {
            if (r + n > t.length || r < 0)
                throw RangeError("Index out of range")
        }
        function k(t, e, r, n, o) {
            return e = +e,
                r >>>= 0,
                o || S(t, e, r, 4, 34028234663852886e22, -34028234663852886e22),
                i.write(t, e, r, n, 23, 4),
                r + 4
        }
        function P(t, e, r, n, o) {
            return e = +e,
                r >>>= 0,
                o || S(t, e, r, 8, 17976931348623157e292, -17976931348623157e292),
                i.write(t, e, r, n, 52, 8),
                r + 8
        }
        e.Buffer = a,
            e.SlowBuffer = function (t) {
                return +t != t && (t = 0),
                    a.alloc(+t)
            }
            ,
            e.INSPECT_MAX_BYTES = 50,
            e.kMaxLength = 2147483647,
            a.TYPED_ARRAY_SUPPORT = function () {
                try {
                    let t = new Uint8Array(1)
                        , e = {
                            foo: function () {
                                return 42
                            }
                        };
                    return Object.setPrototypeOf(e, Uint8Array.prototype),
                        Object.setPrototypeOf(t, e),
                        42 === t.foo()
                } catch (t) {
                    return !1
                }
            }(),
            a.TYPED_ARRAY_SUPPORT || "undefined" == typeof console || "function" != typeof console.error || console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),
            Object.defineProperty(a.prototype, "parent", {
                enumerable: !0,
                get: function () {
                    if (a.isBuffer(this))
                        return this.buffer
                }
            }),
            Object.defineProperty(a.prototype, "offset", {
                enumerable: !0,
                get: function () {
                    if (a.isBuffer(this))
                        return this.byteOffset
                }
            }),
            a.poolSize = 8192,
            a.from = function (t, e, r) {
                return l(t, e, r)
            }
            ,
            Object.setPrototypeOf(a.prototype, Uint8Array.prototype),
            Object.setPrototypeOf(a, Uint8Array),
            a.alloc = function (t, e, r) {
                return (u(t),
                    t <= 0) ? s(t) : void 0 !== e ? "string" == typeof r ? s(t).fill(e, r) : s(t).fill(e) : s(t)
            }
            ,
            a.allocUnsafe = function (t) {
                return c(t)
            }
            ,
            a.allocUnsafeSlow = function (t) {
                return c(t)
            }
            ,
            a.isBuffer = function (t) {
                return null != t && !0 === t._isBuffer && t !== a.prototype
            }
            ,
            a.compare = function (t, e) {
                if (F(t, Uint8Array) && (t = a.from(t, t.offset, t.byteLength)),
                    F(e, Uint8Array) && (e = a.from(e, e.offset, e.byteLength)),
                    !a.isBuffer(t) || !a.isBuffer(e))
                    throw TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
                if (t === e)
                    return 0;
                let r = t.length
                    , n = e.length;
                for (let i = 0, o = Math.min(r, n); i < o; ++i)
                    if (t[i] !== e[i]) {
                        r = t[i],
                            n = e[i];
                        break
                    }
                return r < n ? -1 : n < r ? 1 : 0
            }
            ,
            a.isEncoding = function (t) {
                switch (String(t).toLowerCase()) {
                    case "hex":
                    case "utf8":
                    case "utf-8":
                    case "ascii":
                    case "latin1":
                    case "binary":
                    case "base64":
                    case "ucs2":
                    case "ucs-2":
                    case "utf16le":
                    case "utf-16le":
                        return !0;
                    default:
                        return !1
                }
            }
            ,
            a.concat = function (t, e) {
                let r;
                if (!Array.isArray(t))
                    throw TypeError('"list" argument must be an Array of Buffers');
                if (0 === t.length)
                    return a.alloc(0);
                if (void 0 === e)
                    for (r = 0,
                        e = 0; r < t.length; ++r)
                        e += t[r].length;
                let n = a.allocUnsafe(e)
                    , i = 0;
                for (r = 0; r < t.length; ++r) {
                    let e = t[r];
                    if (F(e, Uint8Array))
                        i + e.length > n.length ? (a.isBuffer(e) || (e = a.from(e)),
                            e.copy(n, i)) : Uint8Array.prototype.set.call(n, e, i);
                    else if (a.isBuffer(e))
                        e.copy(n, i);
                    else
                        throw TypeError('"list" argument must be an Array of Buffers');
                    i += e.length
                }
                return n
            }
            ,
            a.byteLength = p,
            a.prototype._isBuffer = !0,
            a.prototype.swap16 = function () {
                let t = this.length;
                if (t % 2 != 0)
                    throw RangeError("Buffer size must be a multiple of 16-bits");
                for (let e = 0; e < t; e += 2)
                    g(this, e, e + 1);
                return this
            }
            ,
            a.prototype.swap32 = function () {
                let t = this.length;
                if (t % 4 != 0)
                    throw RangeError("Buffer size must be a multiple of 32-bits");
                for (let e = 0; e < t; e += 4)
                    g(this, e, e + 3),
                        g(this, e + 1, e + 2);
                return this
            }
            ,
            a.prototype.swap64 = function () {
                let t = this.length;
                if (t % 8 != 0)
                    throw RangeError("Buffer size must be a multiple of 64-bits");
                for (let e = 0; e < t; e += 8)
                    g(this, e, e + 7),
                        g(this, e + 1, e + 6),
                        g(this, e + 2, e + 5),
                        g(this, e + 3, e + 4);
                return this
            }
            ,
            a.prototype.toString = function () {
                let t = this.length;
                return 0 === t ? "" : 0 == arguments.length ? b(this, 0, t) : m.apply(this, arguments)
            }
            ,
            a.prototype.toLocaleString = a.prototype.toString,
            a.prototype.equals = function (t) {
                if (!a.isBuffer(t))
                    throw TypeError("Argument must be a Buffer");
                return this === t || 0 === a.compare(this, t)
            }
            ,
            a.prototype.inspect = function () {
                let t = ""
                    , r = e.INSPECT_MAX_BYTES;
                return t = this.toString("hex", 0, r).replace(/(.{2})/g, "$1 ").trim(),
                    this.length > r && (t += " ... "),
                    "<Buffer " + t + ">"
            }
            ,
            o && (a.prototype[o] = a.prototype.inspect),
            a.prototype.compare = function (t, e, r, n, i) {
                if (F(t, Uint8Array) && (t = a.from(t, t.offset, t.byteLength)),
                    !a.isBuffer(t))
                    throw TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof t);
                if (void 0 === e && (e = 0),
                    void 0 === r && (r = t ? t.length : 0),
                    void 0 === n && (n = 0),
                    void 0 === i && (i = this.length),
                    e < 0 || r > t.length || n < 0 || i > this.length)
                    throw RangeError("out of range index");
                if (n >= i && e >= r)
                    return 0;
                if (n >= i)
                    return -1;
                if (e >= r)
                    return 1;
                if (e >>>= 0,
                    r >>>= 0,
                    n >>>= 0,
                    i >>>= 0,
                    this === t)
                    return 0;
                let o = i - n
                    , s = r - e
                    , l = Math.min(o, s)
                    , u = this.slice(n, i)
                    , c = t.slice(e, r);
                for (let t = 0; t < l; ++t)
                    if (u[t] !== c[t]) {
                        o = u[t],
                            s = c[t];
                        break
                    }
                return o < s ? -1 : s < o ? 1 : 0
            }
            ,
            a.prototype.includes = function (t, e, r) {
                return -1 !== this.indexOf(t, e, r)
            }
            ,
            a.prototype.indexOf = function (t, e, r) {
                return y(this, t, e, r, !0)
            }
            ,
            a.prototype.lastIndexOf = function (t, e, r) {
                return y(this, t, e, r, !1)
            }
            ,
            a.prototype.write = function (t, e, r, n) {
                var i, o, s, a, l, u, c, h;
                if (void 0 === e)
                    n = "utf8",
                        r = this.length,
                        e = 0;
                else if (void 0 === r && "string" == typeof e)
                    n = e,
                        r = this.length,
                        e = 0;
                else if (isFinite(e))
                    e >>>= 0,
                        isFinite(r) ? (r >>>= 0,
                            void 0 === n && (n = "utf8")) : (n = r,
                                r = void 0);
                else
                    throw Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
                let f = this.length - e;
                if ((void 0 === r || r > f) && (r = f),
                    t.length > 0 && (r < 0 || e < 0) || e > this.length)
                    throw RangeError("Attempt to write outside buffer bounds");
                n || (n = "utf8");
                let d = !1;
                for (; ;)
                    switch (n) {
                        case "hex":
                            return function (t, e, r, n) {
                                let i;
                                r = Number(r) || 0;
                                let o = t.length - r;
                                n ? (n = Number(n)) > o && (n = o) : n = o;
                                let s = e.length;
                                for (n > s / 2 && (n = s / 2),
                                    i = 0; i < n; ++i) {
                                    let n = parseInt(e.substr(2 * i, 2), 16);
                                    if (n != n)
                                        break;
                                    t[r + i] = n
                                }
                                return i
                            }(this, t, e, r);
                        case "utf8":
                        case "utf-8":
                            return i = e,
                                o = r,
                                D(M(t, this.length - i), this, i, o);
                        case "ascii":
                        case "latin1":
                        case "binary":
                            return s = e,
                                a = r,
                                D(function (t) {
                                    let e = [];
                                    for (let r = 0; r < t.length; ++r)
                                        e.push(255 & t.charCodeAt(r));
                                    return e
                                }(t), this, s, a);
                        case "base64":
                            return l = e,
                                u = r,
                                D(B(t), this, l, u);
                        case "ucs2":
                        case "ucs-2":
                        case "utf16le":
                        case "utf-16le":
                            return c = e,
                                h = r,
                                D(function (t, e) {
                                    let r, n;
                                    let i = [];
                                    for (let o = 0; o < t.length && !((e -= 2) < 0); ++o)
                                        n = (r = t.charCodeAt(o)) >> 8,
                                            i.push(r % 256),
                                            i.push(n);
                                    return i
                                }(t, this.length - c), this, c, h);
                        default:
                            if (d)
                                throw TypeError("Unknown encoding: " + n);
                            n = ("" + n).toLowerCase(),
                                d = !0
                    }
            }
            ,
            a.prototype.toJSON = function () {
                return {
                    type: "Buffer",
                    data: Array.prototype.slice.call(this._arr || this, 0)
                }
            }
            ,
            a.prototype.slice = function (t, e) {
                let r = this.length;
                t = ~~t,
                    e = void 0 === e ? r : ~~e,
                    t < 0 ? (t += r) < 0 && (t = 0) : t > r && (t = r),
                    e < 0 ? (e += r) < 0 && (e = 0) : e > r && (e = r),
                    e < t && (e = t);
                let n = this.subarray(t, e);
                return Object.setPrototypeOf(n, a.prototype),
                    n
            }
            ,
            a.prototype.readUintLE = a.prototype.readUIntLE = function (t, e, r) {
                t >>>= 0,
                    e >>>= 0,
                    r || w(t, e, this.length);
                let n = this[t]
                    , i = 1
                    , o = 0;
                for (; ++o < e && (i *= 256);)
                    n += this[t + o] * i;
                return n
            }
            ,
            a.prototype.readUintBE = a.prototype.readUIntBE = function (t, e, r) {
                t >>>= 0,
                    e >>>= 0,
                    r || w(t, e, this.length);
                let n = this[t + --e]
                    , i = 1;
                for (; e > 0 && (i *= 256);)
                    n += this[t + --e] * i;
                return n
            }
            ,
            a.prototype.readUint8 = a.prototype.readUInt8 = function (t, e) {
                return t >>>= 0,
                    e || w(t, 1, this.length),
                    this[t]
            }
            ,
            a.prototype.readUint16LE = a.prototype.readUInt16LE = function (t, e) {
                return t >>>= 0,
                    e || w(t, 2, this.length),
                    this[t] | this[t + 1] << 8
            }
            ,
            a.prototype.readUint16BE = a.prototype.readUInt16BE = function (t, e) {
                return t >>>= 0,
                    e || w(t, 2, this.length),
                    this[t] << 8 | this[t + 1]
            }
            ,
            a.prototype.readUint32LE = a.prototype.readUInt32LE = function (t, e) {
                return t >>>= 0,
                    e || w(t, 4, this.length),
                    (this[t] | this[t + 1] << 8 | this[t + 2] << 16) + 16777216 * this[t + 3]
            }
            ,
            a.prototype.readUint32BE = a.prototype.readUInt32BE = function (t, e) {
                return t >>>= 0,
                    e || w(t, 4, this.length),
                    16777216 * this[t] + (this[t + 1] << 16 | this[t + 2] << 8 | this[t + 3])
            }
            ,
            a.prototype.readBigUInt64LE = L(function (t) {
                R(t >>>= 0, "offset");
                let e = this[t]
                    , r = this[t + 7];
                (void 0 === e || void 0 === r) && I(t, this.length - 8);
                let n = e + 256 * this[++t] + 65536 * this[++t] + 16777216 * this[++t]
                    , i = this[++t] + 256 * this[++t] + 65536 * this[++t] + 16777216 * r;
                return BigInt(n) + (BigInt(i) << BigInt(32))
            }),
            a.prototype.readBigUInt64BE = L(function (t) {
                R(t >>>= 0, "offset");
                let e = this[t]
                    , r = this[t + 7];
                (void 0 === e || void 0 === r) && I(t, this.length - 8);
                let n = 16777216 * e + 65536 * this[++t] + 256 * this[++t] + this[++t]
                    , i = 16777216 * this[++t] + 65536 * this[++t] + 256 * this[++t] + r;
                return (BigInt(n) << BigInt(32)) + BigInt(i)
            }),
            a.prototype.readIntLE = function (t, e, r) {
                t >>>= 0,
                    e >>>= 0,
                    r || w(t, e, this.length);
                let n = this[t]
                    , i = 1
                    , o = 0;
                for (; ++o < e && (i *= 256);)
                    n += this[t + o] * i;
                return n >= (i *= 128) && (n -= Math.pow(2, 8 * e)),
                    n
            }
            ,
            a.prototype.readIntBE = function (t, e, r) {
                t >>>= 0,
                    e >>>= 0,
                    r || w(t, e, this.length);
                let n = e
                    , i = 1
                    , o = this[t + --n];
                for (; n > 0 && (i *= 256);)
                    o += this[t + --n] * i;
                return o >= (i *= 128) && (o -= Math.pow(2, 8 * e)),
                    o
            }
            ,
            a.prototype.readInt8 = function (t, e) {
                return (t >>>= 0,
                    e || w(t, 1, this.length),
                    128 & this[t]) ? -((255 - this[t] + 1) * 1) : this[t]
            }
            ,
            a.prototype.readInt16LE = function (t, e) {
                t >>>= 0,
                    e || w(t, 2, this.length);
                let r = this[t] | this[t + 1] << 8;
                return 32768 & r ? 4294901760 | r : r
            }
            ,
            a.prototype.readInt16BE = function (t, e) {
                t >>>= 0,
                    e || w(t, 2, this.length);
                let r = this[t + 1] | this[t] << 8;
                return 32768 & r ? 4294901760 | r : r
            }
            ,
            a.prototype.readInt32LE = function (t, e) {
                return t >>>= 0,
                    e || w(t, 4, this.length),
                    this[t] | this[t + 1] << 8 | this[t + 2] << 16 | this[t + 3] << 24
            }
            ,
            a.prototype.readInt32BE = function (t, e) {
                return t >>>= 0,
                    e || w(t, 4, this.length),
                    this[t] << 24 | this[t + 1] << 16 | this[t + 2] << 8 | this[t + 3]
            }
            ,
            a.prototype.readBigInt64LE = L(function (t) {
                R(t >>>= 0, "offset");
                let e = this[t]
                    , r = this[t + 7];
                return (void 0 === e || void 0 === r) && I(t, this.length - 8),
                    (BigInt(this[t + 4] + 256 * this[t + 5] + 65536 * this[t + 6] + (r << 24)) << BigInt(32)) + BigInt(e + 256 * this[++t] + 65536 * this[++t] + 16777216 * this[++t])
            }),
            a.prototype.readBigInt64BE = L(function (t) {
                R(t >>>= 0, "offset");
                let e = this[t]
                    , r = this[t + 7];
                return (void 0 === e || void 0 === r) && I(t, this.length - 8),
                    (BigInt((e << 24) + 65536 * this[++t] + 256 * this[++t] + this[++t]) << BigInt(32)) + BigInt(16777216 * this[++t] + 65536 * this[++t] + 256 * this[++t] + r)
            }),
            a.prototype.readFloatLE = function (t, e) {
                return t >>>= 0,
                    e || w(t, 4, this.length),
                    i.read(this, t, !0, 23, 4)
            }
            ,
            a.prototype.readFloatBE = function (t, e) {
                return t >>>= 0,
                    e || w(t, 4, this.length),
                    i.read(this, t, !1, 23, 4)
            }
            ,
            a.prototype.readDoubleLE = function (t, e) {
                return t >>>= 0,
                    e || w(t, 8, this.length),
                    i.read(this, t, !0, 52, 8)
            }
            ,
            a.prototype.readDoubleBE = function (t, e) {
                return t >>>= 0,
                    e || w(t, 8, this.length),
                    i.read(this, t, !1, 52, 8)
            }
            ,
            a.prototype.writeUintLE = a.prototype.writeUIntLE = function (t, e, r, n) {
                if (t = +t,
                    e >>>= 0,
                    r >>>= 0,
                    !n) {
                    let n = Math.pow(2, 8 * r) - 1;
                    E(this, t, e, r, n, 0)
                }
                let i = 1
                    , o = 0;
                for (this[e] = 255 & t; ++o < r && (i *= 256);)
                    this[e + o] = t / i & 255;
                return e + r
            }
            ,
            a.prototype.writeUintBE = a.prototype.writeUIntBE = function (t, e, r, n) {
                if (t = +t,
                    e >>>= 0,
                    r >>>= 0,
                    !n) {
                    let n = Math.pow(2, 8 * r) - 1;
                    E(this, t, e, r, n, 0)
                }
                let i = r - 1
                    , o = 1;
                for (this[e + i] = 255 & t; --i >= 0 && (o *= 256);)
                    this[e + i] = t / o & 255;
                return e + r
            }
            ,
            a.prototype.writeUint8 = a.prototype.writeUInt8 = function (t, e, r) {
                return t = +t,
                    e >>>= 0,
                    r || E(this, t, e, 1, 255, 0),
                    this[e] = 255 & t,
                    e + 1
            }
            ,
            a.prototype.writeUint16LE = a.prototype.writeUInt16LE = function (t, e, r) {
                return t = +t,
                    e >>>= 0,
                    r || E(this, t, e, 2, 65535, 0),
                    this[e] = 255 & t,
                    this[e + 1] = t >>> 8,
                    e + 2
            }
            ,
            a.prototype.writeUint16BE = a.prototype.writeUInt16BE = function (t, e, r) {
                return t = +t,
                    e >>>= 0,
                    r || E(this, t, e, 2, 65535, 0),
                    this[e] = t >>> 8,
                    this[e + 1] = 255 & t,
                    e + 2
            }
            ,
            a.prototype.writeUint32LE = a.prototype.writeUInt32LE = function (t, e, r) {
                return t = +t,
                    e >>>= 0,
                    r || E(this, t, e, 4, 4294967295, 0),
                    this[e + 3] = t >>> 24,
                    this[e + 2] = t >>> 16,
                    this[e + 1] = t >>> 8,
                    this[e] = 255 & t,
                    e + 4
            }
            ,
            a.prototype.writeUint32BE = a.prototype.writeUInt32BE = function (t, e, r) {
                return t = +t,
                    e >>>= 0,
                    r || E(this, t, e, 4, 4294967295, 0),
                    this[e] = t >>> 24,
                    this[e + 1] = t >>> 16,
                    this[e + 2] = t >>> 8,
                    this[e + 3] = 255 & t,
                    e + 4
            }
            ,
            a.prototype.writeBigUInt64LE = L(function (t, e = 0) {
                return A(this, t, e, BigInt(0), BigInt("0xffffffffffffffff"))
            }),
            a.prototype.writeBigUInt64BE = L(function (t, e = 0) {
                return _(this, t, e, BigInt(0), BigInt("0xffffffffffffffff"))
            }),
            a.prototype.writeIntLE = function (t, e, r, n) {
                if (t = +t,
                    e >>>= 0,
                    !n) {
                    let n = Math.pow(2, 8 * r - 1);
                    E(this, t, e, r, n - 1, -n)
                }
                let i = 0
                    , o = 1
                    , s = 0;
                for (this[e] = 255 & t; ++i < r && (o *= 256);)
                    t < 0 && 0 === s && 0 !== this[e + i - 1] && (s = 1),
                        this[e + i] = (t / o >> 0) - s & 255;
                return e + r
            }
            ,
            a.prototype.writeIntBE = function (t, e, r, n) {
                if (t = +t,
                    e >>>= 0,
                    !n) {
                    let n = Math.pow(2, 8 * r - 1);
                    E(this, t, e, r, n - 1, -n)
                }
                let i = r - 1
                    , o = 1
                    , s = 0;
                for (this[e + i] = 255 & t; --i >= 0 && (o *= 256);)
                    t < 0 && 0 === s && 0 !== this[e + i + 1] && (s = 1),
                        this[e + i] = (t / o >> 0) - s & 255;
                return e + r
            }
            ,
            a.prototype.writeInt8 = function (t, e, r) {
                return t = +t,
                    e >>>= 0,
                    r || E(this, t, e, 1, 127, -128),
                    t < 0 && (t = 255 + t + 1),
                    this[e] = 255 & t,
                    e + 1
            }
            ,
            a.prototype.writeInt16LE = function (t, e, r) {
                return t = +t,
                    e >>>= 0,
                    r || E(this, t, e, 2, 32767, -32768),
                    this[e] = 255 & t,
                    this[e + 1] = t >>> 8,
                    e + 2
            }
            ,
            a.prototype.writeInt16BE = function (t, e, r) {
                return t = +t,
                    e >>>= 0,
                    r || E(this, t, e, 2, 32767, -32768),
                    this[e] = t >>> 8,
                    this[e + 1] = 255 & t,
                    e + 2
            }
            ,
            a.prototype.writeInt32LE = function (t, e, r) {
                return t = +t,
                    e >>>= 0,
                    r || E(this, t, e, 4, 2147483647, -2147483648),
                    this[e] = 255 & t,
                    this[e + 1] = t >>> 8,
                    this[e + 2] = t >>> 16,
                    this[e + 3] = t >>> 24,
                    e + 4
            }
            ,
            a.prototype.writeInt32BE = function (t, e, r) {
                return t = +t,
                    e >>>= 0,
                    r || E(this, t, e, 4, 2147483647, -2147483648),
                    t < 0 && (t = 4294967295 + t + 1),
                    this[e] = t >>> 24,
                    this[e + 1] = t >>> 16,
                    this[e + 2] = t >>> 8,
                    this[e + 3] = 255 & t,
                    e + 4
            }
            ,
            a.prototype.writeBigInt64LE = L(function (t, e = 0) {
                return A(this, t, e, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"))
            }),
            a.prototype.writeBigInt64BE = L(function (t, e = 0) {
                return _(this, t, e, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"))
            }),
            a.prototype.writeFloatLE = function (t, e, r) {
                return k(this, t, e, !0, r)
            }
            ,
            a.prototype.writeFloatBE = function (t, e, r) {
                return k(this, t, e, !1, r)
            }
            ,
            a.prototype.writeDoubleLE = function (t, e, r) {
                return P(this, t, e, !0, r)
            }
            ,
            a.prototype.writeDoubleBE = function (t, e, r) {
                return P(this, t, e, !1, r)
            }
            ,
            a.prototype.copy = function (t, e, r, n) {
                if (!a.isBuffer(t))
                    throw TypeError("argument should be a Buffer");
                if (r || (r = 0),
                    n || 0 === n || (n = this.length),
                    e >= t.length && (e = t.length),
                    e || (e = 0),
                    n > 0 && n < r && (n = r),
                    n === r || 0 === t.length || 0 === this.length)
                    return 0;
                if (e < 0)
                    throw RangeError("targetStart out of bounds");
                if (r < 0 || r >= this.length)
                    throw RangeError("Index out of range");
                if (n < 0)
                    throw RangeError("sourceEnd out of bounds");
                n > this.length && (n = this.length),
                    t.length - e < n - r && (n = t.length - e + r);
                let i = n - r;
                return this === t && "function" == typeof Uint8Array.prototype.copyWithin ? this.copyWithin(e, r, n) : Uint8Array.prototype.set.call(t, this.subarray(r, n), e),
                    i
            }
            ,
            a.prototype.fill = function (t, e, r, n) {
                let i;
                if ("string" == typeof t) {
                    if ("string" == typeof e ? (n = e,
                        e = 0,
                        r = this.length) : "string" == typeof r && (n = r,
                            r = this.length),
                        void 0 !== n && "string" != typeof n)
                        throw TypeError("encoding must be a string");
                    if ("string" == typeof n && !a.isEncoding(n))
                        throw TypeError("Unknown encoding: " + n);
                    if (1 === t.length) {
                        let e = t.charCodeAt(0);
                        ("utf8" === n && e < 128 || "latin1" === n) && (t = e)
                    }
                } else
                    "number" == typeof t ? t &= 255 : "boolean" == typeof t && (t = Number(t));
                if (e < 0 || this.length < e || this.length < r)
                    throw RangeError("Out of range index");
                if (r <= e)
                    return this;
                if (e >>>= 0,
                    r = void 0 === r ? this.length : r >>> 0,
                    t || (t = 0),
                    "number" == typeof t)
                    for (i = e; i < r; ++i)
                        this[i] = t;
                else {
                    let o = a.isBuffer(t) ? t : a.from(t, n)
                        , s = o.length;
                    if (0 === s)
                        throw TypeError('The value "' + t + '" is invalid for argument "value"');
                    for (i = 0; i < r - e; ++i)
                        this[i + e] = o[i % s]
                }
                return this
            }
            ;
        let N = {};
        function C(t, e, r) {
            N[t] = class extends r {
                constructor() {
                    super(),
                        Object.defineProperty(this, "message", {
                            value: e.apply(this, arguments),
                            writable: !0,
                            configurable: !0
                        }),
                        this.name = `${this.name} [${t}]`,
                        this.stack,
                        delete this.name
                }
                get code() {
                    return t
                }
                set code(t) {
                    Object.defineProperty(this, "code", {
                        configurable: !0,
                        enumerable: !0,
                        value: t,
                        writable: !0
                    })
                }
                toString() {
                    return `${this.name} [${t}]: ${this.message}`
                }
            }
        }
        function T(t) {
            let e = ""
                , r = t.length
                , n = "-" === t[0] ? 1 : 0;
            for (; r >= n + 4; r -= 3)
                e = `_${t.slice(r - 3, r)}${e}`;
            return `${t.slice(0, r)}${e}`
        }
        function x(t, e, r, n, i, o) {
            if (t > r || t < e) {
                let n;
                let i = "bigint" == typeof e ? "n" : "";
                throw n = o > 3 ? 0 === e || e === BigInt(0) ? `>= 0${i} and < 2${i} ** ${(o + 1) * 8}${i}` : `>= -(2${i} ** ${(o + 1) * 8 - 1}${i}) and < 2 ** ${(o + 1) * 8 - 1}${i}` : `>= ${e}${i} and <= ${r}${i}`,
                new N.ERR_OUT_OF_RANGE("value", n, t)
            }
            R(i, "offset"),
                (void 0 === n[i] || void 0 === n[i + o]) && I(i, n.length - (o + 1))
        }
        function R(t, e) {
            if ("number" != typeof t)
                throw new N.ERR_INVALID_ARG_TYPE(e, "number", t)
        }
        function I(t, e, r) {
            if (Math.floor(t) !== t)
                throw R(t, r),
                new N.ERR_OUT_OF_RANGE(r || "offset", "an integer", t);
            if (e < 0)
                throw new N.ERR_BUFFER_OUT_OF_BOUNDS;
            throw new N.ERR_OUT_OF_RANGE(r || "offset", `>= ${r ? 1 : 0} and <= ${e}`, t)
        }
        C("ERR_BUFFER_OUT_OF_BOUNDS", function (t) {
            return t ? `${t} is outside of buffer bounds` : "Attempt to access memory outside buffer bounds"
        }, RangeError),
            C("ERR_INVALID_ARG_TYPE", function (t, e) {
                return `The "${t}" argument must be of type number. Received type ${typeof e}`
            }, TypeError),
            C("ERR_OUT_OF_RANGE", function (t, e, r) {
                let n = `The value of "${t}" is out of range.`
                    , i = r;
                return Number.isInteger(r) && Math.abs(r) > 4294967296 ? i = T(String(r)) : "bigint" == typeof r && (i = String(r),
                    (r > BigInt(2) ** BigInt(32) || r < -(BigInt(2) ** BigInt(32))) && (i = T(i)),
                    i += "n"),
                    n += ` It must be ${e}. Received ${i}`
            }, RangeError);
        let O = /[^+/0-9A-Za-z-_]/g;
        function M(t, e) {
            let r;
            e = e || 1 / 0;
            let n = t.length
                , i = null
                , o = [];
            for (let s = 0; s < n; ++s) {
                if ((r = t.charCodeAt(s)) > 55295 && r < 57344) {
                    if (!i) {
                        if (r > 56319 || s + 1 === n) {
                            (e -= 3) > -1 && o.push(239, 191, 189);
                            continue
                        }
                        i = r;
                        continue
                    }
                    if (r < 56320) {
                        (e -= 3) > -1 && o.push(239, 191, 189),
                            i = r;
                        continue
                    }
                    r = (i - 55296 << 10 | r - 56320) + 65536
                } else
                    i && (e -= 3) > -1 && o.push(239, 191, 189);
                if (i = null,
                    r < 128) {
                    if ((e -= 1) < 0)
                        break;
                    o.push(r)
                } else if (r < 2048) {
                    if ((e -= 2) < 0)
                        break;
                    o.push(r >> 6 | 192, 63 & r | 128)
                } else if (r < 65536) {
                    if ((e -= 3) < 0)
                        break;
                    o.push(r >> 12 | 224, r >> 6 & 63 | 128, 63 & r | 128)
                } else if (r < 1114112) {
                    if ((e -= 4) < 0)
                        break;
                    o.push(r >> 18 | 240, r >> 12 & 63 | 128, r >> 6 & 63 | 128, 63 & r | 128)
                } else
                    throw Error("Invalid code point")
            }
            return o
        }
        function B(t) {
            return n.toByteArray(function (t) {
                if ((t = (t = t.split("=")[0]).trim().replace(O, "")).length < 2)
                    return "";
                for (; t.length % 4 != 0;)
                    t += "=";
                return t
            }(t))
        }
        function D(t, e, r, n) {
            let i;
            for (i = 0; i < n && !(i + r >= e.length) && !(i >= t.length); ++i)
                e[i + r] = t[i];
            return i
        }
        function F(t, e) {
            return t instanceof e || null != t && null != t.constructor && null != t.constructor.name && t.constructor.name === e.name
        }
        let U = function () {
            let t = "0123456789abcdef"
                , e = Array(256);
            for (let r = 0; r < 16; ++r) {
                let n = 16 * r;
                for (let i = 0; i < 16; ++i)
                    e[n + i] = t[r] + t[i]
            }
            return e
        }();
        function L(t) {
            return "undefined" == typeof BigInt ? z : t
        }
        function z() {
            throw Error("BigInt not supported")
        }
    },
    25332: function (t, e, r) {
        "use strict";
        r.r(e),
            r.d(e, {
                BaseContract: function () {
                    return tB
                },
                BigNumber: function () {
                    return l.O$
                },
                Contract: function () {
                    return tD
                },
                ContractFactory: function () {
                    return tF
                },
                FixedNumber: function () {
                    return tU.xs
                },
                Signer: function () {
                    return tb.E
                },
                VoidSigner: function () {
                    return tb.b
                },
                Wallet: function () {
                    return eI
                },
                Wordlist: function () {
                    return tJ
                },
                constants: function () {
                    return n
                },
                errors: function () {
                    return c.jK
                },
                getDefaultProvider: function () {
                    return rP
                },
                logger: function () {
                    return rX
                },
                providers: function () {
                    return i
                },
                utils: function () {
                    return s
                },
                version: function () {
                    return r$
                },
                wordlists: function () {
                    return tX
                }
            });
        var n = {};
        r.r(n),
            r.d(n, {
                AddressZero: function () {
                    return eB.d
                },
                EtherSymbol: function () {
                    return eF
                },
                HashZero: function () {
                    return eD.R
                },
                MaxInt256: function () {
                    return R.PS
                },
                MaxUint256: function () {
                    return R.Bz
                },
                MinInt256: function () {
                    return R.$B
                },
                NegativeOne: function () {
                    return R.tL
                },
                One: function () {
                    return R.fh
                },
                Two: function () {
                    return R.Py
                },
                WeiPerEther: function () {
                    return R.Ce
                },
                Zero: function () {
                    return R._Y
                }
            });
        var i = {};
        r.r(i),
            r.d(i, {
                AlchemyProvider: function () {
                    return eJ
                },
                AlchemyWebSocketProvider: function () {
                    return eH
                },
                AnkrProvider: function () {
                    return eQ
                },
                BaseProvider: function () {
                    return eL.Zk
                },
                CloudflareProvider: function () {
                    return eX
                },
                EtherscanProvider: function () {
                    return e8
                },
                FallbackProvider: function () {
                    return rh
                },
                Formatter: function () {
                    return ez.Mb
                },
                InfuraProvider: function () {
                    return rd.J
                },
                InfuraWebSocketProvider: function () {
                    return rd.m
                },
                IpcProvider: function () {
                    return rf
                },
                JsonRpcBatchProvider: function () {
                    return rm
                },
                JsonRpcProvider: function () {
                    return rp.r
                },
                JsonRpcSigner: function () {
                    return rp.C
                },
                NodesmithProvider: function () {
                    return ry
                },
                PocketProvider: function () {
                    return rw
                },
                Provider: function () {
                    return tv.zt
                },
                Resolver: function () {
                    return eL.H2
                },
                StaticJsonRpcProvider: function () {
                    return eY.c
                },
                UrlJsonRpcProvider: function () {
                    return eY.l
                },
                Web3Provider: function () {
                    return rS
                },
                WebSocketProvider: function () {
                    return eG.q
                },
                getDefaultProvider: function () {
                    return rP
                },
                getNetwork: function () {
                    return eU.H
                },
                isCommunityResourcable: function () {
                    return ez.Ed
                },
                isCommunityResource: function () {
                    return ez.Gp
                },
                showThrottleMessage: function () {
                    return ez.vh
                }
            });
        var o = {};
        r.r(o),
            r.d(o, {
                decode: function () {
                    return rN.J
                },
                encode: function () {
                    return rN.c
                }
            });
        var s = {};
        r.r(s),
            r.d(s, {
                AbiCoder: function () {
                    return tl
                },
                ConstructorFragment: function () {
                    return $
                },
                ErrorFragment: function () {
                    return tt
                },
                EventFragment: function () {
                    return J
                },
                FormatTypes: function () {
                    return j
                },
                Fragment: function () {
                    return H
                },
                FunctionFragment: function () {
                    return X
                },
                HDNode: function () {
                    return t7
                },
                Indexed: function () {
                    return tp
                },
                Interface: function () {
                    return ty
                },
                LogDescription: function () {
                    return th
                },
                Logger: function () {
                    return c.Yd
                },
                ParamType: function () {
                    return K
                },
                RLP: function () {
                    return rD
                },
                SigningKey: function () {
                    return tK.Et
                },
                SupportedAlgorithm: function () {
                    return tq.p
                },
                TransactionDescription: function () {
                    return tf
                },
                TransactionTypes: function () {
                    return tw.em
                },
                UnicodeNormalizationForm: function () {
                    return O.Uj
                },
                Utf8ErrorFuncs: function () {
                    return O.te
                },
                Utf8ErrorReason: function () {
                    return O.Uw
                },
                _TypedDataEncoder: function () {
                    return tz.E
                },
                _fetchData: function () {
                    return eZ.MY
                },
                _toEscapedUtf8String: function () {
                    return O.U$
                },
                accessListify: function () {
                    return tw.z7
                },
                arrayify: function () {
                    return a.lE
                },
                base58: function () {
                    return tG.eU
                },
                base64: function () {
                    return o
                },
                checkProperties: function () {
                    return u.uj
                },
                checkResultErrors: function () {
                    return d
                },
                commify: function () {
                    return rQ.Fn
                },
                computeAddress: function () {
                    return tw.db
                },
                computeHmac: function () {
                    return tj.Gy
                },
                computePublicKey: function () {
                    return tK.VW
                },
                concat: function () {
                    return a.zo
                },
                deepCopy: function () {
                    return u.p$
                },
                defaultAbiCoder: function () {
                    return tu
                },
                defaultPath: function () {
                    return t8
                },
                defineReadOnly: function () {
                    return u.zG
                },
                dnsEncode: function () {
                    return rC.Kn
                },
                entropyToMnemonic: function () {
                    return ee
                },
                fetchJson: function () {
                    return eZ.rd
                },
                formatBytes32String: function () {
                    return rV
                },
                formatEther: function () {
                    return rQ.dF
                },
                formatUnits: function () {
                    return rQ.bM
                },
                getAccountPath: function () {
                    return en
                },
                getAddress: function () {
                    return y.Kn
                },
                getContractAddress: function () {
                    return y.CR
                },
                getCreate2Address: function () {
                    return y.hB
                },
                getIcapAddress: function () {
                    return y.vU
                },
                getJsonWalletAddress: function () {
                    return eT
                },
                getStatic: function () {
                    return u.tu
                },
                hashMessage: function () {
                    return tL
                },
                hexConcat: function () {
                    return a.xs
                },
                hexDataLength: function () {
                    return a.E1
                },
                hexDataSlice: function () {
                    return a.p3
                },
                hexStripZeros: function () {
                    return a.Ou
                },
                hexValue: function () {
                    return a.$P
                },
                hexZeroPad: function () {
                    return a.$m
                },
                hexlify: function () {
                    return a.Dv
                },
                id: function () {
                    return v.id
                },
                isAddress: function () {
                    return y.UJ
                },
                isBytes: function () {
                    return a._t
                },
                isBytesLike: function () {
                    return a.Zq
                },
                isHexString: function () {
                    return a.A7
                },
                isValidMnemonic: function () {
                    return er
                },
                isValidName: function () {
                    return rC.r1
                },
                joinSignature: function () {
                    return a.gV
                },
                keccak256: function () {
                    return b.w
                },
                mnemonicToEntropy: function () {
                    return et
                },
                mnemonicToSeed: function () {
                    return t9
                },
                namehash: function () {
                    return rC.VM
                },
                nameprep: function () {
                    return rJ
                },
                parseBytes32String: function () {
                    return rW
                },
                parseEther: function () {
                    return rQ.fi
                },
                parseTransaction: function () {
                    return tw.Qc
                },
                parseUnits: function () {
                    return rQ.vz
                },
                poll: function () {
                    return eZ.$l
                },
                randomBytes: function () {
                    return ea
                },
                recoverAddress: function () {
                    return tw.RJ
                },
                recoverPublicKey: function () {
                    return tK.LO
                },
                resolveProperties: function () {
                    return u.mE
                },
                ripemd160: function () {
                    return tj.bP
                },
                serializeTransaction: function () {
                    return tw.qC
                },
                sha256: function () {
                    return tj.JQ
                },
                sha512: function () {
                    return tj.o
                },
                shallowCopy: function () {
                    return u.DC
                },
                shuffled: function () {
                    return e7
                },
                solidityKeccak256: function () {
                    return rM
                },
                solidityPack: function () {
                    return rO
                },
                soliditySha256: function () {
                    return rB
                },
                splitSignature: function () {
                    return a.N
                },
                stripZeros: function () {
                    return a.G1
                },
                toUtf8Bytes: function () {
                    return O.Y0
                },
                toUtf8CodePoints: function () {
                    return O.XL
                },
                toUtf8String: function () {
                    return O.ZN
                },
                verifyMessage: function () {
                    return eO
                },
                verifyTypedData: function () {
                    return eM
                },
                zeroPad: function () {
                    return a.Bu
                }
            });
        var a = r(57273)
            , l = r(92598)
            , u = r(17213)
            , c = r(36288);
        let h = "abi/5.7.0"
            , f = new c.Yd(h);
        function d(t) {
            let e = []
                , r = function (t, n) {
                    if (Array.isArray(n))
                        for (let i in n) {
                            let o = t.slice();
                            o.push(i);
                            try {
                                r(o, n[i])
                            } catch (t) {
                                e.push({
                                    path: o,
                                    error: t
                                })
                            }
                        }
                };
            return r([], t),
                e
        }
        class p {
            constructor(t, e, r, n) {
                this.name = t,
                    this.type = e,
                    this.localName = r,
                    this.dynamic = n
            }
            _throwError(t, e) {
                f.throwArgumentError(t, this.localName, e)
            }
        }
        class m {
            constructor(t) {
                (0,
                    u.zG)(this, "wordSize", t || 32),
                    this._data = [],
                    this._dataLength = 0,
                    this._padding = new Uint8Array(t)
            }
            get data() {
                return (0,
                    a.xs)(this._data)
            }
            get length() {
                return this._dataLength
            }
            _writeData(t) {
                return this._data.push(t),
                    this._dataLength += t.length,
                    t.length
            }
            appendWriter(t) {
                return this._writeData((0,
                    a.zo)(t._data))
            }
            writeBytes(t) {
                let e = (0,
                    a.lE)(t)
                    , r = e.length % this.wordSize;
                return r && (e = (0,
                    a.zo)([e, this._padding.slice(r)])),
                    this._writeData(e)
            }
            _getValue(t) {
                let e = (0,
                    a.lE)(l.O$.from(t));
                return e.length > this.wordSize && f.throwError("value out-of-bounds", c.Yd.errors.BUFFER_OVERRUN, {
                    length: this.wordSize,
                    offset: e.length
                }),
                    e.length % this.wordSize && (e = (0,
                        a.zo)([this._padding.slice(e.length % this.wordSize), e])),
                    e
            }
            writeValue(t) {
                return this._writeData(this._getValue(t))
            }
            writeUpdatableValue() {
                let t = this._data.length;
                return this._data.push(this._padding),
                    this._dataLength += this.wordSize,
                    e => {
                        this._data[t] = this._getValue(e)
                    }
            }
        }
        class g {
            constructor(t, e, r, n) {
                (0,
                    u.zG)(this, "_data", (0,
                        a.lE)(t)),
                    (0,
                        u.zG)(this, "wordSize", e || 32),
                    (0,
                        u.zG)(this, "_coerceFunc", r),
                    (0,
                        u.zG)(this, "allowLoose", n),
                    this._offset = 0
            }
            get data() {
                return (0,
                    a.Dv)(this._data)
            }
            get consumed() {
                return this._offset
            }
            static coerce(t, e) {
                let r = t.match("^u?int([0-9]+)$");
                return r && 48 >= parseInt(r[1]) && (e = e.toNumber()),
                    e
            }
            coerce(t, e) {
                return this._coerceFunc ? this._coerceFunc(t, e) : g.coerce(t, e)
            }
            _peekBytes(t, e, r) {
                let n = Math.ceil(e / this.wordSize) * this.wordSize;
                return this._offset + n > this._data.length && (this.allowLoose && r && this._offset + e <= this._data.length ? n = e : f.throwError("data out-of-bounds", c.Yd.errors.BUFFER_OVERRUN, {
                    length: this._data.length,
                    offset: this._offset + n
                })),
                    this._data.slice(this._offset, this._offset + n)
            }
            subReader(t) {
                return new g(this._data.slice(this._offset + t), this.wordSize, this._coerceFunc, this.allowLoose)
            }
            readBytes(t, e) {
                let r = this._peekBytes(0, t, !!e);
                return this._offset += r.length,
                    r.slice(0, t)
            }
            readValue() {
                return l.O$.from(this.readBytes(this.wordSize))
            }
        }
        var y = r(18994)
            , v = r(36339)
            , b = r(14184);
        class w extends p {
            constructor(t) {
                super("address", "address", t, !1)
            }
            defaultValue() {
                return "0x0000000000000000000000000000000000000000"
            }
            encode(t, e) {
                try {
                    e = (0,
                        y.Kn)(e)
                } catch (t) {
                    this._throwError(t.message, e)
                }
                return t.writeValue(e)
            }
            decode(t) {
                return (0,
                    y.Kn)((0,
                        a.$m)(t.readValue().toHexString(), 20))
            }
        }
        class E extends p {
            constructor(t) {
                super(t.name, t.type, void 0, t.dynamic),
                    this.coder = t
            }
            defaultValue() {
                return this.coder.defaultValue()
            }
            encode(t, e) {
                return this.coder.encode(t, e)
            }
            decode(t) {
                return this.coder.decode(t)
            }
        }
        let A = new c.Yd(h);
        function _(t, e, r) {
            let n = null;
            if (Array.isArray(r))
                n = r;
            else if (r && "object" == typeof r) {
                let t = {};
                n = e.map(e => {
                    let n = e.localName;
                    return n || A.throwError("cannot encode object for signature with missing names", c.Yd.errors.INVALID_ARGUMENT, {
                        argument: "values",
                        coder: e,
                        value: r
                    }),
                        t[n] && A.throwError("cannot encode object for signature with duplicate names", c.Yd.errors.INVALID_ARGUMENT, {
                            argument: "values",
                            coder: e,
                            value: r
                        }),
                        t[n] = !0,
                        r[n]
                }
                )
            } else
                A.throwArgumentError("invalid tuple value", "tuple", r);
            e.length !== n.length && A.throwArgumentError("types/value length mismatch", "tuple", r);
            let i = new m(t.wordSize)
                , o = new m(t.wordSize)
                , s = [];
            return e.forEach((t, e) => {
                let r = n[e];
                if (t.dynamic) {
                    let e = o.length;
                    t.encode(o, r);
                    let n = i.writeUpdatableValue();
                    s.push(t => {
                        n(t + e)
                    }
                    )
                } else
                    t.encode(i, r)
            }
            ),
                s.forEach(t => {
                    t(i.length)
                }
                ),
                t.appendWriter(i) + t.appendWriter(o)
        }
        function S(t, e) {
            let r = []
                , n = t.subReader(0);
            e.forEach(e => {
                let i = null;
                if (e.dynamic) {
                    let r = t.readValue()
                        , o = n.subReader(r.toNumber());
                    try {
                        i = e.decode(o)
                    } catch (t) {
                        if (t.code === c.Yd.errors.BUFFER_OVERRUN)
                            throw t;
                        (i = t).baseType = e.name,
                            i.name = e.localName,
                            i.type = e.type
                    }
                } else
                    try {
                        i = e.decode(t)
                    } catch (t) {
                        if (t.code === c.Yd.errors.BUFFER_OVERRUN)
                            throw t;
                        (i = t).baseType = e.name,
                            i.name = e.localName,
                            i.type = e.type
                    }
                void 0 != i && r.push(i)
            }
            );
            let i = e.reduce((t, e) => {
                let r = e.localName;
                return r && (t[r] || (t[r] = 0),
                    t[r]++),
                    t
            }
                , {});
            e.forEach((t, e) => {
                let n = t.localName;
                if (!n || 1 !== i[n] || ("length" === n && (n = "_length"),
                    null != r[n]))
                    return;
                let o = r[e];
                o instanceof Error ? Object.defineProperty(r, n, {
                    enumerable: !0,
                    get: () => {
                        throw o
                    }
                }) : r[n] = o
            }
            );
            for (let t = 0; t < r.length; t++) {
                let e = r[t];
                e instanceof Error && Object.defineProperty(r, t, {
                    enumerable: !0,
                    get: () => {
                        throw e
                    }
                })
            }
            return Object.freeze(r)
        }
        class k extends p {
            constructor(t, e, r) {
                super("array", t.type + "[" + (e >= 0 ? e : "") + "]", r, -1 === e || t.dynamic),
                    this.coder = t,
                    this.length = e
            }
            defaultValue() {
                let t = this.coder.defaultValue()
                    , e = [];
                for (let r = 0; r < this.length; r++)
                    e.push(t);
                return e
            }
            encode(t, e) {
                Array.isArray(e) || this._throwError("expected array value", e);
                let r = this.length;
                -1 === r && (r = e.length,
                    t.writeValue(e.length)),
                    A.checkArgumentCount(e.length, r, "coder array" + (this.localName ? " " + this.localName : ""));
                let n = [];
                for (let t = 0; t < e.length; t++)
                    n.push(this.coder);
                return _(t, n, e)
            }
            decode(t) {
                let e = this.length;
                -1 === e && 32 * (e = t.readValue().toNumber()) > t._data.length && A.throwError("insufficient data length", c.Yd.errors.BUFFER_OVERRUN, {
                    length: t._data.length,
                    count: e
                });
                let r = [];
                for (let t = 0; t < e; t++)
                    r.push(new E(this.coder));
                return t.coerce(this.name, S(t, r))
            }
        }
        class P extends p {
            constructor(t) {
                super("bool", "bool", t, !1)
            }
            defaultValue() {
                return !1
            }
            encode(t, e) {
                return t.writeValue(e ? 1 : 0)
            }
            decode(t) {
                return t.coerce(this.type, !t.readValue().isZero())
            }
        }
        class N extends p {
            constructor(t, e) {
                super(t, t, e, !0)
            }
            defaultValue() {
                return "0x"
            }
            encode(t, e) {
                return e = (0,
                    a.lE)(e),
                    t.writeValue(e.length) + t.writeBytes(e)
            }
            decode(t) {
                return t.readBytes(t.readValue().toNumber(), !0)
            }
        }
        class C extends N {
            constructor(t) {
                super("bytes", t)
            }
            decode(t) {
                return t.coerce(this.name, (0,
                    a.Dv)(super.decode(t)))
            }
        }
        class T extends p {
            constructor(t, e) {
                let r = "bytes" + String(t);
                super(r, r, e, !1),
                    this.size = t
            }
            defaultValue() {
                return "0x0000000000000000000000000000000000000000000000000000000000000000".substring(0, 2 + 2 * this.size)
            }
            encode(t, e) {
                let r = (0,
                    a.lE)(e);
                return r.length !== this.size && this._throwError("incorrect data length", e),
                    t.writeBytes(r)
            }
            decode(t) {
                return t.coerce(this.name, (0,
                    a.Dv)(t.readBytes(this.size)))
            }
        }
        class x extends p {
            constructor(t) {
                super("null", "", t, !1)
            }
            defaultValue() {
                return null
            }
            encode(t, e) {
                return null != e && this._throwError("not null", e),
                    t.writeBytes([])
            }
            decode(t) {
                return t.readBytes(0),
                    t.coerce(this.name, null)
            }
        }
        var R = r(53690);
        class I extends p {
            constructor(t, e, r) {
                let n = (e ? "int" : "uint") + 8 * t;
                super(n, n, r, !1),
                    this.size = t,
                    this.signed = e
            }
            defaultValue() {
                return 0
            }
            encode(t, e) {
                let r = l.O$.from(e)
                    , n = R.Bz.mask(8 * t.wordSize);
                if (this.signed) {
                    let t = n.mask(8 * this.size - 1);
                    (r.gt(t) || r.lt(t.add(R.fh).mul(R.tL))) && this._throwError("value out-of-bounds", e)
                } else
                    (r.lt(R._Y) || r.gt(n.mask(8 * this.size))) && this._throwError("value out-of-bounds", e);
                return r = r.toTwos(8 * this.size).mask(8 * this.size),
                    this.signed && (r = r.fromTwos(8 * this.size).toTwos(8 * t.wordSize)),
                    t.writeValue(r)
            }
            decode(t) {
                let e = t.readValue().mask(8 * this.size);
                return this.signed && (e = e.fromTwos(8 * this.size)),
                    t.coerce(this.name, e)
            }
        }
        var O = r(58337);
        class M extends N {
            constructor(t) {
                super("string", t)
            }
            defaultValue() {
                return ""
            }
            encode(t, e) {
                return super.encode(t, (0,
                    O.Y0)(e))
            }
            decode(t) {
                return (0,
                    O.ZN)(super.decode(t))
            }
        }
        class B extends p {
            constructor(t, e) {
                let r = !1
                    , n = [];
                t.forEach(t => {
                    t.dynamic && (r = !0),
                        n.push(t.type)
                }
                ),
                    super("tuple", "tuple(" + n.join(",") + ")", e, r),
                    this.coders = t
            }
            defaultValue() {
                let t = [];
                this.coders.forEach(e => {
                    t.push(e.defaultValue())
                }
                );
                let e = this.coders.reduce((t, e) => {
                    let r = e.localName;
                    return r && (t[r] || (t[r] = 0),
                        t[r]++),
                        t
                }
                    , {});
                return this.coders.forEach((r, n) => {
                    let i = r.localName;
                    i && 1 === e[i] && ("length" === i && (i = "_length"),
                        null == t[i] && (t[i] = t[n]))
                }
                ),
                    Object.freeze(t)
            }
            encode(t, e) {
                return _(t, this.coders, e)
            }
            decode(t) {
                return t.coerce(this.name, S(t, this.coders))
            }
        }
        let D = new c.Yd(h)
            , F = {}
            , U = {
                calldata: !0,
                memory: !0,
                storage: !0
            }
            , L = {
                calldata: !0,
                memory: !0
            };
        function z(t, e) {
            if ("bytes" === t || "string" === t) {
                if (U[e])
                    return !0
            } else if ("address" === t) {
                if ("payable" === e)
                    return !0
            } else if ((t.indexOf("[") >= 0 || "tuple" === t) && L[e])
                return !0;
            return (U[e] || "payable" === e) && D.throwArgumentError("invalid modifier", "name", e),
                !1
        }
        function G(t, e) {
            for (let r in e)
                (0,
                    u.zG)(t, r, e[r])
        }
        let j = Object.freeze({
            sighash: "sighash",
            minimal: "minimal",
            full: "full",
            json: "json"
        })
            , Y = new RegExp(/^(.*)\[([0-9]*)\]$/);
        class K {
            constructor(t, e) {
                t !== F && D.throwError("use fromString", c.Yd.errors.UNSUPPORTED_OPERATION, {
                    operation: "new ParamType()"
                }),
                    G(this, e);
                let r = this.type.match(Y);
                r ? G(this, {
                    arrayLength: parseInt(r[2] || "-1"),
                    arrayChildren: K.fromObject({
                        type: r[1],
                        components: this.components
                    }),
                    baseType: "array"
                }) : G(this, {
                    arrayLength: null,
                    arrayChildren: null,
                    baseType: null != this.components ? "tuple" : this.type
                }),
                    this._isParamType = !0,
                    Object.freeze(this)
            }
            format(t) {
                if (t || (t = j.sighash),
                    j[t] || D.throwArgumentError("invalid format type", "format", t),
                    t === j.json) {
                    let e = {
                        type: "tuple" === this.baseType ? "tuple" : this.type,
                        name: this.name || void 0
                    };
                    return "boolean" == typeof this.indexed && (e.indexed = this.indexed),
                        this.components && (e.components = this.components.map(e => JSON.parse(e.format(t)))),
                        JSON.stringify(e)
                }
                let e = "";
                return "array" === this.baseType ? e += this.arrayChildren.format(t) + "[" + (this.arrayLength < 0 ? "" : String(this.arrayLength)) + "]" : "tuple" === this.baseType ? (t !== j.sighash && (e += this.type),
                    e += "(" + this.components.map(e => e.format(t)).join(t === j.full ? ", " : ",") + ")") : e += this.type,
                    t !== j.sighash && (!0 === this.indexed && (e += " indexed"),
                        t === j.full && this.name && (e += " " + this.name)),
                    e
            }
            static from(t, e) {
                return "string" == typeof t ? K.fromString(t, e) : K.fromObject(t)
            }
            static fromObject(t) {
                return K.isParamType(t) ? t : new K(F, {
                    name: t.name || null,
                    type: te(t.type),
                    indexed: null == t.indexed ? null : !!t.indexed,
                    components: t.components ? t.components.map(K.fromObject) : null
                })
            }
            static fromString(t, e) {
                var r;
                return r = function (t, e) {
                    let r = t;
                    function n(e) {
                        D.throwArgumentError(`unexpected character at position ${e}`, "param", t)
                    }
                    function i(t) {
                        let r = {
                            type: "",
                            name: "",
                            parent: t,
                            state: {
                                allowType: !0
                            }
                        };
                        return e && (r.indexed = !1),
                            r
                    }
                    t = t.replace(/\s/g, " ");
                    let o = {
                        type: "",
                        name: "",
                        state: {
                            allowType: !0
                        }
                    }
                        , s = o;
                    for (let r = 0; r < t.length; r++) {
                        let o = t[r];
                        switch (o) {
                            case "(":
                                s.state.allowType && "" === s.type ? s.type = "tuple" : s.state.allowParams || n(r),
                                    s.state.allowType = !1,
                                    s.type = te(s.type),
                                    s.components = [i(s)],
                                    s = s.components[0];
                                break;
                            case ")":
                                delete s.state,
                                    "indexed" === s.name && (e || n(r),
                                        s.indexed = !0,
                                        s.name = ""),
                                    z(s.type, s.name) && (s.name = ""),
                                    s.type = te(s.type);
                                let a = s;
                                (s = s.parent) || n(r),
                                    delete a.parent,
                                    s.state.allowParams = !1,
                                    s.state.allowName = !0,
                                    s.state.allowArray = !0;
                                break;
                            case ",":
                                delete s.state,
                                    "indexed" === s.name && (e || n(r),
                                        s.indexed = !0,
                                        s.name = ""),
                                    z(s.type, s.name) && (s.name = ""),
                                    s.type = te(s.type);
                                let l = i(s.parent);
                                s.parent.components.push(l),
                                    delete s.parent,
                                    s = l;
                                break;
                            case " ":
                                s.state.allowType && "" !== s.type && (s.type = te(s.type),
                                    delete s.state.allowType,
                                    s.state.allowName = !0,
                                    s.state.allowParams = !0),
                                    s.state.allowName && "" !== s.name && ("indexed" === s.name ? (e || n(r),
                                        s.indexed && n(r),
                                        s.indexed = !0,
                                        s.name = "") : z(s.type, s.name) ? s.name = "" : s.state.allowName = !1);
                                break;
                            case "[":
                                s.state.allowArray || n(r),
                                    s.type += o,
                                    s.state.allowArray = !1,
                                    s.state.allowName = !1,
                                    s.state.readArray = !0;
                                break;
                            case "]":
                                s.state.readArray || n(r),
                                    s.type += o,
                                    s.state.readArray = !1,
                                    s.state.allowArray = !0,
                                    s.state.allowName = !0;
                                break;
                            default:
                                s.state.allowType ? (s.type += o,
                                    s.state.allowParams = !0,
                                    s.state.allowArray = !0) : s.state.allowName ? (s.name += o,
                                        delete s.state.allowArray) : s.state.readArray ? s.type += o : n(r)
                        }
                    }
                    return s.parent && D.throwArgumentError("unexpected eof", "param", t),
                        delete o.state,
                        "indexed" === s.name ? (e || n(r.length - 7),
                            s.indexed && n(r.length - 7),
                            s.indexed = !0,
                            s.name = "") : z(s.type, s.name) && (s.name = ""),
                        o.type = te(o.type),
                        o
                }(t, !!e),
                    K.fromObject({
                        name: r.name,
                        type: r.type,
                        indexed: r.indexed,
                        components: r.components
                    })
            }
            static isParamType(t) {
                return !!(null != t && t._isParamType)
            }
        }
        function q(t, e) {
            return (function (t) {
                t = t.trim();
                let e = []
                    , r = ""
                    , n = 0;
                for (let i = 0; i < t.length; i++) {
                    let o = t[i];
                    "," === o && 0 === n ? (e.push(r),
                        r = "") : (r += o,
                            "(" === o ? n++ : ")" === o && -1 == --n && D.throwArgumentError("unbalanced parenthesis", "value", t))
                }
                return r && e.push(r),
                    e
            }
            )(t).map(t => K.fromString(t, e))
        }
        class H {
            constructor(t, e) {
                t !== F && D.throwError("use a static from method", c.Yd.errors.UNSUPPORTED_OPERATION, {
                    operation: "new Fragment()"
                }),
                    G(this, e),
                    this._isFragment = !0,
                    Object.freeze(this)
            }
            static from(t) {
                return H.isFragment(t) ? t : "string" == typeof t ? H.fromString(t) : H.fromObject(t)
            }
            static fromObject(t) {
                if (H.isFragment(t))
                    return t;
                switch (t.type) {
                    case "function":
                        return X.fromObject(t);
                    case "event":
                        return J.fromObject(t);
                    case "constructor":
                        return $.fromObject(t);
                    case "error":
                        return tt.fromObject(t);
                    case "fallback":
                    case "receive":
                        return null
                }
                return D.throwArgumentError("invalid fragment object", "value", t)
            }
            static fromString(t) {
                return "event" === (t = (t = (t = t.replace(/\s/g, " ")).replace(/\(/g, " (").replace(/\)/g, ") ").replace(/\s+/g, " ")).trim()).split(" ")[0] ? J.fromString(t.substring(5).trim()) : "function" === t.split(" ")[0] ? X.fromString(t.substring(8).trim()) : "constructor" === t.split("(")[0].trim() ? $.fromString(t.trim()) : "error" === t.split(" ")[0] ? tt.fromString(t.substring(5).trim()) : D.throwArgumentError("unsupported fragment", "value", t)
            }
            static isFragment(t) {
                return !!(t && t._isFragment)
            }
        }
        class J extends H {
            format(t) {
                if (t || (t = j.sighash),
                    j[t] || D.throwArgumentError("invalid format type", "format", t),
                    t === j.json)
                    return JSON.stringify({
                        type: "event",
                        anonymous: this.anonymous,
                        name: this.name,
                        inputs: this.inputs.map(e => JSON.parse(e.format(t)))
                    });
                let e = "";
                return t !== j.sighash && (e += "event "),
                    e += this.name + "(" + this.inputs.map(e => e.format(t)).join(t === j.full ? ", " : ",") + ") ",
                    t !== j.sighash && this.anonymous && (e += "anonymous "),
                    e.trim()
            }
            static from(t) {
                return "string" == typeof t ? J.fromString(t) : J.fromObject(t)
            }
            static fromObject(t) {
                return J.isEventFragment(t) ? t : ("event" !== t.type && D.throwArgumentError("invalid event object", "value", t),
                    new J(F, {
                        name: tn(t.name),
                        anonymous: t.anonymous,
                        inputs: t.inputs ? t.inputs.map(K.fromObject) : [],
                        type: "event"
                    }))
            }
            static fromString(t) {
                let e = t.match(ti);
                e || D.throwArgumentError("invalid event string", "value", t);
                let r = !1;
                return e[3].split(" ").forEach(t => {
                    switch (t.trim()) {
                        case "anonymous":
                            r = !0;
                            break;
                        case "":
                            break;
                        default:
                            D.warn("unknown modifier: " + t)
                    }
                }
                ),
                    J.fromObject({
                        name: e[1].trim(),
                        anonymous: r,
                        inputs: q(e[2], !0),
                        type: "event"
                    })
            }
            static isEventFragment(t) {
                return t && t._isFragment && "event" === t.type
            }
        }
        function V(t, e) {
            e.gas = null;
            let r = t.split("@");
            return 1 !== r.length ? (r.length > 2 && D.throwArgumentError("invalid human-readable ABI signature", "value", t),
                r[1].match(/^[0-9]+$/) || D.throwArgumentError("invalid human-readable ABI signature gas", "value", t),
                e.gas = l.O$.from(r[1]),
                r[0]) : t
        }
        function W(t, e) {
            e.constant = !1,
                e.payable = !1,
                e.stateMutability = "nonpayable",
                t.split(" ").forEach(t => {
                    switch (t.trim()) {
                        case "constant":
                            e.constant = !0;
                            break;
                        case "payable":
                            e.payable = !0,
                                e.stateMutability = "payable";
                            break;
                        case "nonpayable":
                            e.payable = !1,
                                e.stateMutability = "nonpayable";
                            break;
                        case "pure":
                            e.constant = !0,
                                e.stateMutability = "pure";
                            break;
                        case "view":
                            e.constant = !0,
                                e.stateMutability = "view";
                            break;
                        case "external":
                        case "public":
                        case "":
                            break;
                        default:
                            console.log("unknown modifier: " + t)
                    }
                }
                )
        }
        function Q(t) {
            let e = {
                constant: !1,
                payable: !0,
                stateMutability: "payable"
            };
            return null != t.stateMutability ? (e.stateMutability = t.stateMutability,
                e.constant = "view" === e.stateMutability || "pure" === e.stateMutability,
                null != t.constant && !!t.constant !== e.constant && D.throwArgumentError("cannot have constant function with mutability " + e.stateMutability, "value", t),
                e.payable = "payable" === e.stateMutability,
                null != t.payable && !!t.payable !== e.payable && D.throwArgumentError("cannot have payable function with mutability " + e.stateMutability, "value", t)) : null != t.payable ? (e.payable = !!t.payable,
                    null != t.constant || e.payable || "constructor" === t.type || D.throwArgumentError("unable to determine stateMutability", "value", t),
                    e.constant = !!t.constant,
                    e.constant ? e.stateMutability = "view" : e.stateMutability = e.payable ? "payable" : "nonpayable",
                    e.payable && e.constant && D.throwArgumentError("cannot have constant payable function", "value", t)) : null != t.constant ? (e.constant = !!t.constant,
                        e.payable = !e.constant,
                        e.stateMutability = e.constant ? "view" : "payable") : "constructor" !== t.type && D.throwArgumentError("unable to determine stateMutability", "value", t),
                e
        }
        class $ extends H {
            format(t) {
                if (t || (t = j.sighash),
                    j[t] || D.throwArgumentError("invalid format type", "format", t),
                    t === j.json)
                    return JSON.stringify({
                        type: "constructor",
                        stateMutability: "nonpayable" !== this.stateMutability ? this.stateMutability : void 0,
                        payable: this.payable,
                        gas: this.gas ? this.gas.toNumber() : void 0,
                        inputs: this.inputs.map(e => JSON.parse(e.format(t)))
                    });
                t === j.sighash && D.throwError("cannot format a constructor for sighash", c.Yd.errors.UNSUPPORTED_OPERATION, {
                    operation: "format(sighash)"
                });
                let e = "constructor(" + this.inputs.map(e => e.format(t)).join(t === j.full ? ", " : ",") + ") ";
                return this.stateMutability && "nonpayable" !== this.stateMutability && (e += this.stateMutability + " "),
                    e.trim()
            }
            static from(t) {
                return "string" == typeof t ? $.fromString(t) : $.fromObject(t)
            }
            static fromObject(t) {
                if ($.isConstructorFragment(t))
                    return t;
                "constructor" !== t.type && D.throwArgumentError("invalid constructor object", "value", t);
                let e = Q(t);
                return e.constant && D.throwArgumentError("constructor cannot be constant", "value", t),
                    new $(F, {
                        name: null,
                        type: t.type,
                        inputs: t.inputs ? t.inputs.map(K.fromObject) : [],
                        payable: e.payable,
                        stateMutability: e.stateMutability,
                        gas: t.gas ? l.O$.from(t.gas) : null
                    })
            }
            static fromString(t) {
                let e = {
                    type: "constructor"
                }
                    , r = (t = V(t, e)).match(ti);
                return r && "constructor" === r[1].trim() || D.throwArgumentError("invalid constructor string", "value", t),
                    e.inputs = q(r[2].trim(), !1),
                    W(r[3].trim(), e),
                    $.fromObject(e)
            }
            static isConstructorFragment(t) {
                return t && t._isFragment && "constructor" === t.type
            }
        }
        class X extends $ {
            format(t) {
                if (t || (t = j.sighash),
                    j[t] || D.throwArgumentError("invalid format type", "format", t),
                    t === j.json)
                    return JSON.stringify({
                        type: "function",
                        name: this.name,
                        constant: this.constant,
                        stateMutability: "nonpayable" !== this.stateMutability ? this.stateMutability : void 0,
                        payable: this.payable,
                        gas: this.gas ? this.gas.toNumber() : void 0,
                        inputs: this.inputs.map(e => JSON.parse(e.format(t))),
                        outputs: this.outputs.map(e => JSON.parse(e.format(t)))
                    });
                let e = "";
                return t !== j.sighash && (e += "function "),
                    e += this.name + "(" + this.inputs.map(e => e.format(t)).join(t === j.full ? ", " : ",") + ") ",
                    t !== j.sighash && (this.stateMutability ? "nonpayable" !== this.stateMutability && (e += this.stateMutability + " ") : this.constant && (e += "view "),
                        this.outputs && this.outputs.length && (e += "returns (" + this.outputs.map(e => e.format(t)).join(", ") + ") "),
                        null != this.gas && (e += "@" + this.gas.toString() + " ")),
                    e.trim()
            }
            static from(t) {
                return "string" == typeof t ? X.fromString(t) : X.fromObject(t)
            }
            static fromObject(t) {
                if (X.isFunctionFragment(t))
                    return t;
                "function" !== t.type && D.throwArgumentError("invalid function object", "value", t);
                let e = Q(t);
                return new X(F, {
                    type: t.type,
                    name: tn(t.name),
                    constant: e.constant,
                    inputs: t.inputs ? t.inputs.map(K.fromObject) : [],
                    outputs: t.outputs ? t.outputs.map(K.fromObject) : [],
                    payable: e.payable,
                    stateMutability: e.stateMutability,
                    gas: t.gas ? l.O$.from(t.gas) : null
                })
            }
            static fromString(t) {
                let e = {
                    type: "function"
                }
                    , r = (t = V(t, e)).split(" returns ");
                r.length > 2 && D.throwArgumentError("invalid function string", "value", t);
                let n = r[0].match(ti);
                if (n || D.throwArgumentError("invalid function signature", "value", t),
                    e.name = n[1].trim(),
                    e.name && tn(e.name),
                    e.inputs = q(n[2], !1),
                    W(n[3].trim(), e),
                    r.length > 1) {
                    let n = r[1].match(ti);
                    ("" != n[1].trim() || "" != n[3].trim()) && D.throwArgumentError("unexpected tokens", "value", t),
                        e.outputs = q(n[2], !1)
                } else
                    e.outputs = [];
                return X.fromObject(e)
            }
            static isFunctionFragment(t) {
                return t && t._isFragment && "function" === t.type
            }
        }
        function Z(t) {
            let e = t.format();
            return ("Error(string)" === e || "Panic(uint256)" === e) && D.throwArgumentError(`cannot specify user defined ${e} error`, "fragment", t),
                t
        }
        class tt extends H {
            format(t) {
                if (t || (t = j.sighash),
                    j[t] || D.throwArgumentError("invalid format type", "format", t),
                    t === j.json)
                    return JSON.stringify({
                        type: "error",
                        name: this.name,
                        inputs: this.inputs.map(e => JSON.parse(e.format(t)))
                    });
                let e = "";
                return t !== j.sighash && (e += "error "),
                    (e += this.name + "(" + this.inputs.map(e => e.format(t)).join(t === j.full ? ", " : ",") + ") ").trim()
            }
            static from(t) {
                return "string" == typeof t ? tt.fromString(t) : tt.fromObject(t)
            }
            static fromObject(t) {
                return tt.isErrorFragment(t) ? t : ("error" !== t.type && D.throwArgumentError("invalid error object", "value", t),
                    Z(new tt(F, {
                        type: t.type,
                        name: tn(t.name),
                        inputs: t.inputs ? t.inputs.map(K.fromObject) : []
                    })))
            }
            static fromString(t) {
                let e = {
                    type: "error"
                }
                    , r = t.match(ti);
                return r || D.throwArgumentError("invalid error signature", "value", t),
                    e.name = r[1].trim(),
                    e.name && tn(e.name),
                    e.inputs = q(r[2], !1),
                    Z(tt.fromObject(e))
            }
            static isErrorFragment(t) {
                return t && t._isFragment && "error" === t.type
            }
        }
        function te(t) {
            return t.match(/^uint($|[^1-9])/) ? t = "uint256" + t.substring(4) : t.match(/^int($|[^1-9])/) && (t = "int256" + t.substring(3)),
                t
        }
        let tr = RegExp("^[a-zA-Z$_][a-zA-Z0-9$_]*$");
        function tn(t) {
            return t && t.match(tr) || D.throwArgumentError(`invalid identifier "${t}"`, "value", t),
                t
        }
        let ti = RegExp("^([^)(]*)\\((.*)\\)([^)(]*)$")
            , to = new c.Yd(h)
            , ts = new RegExp(/^bytes([0-9]*)$/)
            , ta = new RegExp(/^(u?int)([0-9]*)$/);
        class tl {
            constructor(t) {
                (0,
                    u.zG)(this, "coerceFunc", t || null)
            }
            _getCoder(t) {
                switch (t.baseType) {
                    case "address":
                        return new w(t.name);
                    case "bool":
                        return new P(t.name);
                    case "string":
                        return new M(t.name);
                    case "bytes":
                        return new C(t.name);
                    case "array":
                        return new k(this._getCoder(t.arrayChildren), t.arrayLength, t.name);
                    case "tuple":
                        return new B((t.components || []).map(t => this._getCoder(t)), t.name);
                    case "":
                        return new x(t.name)
                }
                let e = t.type.match(ta);
                if (e) {
                    let r = parseInt(e[2] || "256");
                    return (0 === r || r > 256 || r % 8 != 0) && to.throwArgumentError("invalid " + e[1] + " bit length", "param", t),
                        new I(r / 8, "int" === e[1], t.name)
                }
                if (e = t.type.match(ts)) {
                    let r = parseInt(e[1]);
                    return (0 === r || r > 32) && to.throwArgumentError("invalid bytes length", "param", t),
                        new T(r, t.name)
                }
                return to.throwArgumentError("invalid type", "type", t.type)
            }
            _getWordSize() {
                return 32
            }
            _getReader(t, e) {
                return new g(t, this._getWordSize(), this.coerceFunc, e)
            }
            _getWriter() {
                return new m(this._getWordSize())
            }
            getDefaultValue(t) {
                return new B(t.map(t => this._getCoder(K.from(t))), "_").defaultValue()
            }
            encode(t, e) {
                t.length !== e.length && to.throwError("types/values length mismatch", c.Yd.errors.INVALID_ARGUMENT, {
                    count: {
                        types: t.length,
                        values: e.length
                    },
                    value: {
                        types: t,
                        values: e
                    }
                });
                let r = new B(t.map(t => this._getCoder(K.from(t))), "_")
                    , n = this._getWriter();
                return r.encode(n, e),
                    n.data
            }
            decode(t, e, r) {
                return new B(t.map(t => this._getCoder(K.from(t))), "_").decode(this._getReader((0,
                    a.lE)(e), r))
            }
        }
        let tu = new tl
            , tc = new c.Yd(h);
        class th extends u.dk {
        }
        class tf extends u.dk {
        }
        class td extends u.dk {
        }
        class tp extends u.dk {
            static isIndexed(t) {
                return !!(t && t._isIndexed)
            }
        }
        let tm = {
            "0x08c379a0": {
                signature: "Error(string)",
                name: "Error",
                inputs: ["string"],
                reason: !0
            },
            "0x4e487b71": {
                signature: "Panic(uint256)",
                name: "Panic",
                inputs: ["uint256"]
            }
        };
        function tg(t, e) {
            let r = Error(`deferred error during ABI decoding triggered accessing ${t}`);
            return r.error = e,
                r
        }
        class ty {
            constructor(t) {
                let e = [];
                e = "string" == typeof t ? JSON.parse(t) : t,
                    (0,
                        u.zG)(this, "fragments", e.map(t => H.from(t)).filter(t => null != t)),
                    (0,
                        u.zG)(this, "_abiCoder", (0,
                            u.tu)(new.target, "getAbiCoder")()),
                    (0,
                        u.zG)(this, "functions", {}),
                    (0,
                        u.zG)(this, "errors", {}),
                    (0,
                        u.zG)(this, "events", {}),
                    (0,
                        u.zG)(this, "structs", {}),
                    this.fragments.forEach(t => {
                        let e = null;
                        switch (t.type) {
                            case "constructor":
                                if (this.deploy) {
                                    tc.warn("duplicate definition - constructor");
                                    return
                                }
                                (0,
                                    u.zG)(this, "deploy", t);
                                return;
                            case "function":
                                e = this.functions;
                                break;
                            case "event":
                                e = this.events;
                                break;
                            case "error":
                                e = this.errors;
                                break;
                            default:
                                return
                        }
                        let r = t.format();
                        if (e[r]) {
                            tc.warn("duplicate definition - " + r);
                            return
                        }
                        e[r] = t
                    }
                    ),
                    this.deploy || (0,
                        u.zG)(this, "deploy", $.from({
                            payable: !1,
                            type: "constructor"
                        })),
                    (0,
                        u.zG)(this, "_isInterface", !0)
            }
            format(t) {
                t || (t = j.full),
                    t === j.sighash && tc.throwArgumentError("interface does not support formatting sighash", "format", t);
                let e = this.fragments.map(e => e.format(t));
                return t === j.json ? JSON.stringify(e.map(t => JSON.parse(t))) : e
            }
            static getAbiCoder() {
                return tu
            }
            static getAddress(t) {
                return (0,
                    y.Kn)(t)
            }
            static getSighash(t) {
                return (0,
                    a.p3)((0,
                        v.id)(t.format()), 0, 4)
            }
            static getEventTopic(t) {
                return (0,
                    v.id)(t.format())
            }
            getFunction(t) {
                if ((0,
                    a.A7)(t)) {
                    for (let e in this.functions)
                        if (t === this.getSighash(e))
                            return this.functions[e];
                    tc.throwArgumentError("no matching function", "sighash", t)
                }
                if (-1 === t.indexOf("(")) {
                    let e = t.trim()
                        , r = Object.keys(this.functions).filter(t => t.split("(")[0] === e);
                    return 0 === r.length ? tc.throwArgumentError("no matching function", "name", e) : r.length > 1 && tc.throwArgumentError("multiple matching functions", "name", e),
                        this.functions[r[0]]
                }
                let e = this.functions[X.fromString(t).format()];
                return e || tc.throwArgumentError("no matching function", "signature", t),
                    e
            }
            getEvent(t) {
                if ((0,
                    a.A7)(t)) {
                    let e = t.toLowerCase();
                    for (let t in this.events)
                        if (e === this.getEventTopic(t))
                            return this.events[t];
                    tc.throwArgumentError("no matching event", "topichash", e)
                }
                if (-1 === t.indexOf("(")) {
                    let e = t.trim()
                        , r = Object.keys(this.events).filter(t => t.split("(")[0] === e);
                    return 0 === r.length ? tc.throwArgumentError("no matching event", "name", e) : r.length > 1 && tc.throwArgumentError("multiple matching events", "name", e),
                        this.events[r[0]]
                }
                let e = this.events[J.fromString(t).format()];
                return e || tc.throwArgumentError("no matching event", "signature", t),
                    e
            }
            getError(t) {
                if ((0,
                    a.A7)(t)) {
                    let e = (0,
                        u.tu)(this.constructor, "getSighash");
                    for (let r in this.errors)
                        if (t === e(this.errors[r]))
                            return this.errors[r];
                    tc.throwArgumentError("no matching error", "sighash", t)
                }
                if (-1 === t.indexOf("(")) {
                    let e = t.trim()
                        , r = Object.keys(this.errors).filter(t => t.split("(")[0] === e);
                    return 0 === r.length ? tc.throwArgumentError("no matching error", "name", e) : r.length > 1 && tc.throwArgumentError("multiple matching errors", "name", e),
                        this.errors[r[0]]
                }
                let e = this.errors[X.fromString(t).format()];
                return e || tc.throwArgumentError("no matching error", "signature", t),
                    e
            }
            getSighash(t) {
                if ("string" == typeof t)
                    try {
                        t = this.getFunction(t)
                    } catch (e) {
                        try {
                            t = this.getError(t)
                        } catch (t) {
                            throw e
                        }
                    }
                return (0,
                    u.tu)(this.constructor, "getSighash")(t)
            }
            getEventTopic(t) {
                return "string" == typeof t && (t = this.getEvent(t)),
                    (0,
                        u.tu)(this.constructor, "getEventTopic")(t)
            }
            _decodeParams(t, e) {
                return this._abiCoder.decode(t, e)
            }
            _encodeParams(t, e) {
                return this._abiCoder.encode(t, e)
            }
            encodeDeploy(t) {
                return this._encodeParams(this.deploy.inputs, t || [])
            }
            decodeErrorResult(t, e) {
                "string" == typeof t && (t = this.getError(t));
                let r = (0,
                    a.lE)(e);
                return (0,
                    a.Dv)(r.slice(0, 4)) !== this.getSighash(t) && tc.throwArgumentError(`data signature does not match error ${t.name}.`, "data", (0,
                        a.Dv)(r)),
                    this._decodeParams(t.inputs, r.slice(4))
            }
            encodeErrorResult(t, e) {
                return "string" == typeof t && (t = this.getError(t)),
                    (0,
                        a.Dv)((0,
                            a.zo)([this.getSighash(t), this._encodeParams(t.inputs, e || [])]))
            }
            decodeFunctionData(t, e) {
                "string" == typeof t && (t = this.getFunction(t));
                let r = (0,
                    a.lE)(e);
                return (0,
                    a.Dv)(r.slice(0, 4)) !== this.getSighash(t) && tc.throwArgumentError(`data signature does not match function ${t.name}.`, "data", (0,
                        a.Dv)(r)),
                    this._decodeParams(t.inputs, r.slice(4))
            }
            encodeFunctionData(t, e) {
                return "string" == typeof t && (t = this.getFunction(t)),
                    (0,
                        a.Dv)((0,
                            a.zo)([this.getSighash(t), this._encodeParams(t.inputs, e || [])]))
            }
            decodeFunctionResult(t, e) {
                "string" == typeof t && (t = this.getFunction(t));
                let r = (0,
                    a.lE)(e)
                    , n = null
                    , i = ""
                    , o = null
                    , s = null
                    , l = null;
                switch (r.length % this._abiCoder._getWordSize()) {
                    case 0:
                        try {
                            return this._abiCoder.decode(t.outputs, r)
                        } catch (t) { }
                        break;
                    case 4:
                        {
                            let t = (0,
                                a.Dv)(r.slice(0, 4))
                                , e = tm[t];
                            if (e)
                                o = this._abiCoder.decode(e.inputs, r.slice(4)),
                                    s = e.name,
                                    l = e.signature,
                                    e.reason && (n = o[0]),
                                    "Error" === s ? i = `; VM Exception while processing transaction: reverted with reason string ${JSON.stringify(o[0])}` : "Panic" === s && (i = `; VM Exception while processing transaction: reverted with panic code ${o[0]}`);
                            else
                                try {
                                    let e = this.getError(t);
                                    o = this._abiCoder.decode(e.inputs, r.slice(4)),
                                        s = e.name,
                                        l = e.format()
                                } catch (t) { }
                        }
                }
                return tc.throwError("call revert exception" + i, c.Yd.errors.CALL_EXCEPTION, {
                    method: t.format(),
                    data: (0,
                        a.Dv)(e),
                    errorArgs: o,
                    errorName: s,
                    errorSignature: l,
                    reason: n
                })
            }
            encodeFunctionResult(t, e) {
                return "string" == typeof t && (t = this.getFunction(t)),
                    (0,
                        a.Dv)(this._abiCoder.encode(t.outputs, e || []))
            }
            encodeFilterTopics(t, e) {
                "string" == typeof t && (t = this.getEvent(t)),
                    e.length > t.inputs.length && tc.throwError("too many arguments for " + t.format(), c.Yd.errors.UNEXPECTED_ARGUMENT, {
                        argument: "values",
                        value: e
                    });
                let r = [];
                t.anonymous || r.push(this.getEventTopic(t));
                let n = (t, e) => "string" === t.type ? (0,
                    v.id)(e) : "bytes" === t.type ? (0,
                        b.w)((0,
                            a.Dv)(e)) : ("bool" === t.type && "boolean" == typeof e && (e = e ? "0x01" : "0x00"),
                                t.type.match(/^u?int/) && (e = l.O$.from(e).toHexString()),
                                "address" === t.type && this._abiCoder.encode(["address"], [e]),
                                (0,
                                    a.$m)((0,
                                        a.Dv)(e), 32));
                for (e.forEach((e, i) => {
                    let o = t.inputs[i];
                    if (!o.indexed) {
                        null != e && tc.throwArgumentError("cannot filter non-indexed parameters; must be null", "contract." + o.name, e);
                        return
                    }
                    null == e ? r.push(null) : "array" === o.baseType || "tuple" === o.baseType ? tc.throwArgumentError("filtering with tuples or arrays not supported", "contract." + o.name, e) : Array.isArray(e) ? r.push(e.map(t => n(o, t))) : r.push(n(o, e))
                }
                ); r.length && null === r[r.length - 1];)
                    r.pop();
                return r
            }
            encodeEventLog(t, e) {
                "string" == typeof t && (t = this.getEvent(t));
                let r = []
                    , n = []
                    , i = [];
                return t.anonymous || r.push(this.getEventTopic(t)),
                    e.length !== t.inputs.length && tc.throwArgumentError("event arguments/values mismatch", "values", e),
                    t.inputs.forEach((t, o) => {
                        let s = e[o];
                        if (t.indexed) {
                            if ("string" === t.type)
                                r.push((0,
                                    v.id)(s));
                            else if ("bytes" === t.type)
                                r.push((0,
                                    b.w)(s));
                            else if ("tuple" === t.baseType || "array" === t.baseType)
                                throw Error("not implemented");
                            else
                                r.push(this._abiCoder.encode([t.type], [s]))
                        } else
                            n.push(t),
                                i.push(s)
                    }
                    ),
                {
                    data: this._abiCoder.encode(n, i),
                    topics: r
                }
            }
            decodeEventLog(t, e, r) {
                if ("string" == typeof t && (t = this.getEvent(t)),
                    null != r && !t.anonymous) {
                    let e = this.getEventTopic(t);
                    (0,
                        a.A7)(r[0], 32) && r[0].toLowerCase() === e || tc.throwError("fragment/topic mismatch", c.Yd.errors.INVALID_ARGUMENT, {
                            argument: "topics[0]",
                            expected: e,
                            value: r[0]
                        }),
                        r = r.slice(1)
                }
                let n = []
                    , i = []
                    , o = [];
                t.inputs.forEach((t, e) => {
                    t.indexed ? "string" === t.type || "bytes" === t.type || "tuple" === t.baseType || "array" === t.baseType ? (n.push(K.fromObject({
                        type: "bytes32",
                        name: t.name
                    })),
                        o.push(!0)) : (n.push(t),
                            o.push(!1)) : (i.push(t),
                                o.push(!1))
                }
                );
                let s = null != r ? this._abiCoder.decode(n, (0,
                    a.zo)(r)) : null
                    , l = this._abiCoder.decode(i, e, !0)
                    , u = []
                    , h = 0
                    , f = 0;
                t.inputs.forEach((t, e) => {
                    if (t.indexed) {
                        if (null == s)
                            u[e] = new tp({
                                _isIndexed: !0,
                                hash: null
                            });
                        else if (o[e])
                            u[e] = new tp({
                                _isIndexed: !0,
                                hash: s[f++]
                            });
                        else
                            try {
                                u[e] = s[f++]
                            } catch (t) {
                                u[e] = t
                            }
                    } else
                        try {
                            u[e] = l[h++]
                        } catch (t) {
                            u[e] = t
                        }
                    if (t.name && null == u[t.name]) {
                        let r = u[e];
                        r instanceof Error ? Object.defineProperty(u, t.name, {
                            enumerable: !0,
                            get: () => {
                                throw tg(`property ${JSON.stringify(t.name)}`, r)
                            }
                        }) : u[t.name] = r
                    }
                }
                );
                for (let t = 0; t < u.length; t++) {
                    let e = u[t];
                    e instanceof Error && Object.defineProperty(u, t, {
                        enumerable: !0,
                        get: () => {
                            throw tg(`index ${t}`, e)
                        }
                    })
                }
                return Object.freeze(u)
            }
            parseTransaction(t) {
                let e = this.getFunction(t.data.substring(0, 10).toLowerCase());
                return e ? new tf({
                    args: this._abiCoder.decode(e.inputs, "0x" + t.data.substring(10)),
                    functionFragment: e,
                    name: e.name,
                    signature: e.format(),
                    sighash: this.getSighash(e),
                    value: l.O$.from(t.value || "0")
                }) : null
            }
            parseLog(t) {
                let e = this.getEvent(t.topics[0]);
                return !e || e.anonymous ? null : new th({
                    eventFragment: e,
                    name: e.name,
                    signature: e.format(),
                    topic: this.getEventTopic(e),
                    args: this.decodeEventLog(e, t.data, t.topics)
                })
            }
            parseError(t) {
                let e = (0,
                    a.Dv)(t)
                    , r = this.getError(e.substring(0, 10).toLowerCase());
                return r ? new td({
                    args: this._abiCoder.decode(r.inputs, "0x" + e.substring(10)),
                    errorFragment: r,
                    name: r.name,
                    signature: r.format(),
                    sighash: this.getSighash(r)
                }) : null
            }
            static isInterface(t) {
                return !!(t && t._isInterface)
            }
        }
        var tv = r(94999)
            , tb = r(14941)
            , tw = r(12060)
            , tE = function (t, e, r, n) {
                return new (r || (r = Promise))(function (i, o) {
                    function s(t) {
                        try {
                            l(n.next(t))
                        } catch (t) {
                            o(t)
                        }
                    }
                    function a(t) {
                        try {
                            l(n.throw(t))
                        } catch (t) {
                            o(t)
                        }
                    }
                    function l(t) {
                        var e;
                        t.done ? i(t.value) : ((e = t.value) instanceof r ? e : new r(function (t) {
                            t(e)
                        }
                        )).then(s, a)
                    }
                    l((n = n.apply(t, e || [])).next())
                }
                )
            };
        let tA = new c.Yd("contracts/5.7.0")
            , t_ = {
                chainId: !0,
                data: !0,
                from: !0,
                gasLimit: !0,
                gasPrice: !0,
                nonce: !0,
                to: !0,
                value: !0,
                type: !0,
                accessList: !0,
                maxFeePerGas: !0,
                maxPriorityFeePerGas: !0,
                customData: !0,
                ccipReadEnabled: !0
            };
        function tS(t, e) {
            return tE(this, void 0, void 0, function* () {
                let r = yield e;
                "string" != typeof r && tA.throwArgumentError("invalid address or ENS name", "name", r);
                try {
                    return (0,
                        y.Kn)(r)
                } catch (t) { }
                t || tA.throwError("a provider or signer is needed to resolve ENS names", c.Yd.errors.UNSUPPORTED_OPERATION, {
                    operation: "resolveName"
                });
                let n = yield t.resolveName(r);
                return null == n && tA.throwArgumentError("resolver or addr is not configured for ENS name", "name", r),
                    n
            })
        }
        function tk(t, e, r) {
            return tE(this, void 0, void 0, function* () {
                return Array.isArray(r) ? yield Promise.all(r.map((r, n) => tk(t, Array.isArray(e) ? e[n] : e[r.name], r))) : "address" === r.type ? yield tS(t, e) : "tuple" === r.type ? yield tk(t, e, r.components) : "array" === r.baseType ? Array.isArray(e) ? yield Promise.all(e.map(e => tk(t, e, r.arrayChildren))) : Promise.reject(tA.makeError("invalid value for array", c.Yd.errors.INVALID_ARGUMENT, {
                    argument: "value",
                    value: e
                })) : e
            })
        }
        function tP(t, e, r) {
            return tE(this, void 0, void 0, function* () {
                let n = {};
                r.length === e.inputs.length + 1 && "object" == typeof r[r.length - 1] && (n = (0,
                    u.DC)(r.pop())),
                    tA.checkArgumentCount(r.length, e.inputs.length, "passed to contract"),
                    t.signer ? n.from ? n.from = (0,
                        u.mE)({
                            override: tS(t.signer, n.from),
                            signer: t.signer.getAddress()
                        }).then(t => tE(this, void 0, void 0, function* () {
                            return (0,
                                y.Kn)(t.signer) !== t.override && tA.throwError("Contract with a Signer cannot override from", c.Yd.errors.UNSUPPORTED_OPERATION, {
                                    operation: "overrides.from"
                                }),
                                t.override
                        })) : n.from = t.signer.getAddress() : n.from && (n.from = tS(t.provider, n.from));
                let i = yield (0,
                    u.mE)({
                        args: tk(t.signer || t.provider, r, e.inputs),
                        address: t.resolvedAddress,
                        overrides: (0,
                            u.mE)(n) || {}
                    })
                    , o = t.interface.encodeFunctionData(e, i.args)
                    , s = {
                        data: o,
                        to: i.address
                    }
                    , h = i.overrides;
                if (null != h.nonce && (s.nonce = l.O$.from(h.nonce).toNumber()),
                    null != h.gasLimit && (s.gasLimit = l.O$.from(h.gasLimit)),
                    null != h.gasPrice && (s.gasPrice = l.O$.from(h.gasPrice)),
                    null != h.maxFeePerGas && (s.maxFeePerGas = l.O$.from(h.maxFeePerGas)),
                    null != h.maxPriorityFeePerGas && (s.maxPriorityFeePerGas = l.O$.from(h.maxPriorityFeePerGas)),
                    null != h.from && (s.from = h.from),
                    null != h.type && (s.type = h.type),
                    null != h.accessList && (s.accessList = (0,
                        tw.z7)(h.accessList)),
                    null == s.gasLimit && null != e.gas) {
                    let t = 21e3
                        , r = (0,
                            a.lE)(o);
                    for (let e = 0; e < r.length; e++)
                        t += 4,
                            r[e] && (t += 64);
                    s.gasLimit = l.O$.from(e.gas).add(t)
                }
                if (h.value) {
                    let t = l.O$.from(h.value);
                    t.isZero() || e.payable || tA.throwError("non-payable method cannot override value", c.Yd.errors.UNSUPPORTED_OPERATION, {
                        operation: "overrides.value",
                        value: n.value
                    }),
                        s.value = t
                }
                h.customData && (s.customData = (0,
                    u.DC)(h.customData)),
                    h.ccipReadEnabled && (s.ccipReadEnabled = !!h.ccipReadEnabled),
                    delete n.nonce,
                    delete n.gasLimit,
                    delete n.gasPrice,
                    delete n.from,
                    delete n.value,
                    delete n.type,
                    delete n.accessList,
                    delete n.maxFeePerGas,
                    delete n.maxPriorityFeePerGas,
                    delete n.customData,
                    delete n.ccipReadEnabled;
                let f = Object.keys(n).filter(t => null != n[t]);
                return f.length && tA.throwError(`cannot override ${f.map(t => JSON.stringify(t)).join(",")}`, c.Yd.errors.UNSUPPORTED_OPERATION, {
                    operation: "overrides",
                    overrides: f
                }),
                    s
            })
        }
        function tN(t, e) {
            let r = e.wait.bind(e);
            e.wait = e => r(e).then(e => (e.events = e.logs.map(r => {
                let n = (0,
                    u.p$)(r)
                    , i = null;
                try {
                    i = t.interface.parseLog(r)
                } catch (t) { }
                return i && (n.args = i.args,
                    n.decode = (e, r) => t.interface.decodeEventLog(i.eventFragment, e, r),
                    n.event = i.name,
                    n.eventSignature = i.signature),
                    n.removeListener = () => t.provider,
                    n.getBlock = () => t.provider.getBlock(e.blockHash),
                    n.getTransaction = () => t.provider.getTransaction(e.transactionHash),
                    n.getTransactionReceipt = () => Promise.resolve(e),
                    n
            }
            ),
                e))
        }
        function tC(t, e, r) {
            let n = t.signer || t.provider;
            return function (...i) {
                return tE(this, void 0, void 0, function* () {
                    let o;
                    if (i.length === e.inputs.length + 1 && "object" == typeof i[i.length - 1]) {
                        let t = (0,
                            u.DC)(i.pop());
                        null != t.blockTag && (o = yield t.blockTag),
                            delete t.blockTag,
                            i.push(t)
                    }
                    null != t.deployTransaction && (yield t._deployed(o));
                    let s = yield tP(t, e, i)
                        , a = yield n.call(s, o);
                    try {
                        let n = t.interface.decodeFunctionResult(e, a);
                        return r && 1 === e.outputs.length && (n = n[0]),
                            n
                    } catch (e) {
                        throw e.code === c.Yd.errors.CALL_EXCEPTION && (e.address = t.address,
                            e.args = i,
                            e.transaction = s),
                        e
                    }
                })
            }
        }
        function tT(t, e, r) {
            return e.constant ? tC(t, e, r) : function (...r) {
                return tE(this, void 0, void 0, function* () {
                    t.signer || tA.throwError("sending a transaction requires a signer", c.Yd.errors.UNSUPPORTED_OPERATION, {
                        operation: "sendTransaction"
                    }),
                        null != t.deployTransaction && (yield t._deployed());
                    let n = yield tP(t, e, r)
                        , i = yield t.signer.sendTransaction(n);
                    return tN(t, i),
                        i
                })
            }
        }
        function tx(t) {
            return t.address && (null == t.topics || 0 === t.topics.length) ? "*" : (t.address || "*") + "@" + (t.topics ? t.topics.map(t => Array.isArray(t) ? t.join("|") : t).join(":") : "")
        }
        class tR {
            constructor(t, e) {
                (0,
                    u.zG)(this, "tag", t),
                    (0,
                        u.zG)(this, "filter", e),
                    this._listeners = []
            }
            addListener(t, e) {
                this._listeners.push({
                    listener: t,
                    once: e
                })
            }
            removeListener(t) {
                let e = !1;
                this._listeners = this._listeners.filter(r => !!e || r.listener !== t || (e = !0,
                    !1))
            }
            removeAllListeners() {
                this._listeners = []
            }
            listeners() {
                return this._listeners.map(t => t.listener)
            }
            listenerCount() {
                return this._listeners.length
            }
            run(t) {
                let e = this.listenerCount();
                return this._listeners = this._listeners.filter(e => {
                    let r = t.slice();
                    return setTimeout(() => {
                        e.listener.apply(this, r)
                    }
                        , 0),
                        !e.once
                }
                ),
                    e
            }
            prepareEvent(t) { }
            getEmit(t) {
                return [t]
            }
        }
        class tI extends tR {
            constructor() {
                super("error", null)
            }
        }
        class tO extends tR {
            constructor(t, e, r, n) {
                let i = {
                    address: t
                }
                    , o = e.getEventTopic(r);
                n ? (o !== n[0] && tA.throwArgumentError("topic mismatch", "topics", n),
                    i.topics = n.slice()) : i.topics = [o],
                    super(tx(i), i),
                    (0,
                        u.zG)(this, "address", t),
                    (0,
                        u.zG)(this, "interface", e),
                    (0,
                        u.zG)(this, "fragment", r)
            }
            prepareEvent(t) {
                super.prepareEvent(t),
                    t.event = this.fragment.name,
                    t.eventSignature = this.fragment.format(),
                    t.decode = (t, e) => this.interface.decodeEventLog(this.fragment, t, e);
                try {
                    t.args = this.interface.decodeEventLog(this.fragment, t.data, t.topics)
                } catch (e) {
                    t.args = null,
                        t.decodeError = e
                }
            }
            getEmit(t) {
                let e = d(t.args);
                if (e.length)
                    throw e[0].error;
                let r = (t.args || []).slice();
                return r.push(t),
                    r
            }
        }
        class tM extends tR {
            constructor(t, e) {
                super("*", {
                    address: t
                }),
                    (0,
                        u.zG)(this, "address", t),
                    (0,
                        u.zG)(this, "interface", e)
            }
            prepareEvent(t) {
                super.prepareEvent(t);
                try {
                    let e = this.interface.parseLog(t);
                    t.event = e.name,
                        t.eventSignature = e.signature,
                        t.decode = (t, r) => this.interface.decodeEventLog(e.eventFragment, t, r),
                        t.args = e.args
                } catch (t) { }
            }
        }
        class tB {
            constructor(t, e, r) {
                (0,
                    u.zG)(this, "interface", (0,
                        u.tu)(new.target, "getInterface")(e)),
                    null == r ? ((0,
                        u.zG)(this, "provider", null),
                        (0,
                            u.zG)(this, "signer", null)) : tb.E.isSigner(r) ? ((0,
                                u.zG)(this, "provider", r.provider || null),
                                (0,
                                    u.zG)(this, "signer", r)) : tv.zt.isProvider(r) ? ((0,
                                        u.zG)(this, "provider", r),
                                        (0,
                                            u.zG)(this, "signer", null)) : tA.throwArgumentError("invalid signer or provider", "signerOrProvider", r),
                    (0,
                        u.zG)(this, "callStatic", {}),
                    (0,
                        u.zG)(this, "estimateGas", {}),
                    (0,
                        u.zG)(this, "functions", {}),
                    (0,
                        u.zG)(this, "populateTransaction", {}),
                    (0,
                        u.zG)(this, "filters", {});
                {
                    let t = {};
                    Object.keys(this.interface.events).forEach(e => {
                        let r = this.interface.events[e];
                        (0,
                            u.zG)(this.filters, e, (...t) => ({
                                address: this.address,
                                topics: this.interface.encodeFilterTopics(r, t)
                            })),
                            t[r.name] || (t[r.name] = []),
                            t[r.name].push(e)
                    }
                    ),
                        Object.keys(t).forEach(e => {
                            let r = t[e];
                            1 === r.length ? (0,
                                u.zG)(this.filters, e, this.filters[r[0]]) : tA.warn(`Duplicate definition of ${e} (${r.join(", ")})`)
                        }
                        )
                }
                if ((0,
                    u.zG)(this, "_runningEvents", {}),
                    (0,
                        u.zG)(this, "_wrappedEmits", {}),
                    null == t && tA.throwArgumentError("invalid contract address or ENS name", "addressOrName", t),
                    (0,
                        u.zG)(this, "address", t),
                    this.provider)
                    (0,
                        u.zG)(this, "resolvedAddress", tS(this.provider, t));
                else
                    try {
                        (0,
                            u.zG)(this, "resolvedAddress", Promise.resolve((0,
                                y.Kn)(t)))
                    } catch (t) {
                        tA.throwError("provider is required to use ENS name as contract address", c.Yd.errors.UNSUPPORTED_OPERATION, {
                            operation: "new Contract"
                        })
                    }
                this.resolvedAddress.catch(t => { }
                );
                let n = {}
                    , i = {};
                Object.keys(this.interface.functions).forEach(t => {
                    let e = this.interface.functions[t];
                    if (i[t]) {
                        tA.warn(`Duplicate ABI entry for ${JSON.stringify(t)}`);
                        return
                    }
                    i[t] = !0;
                    {
                        let r = e.name;
                        n[`%${r}`] || (n[`%${r}`] = []),
                            n[`%${r}`].push(t)
                    }
                    if (null == this[t] && (0,
                        u.zG)(this, t, tT(this, e, !0)),
                        null == this.functions[t] && (0,
                            u.zG)(this.functions, t, tT(this, e, !1)),
                        null == this.callStatic[t] && (0,
                            u.zG)(this.callStatic, t, tC(this, e, !0)),
                        null == this.populateTransaction[t]) {
                        var r;
                        (0,
                            u.zG)(this.populateTransaction, t, (r = this,
                                function (...t) {
                                    return tP(r, e, t)
                                }
                            ))
                    }
                    null == this.estimateGas[t] && (0,
                        u.zG)(this.estimateGas, t, function (t, e) {
                            let r = t.signer || t.provider;
                            return function (...n) {
                                return tE(this, void 0, void 0, function* () {
                                    r || tA.throwError("estimate require a provider or signer", c.Yd.errors.UNSUPPORTED_OPERATION, {
                                        operation: "estimateGas"
                                    });
                                    let i = yield tP(t, e, n);
                                    return yield r.estimateGas(i)
                                })
                            }
                        }(this, e))
                }
                ),
                    Object.keys(n).forEach(t => {
                        let e = n[t];
                        if (e.length > 1)
                            return;
                        t = t.substring(1);
                        let r = e[0];
                        try {
                            null == this[t] && (0,
                                u.zG)(this, t, this[r])
                        } catch (t) { }
                        null == this.functions[t] && (0,
                            u.zG)(this.functions, t, this.functions[r]),
                            null == this.callStatic[t] && (0,
                                u.zG)(this.callStatic, t, this.callStatic[r]),
                            null == this.populateTransaction[t] && (0,
                                u.zG)(this.populateTransaction, t, this.populateTransaction[r]),
                            null == this.estimateGas[t] && (0,
                                u.zG)(this.estimateGas, t, this.estimateGas[r])
                    }
                    )
            }
            static getContractAddress(t) {
                return (0,
                    y.CR)(t)
            }
            static getInterface(t) {
                return ty.isInterface(t) ? t : new ty(t)
            }
            deployed() {
                return this._deployed()
            }
            _deployed(t) {
                return this._deployedPromise || (this.deployTransaction ? this._deployedPromise = this.deployTransaction.wait().then(() => this) : this._deployedPromise = this.provider.getCode(this.address, t).then(t => ("0x" === t && tA.throwError("contract not deployed", c.Yd.errors.UNSUPPORTED_OPERATION, {
                    contractAddress: this.address,
                    operation: "getDeployed"
                }),
                    this))),
                    this._deployedPromise
            }
            fallback(t) {
                this.signer || tA.throwError("sending a transactions require a signer", c.Yd.errors.UNSUPPORTED_OPERATION, {
                    operation: "sendTransaction(fallback)"
                });
                let e = (0,
                    u.DC)(t || {});
                return ["from", "to"].forEach(function (t) {
                    null != e[t] && tA.throwError("cannot override " + t, c.Yd.errors.UNSUPPORTED_OPERATION, {
                        operation: t
                    })
                }),
                    e.to = this.resolvedAddress,
                    this.deployed().then(() => this.signer.sendTransaction(e))
            }
            connect(t) {
                "string" == typeof t && (t = new tb.b(t, this.provider));
                let e = new this.constructor(this.address, this.interface, t);
                return this.deployTransaction && (0,
                    u.zG)(e, "deployTransaction", this.deployTransaction),
                    e
            }
            attach(t) {
                return new this.constructor(t, this.interface, this.signer || this.provider)
            }
            static isIndexed(t) {
                return tp.isIndexed(t)
            }
            _normalizeRunningEvent(t) {
                return this._runningEvents[t.tag] ? this._runningEvents[t.tag] : t
            }
            _getRunningEvent(t) {
                if ("string" == typeof t) {
                    if ("error" === t)
                        return this._normalizeRunningEvent(new tI);
                    if ("event" === t)
                        return this._normalizeRunningEvent(new tR("event", null));
                    if ("*" === t)
                        return this._normalizeRunningEvent(new tM(this.address, this.interface));
                    let e = this.interface.getEvent(t);
                    return this._normalizeRunningEvent(new tO(this.address, this.interface, e))
                }
                if (t.topics && t.topics.length > 0) {
                    try {
                        let e = t.topics[0];
                        if ("string" != typeof e)
                            throw Error("invalid topic");
                        let r = this.interface.getEvent(e);
                        return this._normalizeRunningEvent(new tO(this.address, this.interface, r, t.topics))
                    } catch (t) { }
                    let e = {
                        address: this.address,
                        topics: t.topics
                    };
                    return this._normalizeRunningEvent(new tR(tx(e), e))
                }
                return this._normalizeRunningEvent(new tM(this.address, this.interface))
            }
            _checkRunningEvents(t) {
                if (0 === t.listenerCount()) {
                    delete this._runningEvents[t.tag];
                    let e = this._wrappedEmits[t.tag];
                    e && t.filter && (this.provider.off(t.filter, e),
                        delete this._wrappedEmits[t.tag])
                }
            }
            _wrapEvent(t, e, r) {
                let n = (0,
                    u.p$)(e);
                return n.removeListener = () => {
                    r && (t.removeListener(r),
                        this._checkRunningEvents(t))
                }
                    ,
                    n.getBlock = () => this.provider.getBlock(e.blockHash),
                    n.getTransaction = () => this.provider.getTransaction(e.transactionHash),
                    n.getTransactionReceipt = () => this.provider.getTransactionReceipt(e.transactionHash),
                    t.prepareEvent(n),
                    n
            }
            _addEventListener(t, e, r) {
                if (this.provider || tA.throwError("events require a provider or a signer with a provider", c.Yd.errors.UNSUPPORTED_OPERATION, {
                    operation: "once"
                }),
                    t.addListener(e, r),
                    this._runningEvents[t.tag] = t,
                    !this._wrappedEmits[t.tag]) {
                    let r = r => {
                        let n = this._wrapEvent(t, r, e);
                        if (null == n.decodeError)
                            try {
                                let e = t.getEmit(n);
                                this.emit(t.filter, ...e)
                            } catch (t) {
                                n.decodeError = t.error
                            }
                        null != t.filter && this.emit("event", n),
                            null != n.decodeError && this.emit("error", n.decodeError, n)
                    }
                        ;
                    this._wrappedEmits[t.tag] = r,
                        null != t.filter && this.provider.on(t.filter, r)
                }
            }
            queryFilter(t, e, r) {
                let n = this._getRunningEvent(t)
                    , i = (0,
                        u.DC)(n.filter);
                return "string" == typeof e && (0,
                    a.A7)(e, 32) ? (null != r && tA.throwArgumentError("cannot specify toBlock with blockhash", "toBlock", r),
                        i.blockHash = e) : (i.fromBlock = null != e ? e : 0,
                            i.toBlock = null != r ? r : "latest"),
                    this.provider.getLogs(i).then(t => t.map(t => this._wrapEvent(n, t, null)))
            }
            on(t, e) {
                return this._addEventListener(this._getRunningEvent(t), e, !1),
                    this
            }
            once(t, e) {
                return this._addEventListener(this._getRunningEvent(t), e, !0),
                    this
            }
            emit(t, ...e) {
                if (!this.provider)
                    return !1;
                let r = this._getRunningEvent(t)
                    , n = r.run(e) > 0;
                return this._checkRunningEvents(r),
                    n
            }
            listenerCount(t) {
                return this.provider ? null == t ? Object.keys(this._runningEvents).reduce((t, e) => t + this._runningEvents[e].listenerCount(), 0) : this._getRunningEvent(t).listenerCount() : 0
            }
            listeners(t) {
                if (!this.provider)
                    return [];
                if (null == t) {
                    let t = [];
                    for (let e in this._runningEvents)
                        this._runningEvents[e].listeners().forEach(e => {
                            t.push(e)
                        }
                        );
                    return t
                }
                return this._getRunningEvent(t).listeners()
            }
            removeAllListeners(t) {
                if (!this.provider)
                    return this;
                if (null == t) {
                    for (let t in this._runningEvents) {
                        let e = this._runningEvents[t];
                        e.removeAllListeners(),
                            this._checkRunningEvents(e)
                    }
                    return this
                }
                let e = this._getRunningEvent(t);
                return e.removeAllListeners(),
                    this._checkRunningEvents(e),
                    this
            }
            off(t, e) {
                if (!this.provider)
                    return this;
                let r = this._getRunningEvent(t);
                return r.removeListener(e),
                    this._checkRunningEvents(r),
                    this
            }
            removeListener(t, e) {
                return this.off(t, e)
            }
        }
        class tD extends tB {
        }
        class tF {
            constructor(t, e, r) {
                let n = null;
                "0x" !== (n = "string" == typeof e ? e : (0,
                    a._t)(e) ? (0,
                        a.Dv)(e) : e && "string" == typeof e.object ? e.object : "!").substring(0, 2) && (n = "0x" + n),
                    (!(0,
                        a.A7)(n) || n.length % 2) && tA.throwArgumentError("invalid bytecode", "bytecode", e),
                    r && !tb.E.isSigner(r) && tA.throwArgumentError("invalid signer", "signer", r),
                    (0,
                        u.zG)(this, "bytecode", n),
                    (0,
                        u.zG)(this, "interface", (0,
                            u.tu)(new.target, "getInterface")(t)),
                    (0,
                        u.zG)(this, "signer", r || null)
            }
            getDeployTransaction(...t) {
                let e = {};
                if (t.length === this.interface.deploy.inputs.length + 1 && "object" == typeof t[t.length - 1]) {
                    for (let r in e = (0,
                        u.DC)(t.pop()))
                        if (!t_[r])
                            throw Error("unknown transaction override " + r)
                }
                return ["data", "from", "to"].forEach(t => {
                    null != e[t] && tA.throwError("cannot override " + t, c.Yd.errors.UNSUPPORTED_OPERATION, {
                        operation: t
                    })
                }
                ),
                    !e.value || l.O$.from(e.value).isZero() || this.interface.deploy.payable || tA.throwError("non-payable constructor cannot override value", c.Yd.errors.UNSUPPORTED_OPERATION, {
                        operation: "overrides.value",
                        value: e.value
                    }),
                    tA.checkArgumentCount(t.length, this.interface.deploy.inputs.length, " in Contract constructor"),
                    e.data = (0,
                        a.Dv)((0,
                            a.zo)([this.bytecode, this.interface.encodeDeploy(t)])),
                    e
            }
            deploy(...t) {
                return tE(this, void 0, void 0, function* () {
                    let e = {};
                    t.length === this.interface.deploy.inputs.length + 1 && (e = t.pop()),
                        tA.checkArgumentCount(t.length, this.interface.deploy.inputs.length, " in Contract constructor");
                    let r = yield tk(this.signer, t, this.interface.deploy.inputs);
                    r.push(e);
                    let n = this.getDeployTransaction(...r)
                        , i = yield this.signer.sendTransaction(n)
                        , o = (0,
                            u.tu)(this.constructor, "getContractAddress")(i)
                        , s = (0,
                            u.tu)(this.constructor, "getContract")(o, this.interface, this.signer);
                    return tN(s, i),
                        (0,
                            u.zG)(s, "deployTransaction", i),
                        s
                })
            }
            attach(t) {
                return this.constructor.getContract(t, this.interface, this.signer)
            }
            connect(t) {
                return new this.constructor(this.interface, this.bytecode, t)
            }
            static fromSolidity(t, e) {
                null == t && tA.throwError("missing compiler output", c.Yd.errors.MISSING_ARGUMENT, {
                    argument: "compilerOutput"
                }),
                    "string" == typeof t && (t = JSON.parse(t));
                let r = t.abi
                    , n = null;
                return t.bytecode ? n = t.bytecode : t.evm && t.evm.bytecode && (n = t.evm.bytecode),
                    new this(r, n, e)
            }
            static getInterface(t) {
                return tD.getInterface(t)
            }
            static getContractAddress(t) {
                return (0,
                    y.CR)(t)
            }
            static getContract(t, e, r) {
                return new tD(t, e, r)
            }
        }
        var tU = r(84844);
        function tL(t) {
            return "string" == typeof t && (t = (0,
                O.Y0)(t)),
                (0,
                    b.w)((0,
                        a.zo)([(0,
                            O.Y0)("\x19Ethereum Signed Message:\n"), (0,
                                O.Y0)(String(t.length)), t]))
        }
        var tz = r(31822)
            , tG = r(63221)
            , tj = r(37815);
        function tY(t, e, r, n, i) {
            let o, s, l;
            t = (0,
                a.lE)(t),
                e = (0,
                    a.lE)(e);
            let u = 1
                , c = new Uint8Array(n)
                , h = new Uint8Array(e.length + 4);
            h.set(e);
            for (let f = 1; f <= u; f++) {
                h[e.length] = f >> 24 & 255,
                    h[e.length + 1] = f >> 16 & 255,
                    h[e.length + 2] = f >> 8 & 255,
                    h[e.length + 3] = 255 & f;
                let d = (0,
                    a.lE)((0,
                        tj.Gy)(i, t, h));
                o || (o = d.length,
                    l = new Uint8Array(o),
                    u = Math.ceil(n / o),
                    s = n - (u - 1) * o),
                    l.set(d);
                for (let e = 1; e < r; e++) {
                    d = (0,
                        a.lE)((0,
                            tj.Gy)(i, t, d));
                    for (let t = 0; t < o; t++)
                        l[t] ^= d[t]
                }
                let p = (f - 1) * o
                    , m = f === u ? s : o;
                c.set((0,
                    a.lE)(l).slice(0, m), p)
            }
            return (0,
                a.Dv)(c)
        }
        var tK = r(74731)
            , tq = r(67557);
        let tH = new c.Yd("wordlists/5.7.0");
        class tJ {
            constructor(t) {
                tH.checkAbstract(new.target, tJ),
                    (0,
                        u.zG)(this, "locale", t)
            }
            split(t) {
                return t.toLowerCase().split(/ +/g)
            }
            join(t) {
                return t.join(" ")
            }
            static check(t) {
                let e = [];
                for (let r = 0; r < 2048; r++) {
                    let n = t.getWord(r);
                    if (r !== t.getWordIndex(n))
                        return "0x";
                    e.push(n)
                }
                return (0,
                    v.id)(e.join("\n") + "\n")
            }
            static register(t, e) {
                e || (e = t.locale)
            }
        }
        let tV = null;
        function tW(t) {
            if (null == tV && (tV = "AbandonAbilityAbleAboutAboveAbsentAbsorbAbstractAbsurdAbuseAccessAccidentAccountAccuseAchieveAcidAcousticAcquireAcrossActActionActorActressActualAdaptAddAddictAddressAdjustAdmitAdultAdvanceAdviceAerobicAffairAffordAfraidAgainAgeAgentAgreeAheadAimAirAirportAisleAlarmAlbumAlcoholAlertAlienAllAlleyAllowAlmostAloneAlphaAlreadyAlsoAlterAlwaysAmateurAmazingAmongAmountAmusedAnalystAnchorAncientAngerAngleAngryAnimalAnkleAnnounceAnnualAnotherAnswerAntennaAntiqueAnxietyAnyApartApologyAppearAppleApproveAprilArchArcticAreaArenaArgueArmArmedArmorArmyAroundArrangeArrestArriveArrowArtArtefactArtistArtworkAskAspectAssaultAssetAssistAssumeAsthmaAthleteAtomAttackAttendAttitudeAttractAuctionAuditAugustAuntAuthorAutoAutumnAverageAvocadoAvoidAwakeAwareAwayAwesomeAwfulAwkwardAxisBabyBachelorBaconBadgeBagBalanceBalconyBallBambooBananaBannerBarBarelyBargainBarrelBaseBasicBasketBattleBeachBeanBeautyBecauseBecomeBeefBeforeBeginBehaveBehindBelieveBelowBeltBenchBenefitBestBetrayBetterBetweenBeyondBicycleBidBikeBindBiologyBirdBirthBitterBlackBladeBlameBlanketBlastBleakBlessBlindBloodBlossomBlouseBlueBlurBlushBoardBoatBodyBoilBombBoneBonusBookBoostBorderBoringBorrowBossBottomBounceBoxBoyBracketBrainBrandBrassBraveBreadBreezeBrickBridgeBriefBrightBringBriskBroccoliBrokenBronzeBroomBrotherBrownBrushBubbleBuddyBudgetBuffaloBuildBulbBulkBulletBundleBunkerBurdenBurgerBurstBusBusinessBusyButterBuyerBuzzCabbageCabinCableCactusCageCakeCallCalmCameraCampCanCanalCancelCandyCannonCanoeCanvasCanyonCapableCapitalCaptainCarCarbonCardCargoCarpetCarryCartCaseCashCasinoCastleCasualCatCatalogCatchCategoryCattleCaughtCauseCautionCaveCeilingCeleryCementCensusCenturyCerealCertainChairChalkChampionChangeChaosChapterChargeChaseChatCheapCheckCheeseChefCherryChestChickenChiefChildChimneyChoiceChooseChronicChuckleChunkChurnCigarCinnamonCircleCitizenCityCivilClaimClapClarifyClawClayCleanClerkCleverClickClientCliffClimbClinicClipClockClogCloseClothCloudClownClubClumpClusterClutchCoachCoastCoconutCodeCoffeeCoilCoinCollectColorColumnCombineComeComfortComicCommonCompanyConcertConductConfirmCongressConnectConsiderControlConvinceCookCoolCopperCopyCoralCoreCornCorrectCostCottonCouchCountryCoupleCourseCousinCoverCoyoteCrackCradleCraftCramCraneCrashCraterCrawlCrazyCreamCreditCreekCrewCricketCrimeCrispCriticCropCrossCrouchCrowdCrucialCruelCruiseCrumbleCrunchCrushCryCrystalCubeCultureCupCupboardCuriousCurrentCurtainCurveCushionCustomCuteCycleDadDamageDampDanceDangerDaringDashDaughterDawnDayDealDebateDebrisDecadeDecemberDecideDeclineDecorateDecreaseDeerDefenseDefineDefyDegreeDelayDeliverDemandDemiseDenialDentistDenyDepartDependDepositDepthDeputyDeriveDescribeDesertDesignDeskDespairDestroyDetailDetectDevelopDeviceDevoteDiagramDialDiamondDiaryDiceDieselDietDifferDigitalDignityDilemmaDinnerDinosaurDirectDirtDisagreeDiscoverDiseaseDishDismissDisorderDisplayDistanceDivertDivideDivorceDizzyDoctorDocumentDogDollDolphinDomainDonateDonkeyDonorDoorDoseDoubleDoveDraftDragonDramaDrasticDrawDreamDressDriftDrillDrinkDripDriveDropDrumDryDuckDumbDuneDuringDustDutchDutyDwarfDynamicEagerEagleEarlyEarnEarthEasilyEastEasyEchoEcologyEconomyEdgeEditEducateEffortEggEightEitherElbowElderElectricElegantElementElephantElevatorEliteElseEmbarkEmbodyEmbraceEmergeEmotionEmployEmpowerEmptyEnableEnactEndEndlessEndorseEnemyEnergyEnforceEngageEngineEnhanceEnjoyEnlistEnoughEnrichEnrollEnsureEnterEntireEntryEnvelopeEpisodeEqualEquipEraEraseErodeErosionErrorEruptEscapeEssayEssenceEstateEternalEthicsEvidenceEvilEvokeEvolveExactExampleExcessExchangeExciteExcludeExcuseExecuteExerciseExhaustExhibitExileExistExitExoticExpandExpectExpireExplainExposeExpressExtendExtraEyeEyebrowFabricFaceFacultyFadeFaintFaithFallFalseFameFamilyFamousFanFancyFantasyFarmFashionFatFatalFatherFatigueFaultFavoriteFeatureFebruaryFederalFeeFeedFeelFemaleFenceFestivalFetchFeverFewFiberFictionFieldFigureFileFilmFilterFinalFindFineFingerFinishFireFirmFirstFiscalFishFitFitnessFixFlagFlameFlashFlatFlavorFleeFlightFlipFloatFlockFloorFlowerFluidFlushFlyFoamFocusFogFoilFoldFollowFoodFootForceForestForgetForkFortuneForumForwardFossilFosterFoundFoxFragileFrameFrequentFreshFriendFringeFrogFrontFrostFrownFrozenFruitFuelFunFunnyFurnaceFuryFutureGadgetGainGalaxyGalleryGameGapGarageGarbageGardenGarlicGarmentGasGaspGateGatherGaugeGazeGeneralGeniusGenreGentleGenuineGestureGhostGiantGiftGiggleGingerGiraffeGirlGiveGladGlanceGlareGlassGlideGlimpseGlobeGloomGloryGloveGlowGlueGoatGoddessGoldGoodGooseGorillaGospelGossipGovernGownGrabGraceGrainGrantGrapeGrassGravityGreatGreenGridGriefGritGroceryGroupGrowGruntGuardGuessGuideGuiltGuitarGunGymHabitHairHalfHammerHamsterHandHappyHarborHardHarshHarvestHatHaveHawkHazardHeadHealthHeartHeavyHedgehogHeightHelloHelmetHelpHenHeroHiddenHighHillHintHipHireHistoryHobbyHockeyHoldHoleHolidayHollowHomeHoneyHoodHopeHornHorrorHorseHospitalHostHotelHourHoverHubHugeHumanHumbleHumorHundredHungryHuntHurdleHurryHurtHusbandHybridIceIconIdeaIdentifyIdleIgnoreIllIllegalIllnessImageImitateImmenseImmuneImpactImposeImproveImpulseInchIncludeIncomeIncreaseIndexIndicateIndoorIndustryInfantInflictInformInhaleInheritInitialInjectInjuryInmateInnerInnocentInputInquiryInsaneInsectInsideInspireInstallIntactInterestIntoInvestInviteInvolveIronIslandIsolateIssueItemIvoryJacketJaguarJarJazzJealousJeansJellyJewelJobJoinJokeJourneyJoyJudgeJuiceJumpJungleJuniorJunkJustKangarooKeenKeepKetchupKeyKickKidKidneyKindKingdomKissKitKitchenKiteKittenKiwiKneeKnifeKnockKnowLabLabelLaborLadderLadyLakeLampLanguageLaptopLargeLaterLatinLaughLaundryLavaLawLawnLawsuitLayerLazyLeaderLeafLearnLeaveLectureLeftLegLegalLegendLeisureLemonLendLengthLensLeopardLessonLetterLevelLiarLibertyLibraryLicenseLifeLiftLightLikeLimbLimitLinkLionLiquidListLittleLiveLizardLoadLoanLobsterLocalLockLogicLonelyLongLoopLotteryLoudLoungeLoveLoyalLuckyLuggageLumberLunarLunchLuxuryLyricsMachineMadMagicMagnetMaidMailMainMajorMakeMammalManManageMandateMangoMansionManualMapleMarbleMarchMarginMarineMarketMarriageMaskMassMasterMatchMaterialMathMatrixMatterMaximumMazeMeadowMeanMeasureMeatMechanicMedalMediaMelodyMeltMemberMemoryMentionMenuMercyMergeMeritMerryMeshMessageMetalMethodMiddleMidnightMilkMillionMimicMindMinimumMinorMinuteMiracleMirrorMiseryMissMistakeMixMixedMixtureMobileModelModifyMomMomentMonitorMonkeyMonsterMonthMoonMoralMoreMorningMosquitoMotherMotionMotorMountainMouseMoveMovieMuchMuffinMuleMultiplyMuscleMuseumMushroomMusicMustMutualMyselfMysteryMythNaiveNameNapkinNarrowNastyNationNatureNearNeckNeedNegativeNeglectNeitherNephewNerveNestNetNetworkNeutralNeverNewsNextNiceNightNobleNoiseNomineeNoodleNormalNorthNoseNotableNoteNothingNoticeNovelNowNuclearNumberNurseNutOakObeyObjectObligeObscureObserveObtainObviousOccurOceanOctoberOdorOffOfferOfficeOftenOilOkayOldOliveOlympicOmitOnceOneOnionOnlineOnlyOpenOperaOpinionOpposeOptionOrangeOrbitOrchardOrderOrdinaryOrganOrientOriginalOrphanOstrichOtherOutdoorOuterOutputOutsideOvalOvenOverOwnOwnerOxygenOysterOzonePactPaddlePagePairPalacePalmPandaPanelPanicPantherPaperParadeParentParkParrotPartyPassPatchPathPatientPatrolPatternPausePavePaymentPeacePeanutPearPeasantPelicanPenPenaltyPencilPeoplePepperPerfectPermitPersonPetPhonePhotoPhrasePhysicalPianoPicnicPicturePiecePigPigeonPillPilotPinkPioneerPipePistolPitchPizzaPlacePlanetPlasticPlatePlayPleasePledgePluckPlugPlungePoemPoetPointPolarPolePolicePondPonyPoolPopularPortionPositionPossiblePostPotatoPotteryPovertyPowderPowerPracticePraisePredictPreferPreparePresentPrettyPreventPricePridePrimaryPrintPriorityPrisonPrivatePrizeProblemProcessProduceProfitProgramProjectPromoteProofPropertyProsperProtectProudProvidePublicPuddingPullPulpPulsePumpkinPunchPupilPuppyPurchasePurityPurposePursePushPutPuzzlePyramidQualityQuantumQuarterQuestionQuickQuitQuizQuoteRabbitRaccoonRaceRackRadarRadioRailRainRaiseRallyRampRanchRandomRangeRapidRareRateRatherRavenRawRazorReadyRealReasonRebelRebuildRecallReceiveRecipeRecordRecycleReduceReflectReformRefuseRegionRegretRegularRejectRelaxReleaseReliefRelyRemainRememberRemindRemoveRenderRenewRentReopenRepairRepeatReplaceReportRequireRescueResembleResistResourceResponseResultRetireRetreatReturnReunionRevealReviewRewardRhythmRibRibbonRiceRichRideRidgeRifleRightRigidRingRiotRippleRiskRitualRivalRiverRoadRoastRobotRobustRocketRomanceRoofRookieRoomRoseRotateRoughRoundRouteRoyalRubberRudeRugRuleRunRunwayRuralSadSaddleSadnessSafeSailSaladSalmonSalonSaltSaluteSameSampleSandSatisfySatoshiSauceSausageSaveSayScaleScanScareScatterSceneSchemeSchoolScienceScissorsScorpionScoutScrapScreenScriptScrubSeaSearchSeasonSeatSecondSecretSectionSecuritySeedSeekSegmentSelectSellSeminarSeniorSenseSentenceSeriesServiceSessionSettleSetupSevenShadowShaftShallowShareShedShellSheriffShieldShiftShineShipShiverShockShoeShootShopShortShoulderShoveShrimpShrugShuffleShySiblingSickSideSiegeSightSignSilentSilkSillySilverSimilarSimpleSinceSingSirenSisterSituateSixSizeSkateSketchSkiSkillSkinSkirtSkullSlabSlamSleepSlenderSliceSlideSlightSlimSloganSlotSlowSlushSmallSmartSmileSmokeSmoothSnackSnakeSnapSniffSnowSoapSoccerSocialSockSodaSoftSolarSoldierSolidSolutionSolveSomeoneSongSoonSorrySortSoulSoundSoupSourceSouthSpaceSpareSpatialSpawnSpeakSpecialSpeedSpellSpendSphereSpiceSpiderSpikeSpinSpiritSplitSpoilSponsorSpoonSportSpotSpraySpreadSpringSpySquareSqueezeSquirrelStableStadiumStaffStageStairsStampStandStartStateStaySteakSteelStemStepStereoStickStillStingStockStomachStoneStoolStoryStoveStrategyStreetStrikeStrongStruggleStudentStuffStumbleStyleSubjectSubmitSubwaySuccessSuchSuddenSufferSugarSuggestSuitSummerSunSunnySunsetSuperSupplySupremeSureSurfaceSurgeSurpriseSurroundSurveySuspectSustainSwallowSwampSwapSwarmSwearSweetSwiftSwimSwingSwitchSwordSymbolSymptomSyrupSystemTableTackleTagTailTalentTalkTankTapeTargetTaskTasteTattooTaxiTeachTeamTellTenTenantTennisTentTermTestTextThankThatThemeThenTheoryThereTheyThingThisThoughtThreeThriveThrowThumbThunderTicketTideTigerTiltTimberTimeTinyTipTiredTissueTitleToastTobaccoTodayToddlerToeTogetherToiletTokenTomatoTomorrowToneTongueTonightToolToothTopTopicToppleTorchTornadoTortoiseTossTotalTouristTowardTowerTownToyTrackTradeTrafficTragicTrainTransferTrapTrashTravelTrayTreatTreeTrendTrialTribeTrickTriggerTrimTripTrophyTroubleTruckTrueTrulyTrumpetTrustTruthTryTubeTuitionTumbleTunaTunnelTurkeyTurnTurtleTwelveTwentyTwiceTwinTwistTwoTypeTypicalUglyUmbrellaUnableUnawareUncleUncoverUnderUndoUnfairUnfoldUnhappyUniformUniqueUnitUniverseUnknownUnlockUntilUnusualUnveilUpdateUpgradeUpholdUponUpperUpsetUrbanUrgeUsageUseUsedUsefulUselessUsualUtilityVacantVacuumVagueValidValleyValveVanVanishVaporVariousVastVaultVehicleVelvetVendorVentureVenueVerbVerifyVersionVeryVesselVeteranViableVibrantViciousVictoryVideoViewVillageVintageViolinVirtualVirusVisaVisitVisualVitalVividVocalVoiceVoidVolcanoVolumeVoteVoyageWageWagonWaitWalkWallWalnutWantWarfareWarmWarriorWashWaspWasteWaterWaveWayWealthWeaponWearWeaselWeatherWebWeddingWeekendWeirdWelcomeWestWetWhaleWhatWheatWheelWhenWhereWhipWhisperWideWidthWifeWildWillWinWindowWineWingWinkWinnerWinterWireWisdomWiseWishWitnessWolfWomanWonderWoodWoolWordWorkWorldWorryWorthWrapWreckWrestleWristWriteWrongYardYearYellowYouYoungYouthZebraZeroZoneZoo".replace(/([A-Z])/g, " $1").toLowerCase().substring(1).split(" "),
                "0x3c8acc1e7b08d8e76f9fda015ef48dc8c710a73cb7e0f77b2c18a9b5a7adde60" !== tJ.check(t)))
                throw tV = null,
                Error("BIP39 Wordlist for en (English) FAILED")
        }
        class tQ extends tJ {
            constructor() {
                super("en")
            }
            getWord(t) {
                return tW(this),
                    tV[t]
            }
            getWordIndex(t) {
                return tW(this),
                    tV.indexOf(t)
            }
        }
        let t$ = new tQ;
        tJ.register(t$);
        let tX = {
            en: t$
        }
            , tZ = new c.Yd("hdnode/5.7.0")
            , t0 = l.O$.from("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141")
            , t1 = (0,
                O.Y0)("Bitcoin seed");
        function t2(t) {
            return (1 << t) - 1 << 8 - t
        }
        function t3(t) {
            return (0,
                a.$m)((0,
                    a.Dv)(t), 32)
        }
        function t6(t) {
            return tG.eU.encode((0,
                a.zo)([t, (0,
                    a.p3)((0,
                        tj.JQ)((0,
                            tj.JQ)(t)), 0, 4)]))
        }
        function t4(t) {
            if (null == t)
                return tX.en;
            if ("string" == typeof t) {
                let e = tX[t];
                return null == e && tZ.throwArgumentError("unknown locale", "wordlist", t),
                    e
            }
            return t
        }
        let t5 = {}
            , t8 = "m/44'/60'/0'/0/0";
        class t7 {
            constructor(t, e, r, n, i, o, s, l) {
                if (t !== t5)
                    throw Error("HDNode constructor cannot be called directly");
                if (e) {
                    let t = new tK.Et(e);
                    (0,
                        u.zG)(this, "privateKey", t.privateKey),
                        (0,
                            u.zG)(this, "publicKey", t.compressedPublicKey)
                } else
                    (0,
                        u.zG)(this, "privateKey", null),
                        (0,
                            u.zG)(this, "publicKey", (0,
                                a.Dv)(r));
                (0,
                    u.zG)(this, "parentFingerprint", n),
                    (0,
                        u.zG)(this, "fingerprint", (0,
                            a.p3)((0,
                                tj.bP)((0,
                                    tj.JQ)(this.publicKey)), 0, 4)),
                    (0,
                        u.zG)(this, "address", (0,
                            tw.db)(this.publicKey)),
                    (0,
                        u.zG)(this, "chainCode", i),
                    (0,
                        u.zG)(this, "index", o),
                    (0,
                        u.zG)(this, "depth", s),
                    null == l ? ((0,
                        u.zG)(this, "mnemonic", null),
                        (0,
                            u.zG)(this, "path", null)) : "string" == typeof l ? ((0,
                                u.zG)(this, "mnemonic", null),
                                (0,
                                    u.zG)(this, "path", l)) : ((0,
                                        u.zG)(this, "mnemonic", l),
                                        (0,
                                            u.zG)(this, "path", l.path))
            }
            get extendedKey() {
                if (this.depth >= 256)
                    throw Error("Depth too large!");
                return t6((0,
                    a.zo)([null != this.privateKey ? "0x0488ADE4" : "0x0488B21E", (0,
                        a.Dv)(this.depth), this.parentFingerprint, (0,
                            a.$m)((0,
                                a.Dv)(this.index), 4), this.chainCode, null != this.privateKey ? (0,
                                    a.zo)(["0x00", this.privateKey]) : this.publicKey]))
            }
            neuter() {
                return new t7(t5, null, this.publicKey, this.parentFingerprint, this.chainCode, this.index, this.depth, this.path)
            }
            _derive(t) {
                if (t > 4294967295)
                    throw Error("invalid index - " + String(t));
                let e = this.path;
                e && (e += "/" + (2147483647 & t));
                let r = new Uint8Array(37);
                if (2147483648 & t) {
                    if (!this.privateKey)
                        throw Error("cannot derive child of neutered node");
                    r.set((0,
                        a.lE)(this.privateKey), 1),
                        e && (e += "'")
                } else
                    r.set((0,
                        a.lE)(this.publicKey));
                for (let e = 24; e >= 0; e -= 8)
                    r[33 + (e >> 3)] = t >> 24 - e & 255;
                let n = (0,
                    a.lE)((0,
                        tj.Gy)(tq.p.sha512, this.chainCode, r))
                    , i = n.slice(0, 32)
                    , o = n.slice(32)
                    , s = null
                    , u = null;
                this.privateKey ? s = t3(l.O$.from(i).add(this.privateKey).mod(t0)) : u = new tK.Et((0,
                    a.Dv)(i))._addPoint(this.publicKey);
                let c = e
                    , h = this.mnemonic;
                return h && (c = Object.freeze({
                    phrase: h.phrase,
                    path: e,
                    locale: h.locale || "en"
                })),
                    new t7(t5, s, u, this.fingerprint, t3(o), t, this.depth + 1, c)
            }
            derivePath(t) {
                let e = t.split("/");
                if (0 === e.length || "m" === e[0] && 0 !== this.depth)
                    throw Error("invalid path - " + t);
                "m" === e[0] && e.shift();
                let r = this;
                for (let t = 0; t < e.length; t++) {
                    let n = e[t];
                    if (n.match(/^[0-9]+'$/)) {
                        let t = parseInt(n.substring(0, n.length - 1));
                        if (t >= 2147483648)
                            throw Error("invalid path index - " + n);
                        r = r._derive(2147483648 + t)
                    } else if (n.match(/^[0-9]+$/)) {
                        let t = parseInt(n);
                        if (t >= 2147483648)
                            throw Error("invalid path index - " + n);
                        r = r._derive(t)
                    } else
                        throw Error("invalid path component - " + n)
                }
                return r
            }
            static _fromSeed(t, e) {
                let r = (0,
                    a.lE)(t);
                if (r.length < 16 || r.length > 64)
                    throw Error("invalid seed");
                let n = (0,
                    a.lE)((0,
                        tj.Gy)(tq.p.sha512, t1, r));
                return new t7(t5, t3(n.slice(0, 32)), null, "0x00000000", t3(n.slice(32)), 0, 0, e)
            }
            static fromMnemonic(t, e, r) {
                return r = t4(r),
                    t = ee(et(t, r), r),
                    t7._fromSeed(t9(t, e), {
                        phrase: t,
                        path: "m",
                        locale: r.locale
                    })
            }
            static fromSeed(t) {
                return t7._fromSeed(t, null)
            }
            static fromExtendedKey(t) {
                let e = tG.eU.decode(t);
                (82 !== e.length || t6(e.slice(0, 78)) !== t) && tZ.throwArgumentError("invalid extended key", "extendedKey", "[REDACTED]");
                let r = e[4]
                    , n = (0,
                        a.Dv)(e.slice(5, 9))
                    , i = parseInt((0,
                        a.Dv)(e.slice(9, 13)).substring(2), 16)
                    , o = (0,
                        a.Dv)(e.slice(13, 45))
                    , s = e.slice(45, 78);
                switch ((0,
                    a.Dv)(e.slice(0, 4))) {
                    case "0x0488b21e":
                    case "0x043587cf":
                        return new t7(t5, null, (0,
                            a.Dv)(s), n, o, i, r, null);
                    case "0x0488ade4":
                    case "0x04358394 ":
                        if (0 !== s[0])
                            break;
                        return new t7(t5, (0,
                            a.Dv)(s.slice(1)), null, n, o, i, r, null)
                }
                return tZ.throwArgumentError("invalid extended key", "extendedKey", "[REDACTED]")
            }
        }
        function t9(t, e) {
            e || (e = "");
            let r = (0,
                O.Y0)("mnemonic" + e, O.Uj.NFKD);
            return tY((0,
                O.Y0)(t, O.Uj.NFKD), r, 2048, 64, "sha512")
        }
        function et(t, e) {
            e = t4(e),
                tZ.checkNormalize();
            let r = e.split(t);
            if (r.length % 3 != 0)
                throw Error("invalid mnemonic");
            let n = (0,
                a.lE)(new Uint8Array(Math.ceil(11 * r.length / 8)))
                , i = 0;
            for (let t = 0; t < r.length; t++) {
                let o = e.getWordIndex(r[t].normalize("NFKD"));
                if (-1 === o)
                    throw Error("invalid mnemonic");
                for (let t = 0; t < 11; t++)
                    o & 1 << 10 - t && (n[i >> 3] |= 1 << 7 - i % 8),
                        i++
            }
            let o = 32 * r.length / 3
                , s = t2(r.length / 3);
            if (((0,
                a.lE)((0,
                    tj.JQ)(n.slice(0, o / 8)))[0] & s) != (n[n.length - 1] & s))
                throw Error("invalid checksum");
            return (0,
                a.Dv)(n.slice(0, o / 8))
        }
        function ee(t, e) {
            if (e = t4(e),
                (t = (0,
                    a.lE)(t)).length % 4 != 0 || t.length < 16 || t.length > 32)
                throw Error("invalid entropy");
            let r = [0]
                , n = 11;
            for (let e = 0; e < t.length; e++)
                n > 8 ? (r[r.length - 1] <<= 8,
                    r[r.length - 1] |= t[e],
                    n -= 8) : (r[r.length - 1] <<= n,
                        r[r.length - 1] |= t[e] >> 8 - n,
                        r.push(t[e] & (1 << 8 - n) - 1),
                        n += 3);
            let i = t.length / 4
                , o = (0,
                    a.lE)((0,
                        tj.JQ)(t))[0] & t2(i);
            return r[r.length - 1] <<= i,
                r[r.length - 1] |= o >> 8 - i,
                e.join(r.map(t => e.getWord(t)))
        }
        function er(t, e) {
            try {
                return et(t, e),
                    !0
            } catch (t) { }
            return !1
        }
        function en(t) {
            return ("number" != typeof t || t < 0 || t >= 2147483648 || t % 1) && tZ.throwArgumentError("invalid account index", "index", t),
                `m/44'/60'/${t}'/0/0`
        }
        let ei = new c.Yd("random/5.7.0")
            , eo = function () {
                if ("undefined" != typeof self)
                    return self;
                if ("undefined" != typeof window)
                    return window;
                if (void 0 !== r.g)
                    return r.g;
                throw Error("unable to locate global object")
            }()
            , es = eo.crypto || eo.msCrypto;
        function ea(t) {
            (t <= 0 || t > 1024 || t % 1 || t != t) && ei.throwArgumentError("invalid length", "length", t);
            let e = new Uint8Array(t);
            return es.getRandomValues(e),
                (0,
                    a.lE)(e)
        }
        es && es.getRandomValues || (ei.warn("WARNING: Missing strong random number source"),
            es = {
                getRandomValues: function (t) {
                    return ei.throwError("no secure random source avaialble", c.Yd.errors.UNSUPPORTED_OPERATION, {
                        operation: "crypto.getRandomValues"
                    })
                }
            });
        var el = r(66179)
            , eu = r.n(el)
            , ec = r(29150)
            , eh = r.n(ec);
        function ef(t) {
            return "string" == typeof t && "0x" !== t.substring(0, 2) && (t = "0x" + t),
                (0,
                    a.lE)(t)
        }
        function ed(t, e) {
            for (t = String(t); t.length < e;)
                t = "0" + t;
            return t
        }
        function ep(t) {
            return "string" == typeof t ? (0,
                O.Y0)(t, O.Uj.NFKC) : (0,
                    a.lE)(t)
        }
        function em(t, e) {
            let r = t
                , n = e.toLowerCase().split("/");
            for (let t = 0; t < n.length; t++) {
                let e = null;
                for (let i in r)
                    if (i.toLowerCase() === n[t]) {
                        e = r[i];
                        break
                    }
                if (null === e)
                    return null;
                r = e
            }
            return r
        }
        let eg = "json-wallets/5.7.0"
            , ey = new c.Yd(eg);
        function ev(t) {
            return null != t && t.mnemonic && t.mnemonic.phrase
        }
        class eb extends u.dk {
            isKeystoreAccount(t) {
                return !!(t && t._isKeystoreAccount)
            }
        }
        function ew(t, e) {
            let r = ef(em(t, "crypto/ciphertext"));
            if ((0,
                a.Dv)((0,
                    b.w)((0,
                        a.zo)([e.slice(16, 32), r]))).substring(2) !== em(t, "crypto/mac").toLowerCase())
                throw Error("invalid password");
            let n = function (t, e, r) {
                if ("aes-128-ctr" === em(t, "crypto/cipher")) {
                    let n = ef(em(t, "crypto/cipherparams/iv"))
                        , i = new (eu()).Counter(n)
                        , o = new (eu()).ModeOfOperation.ctr(e, i);
                    return (0,
                        a.lE)(o.decrypt(r))
                }
                return null
            }(t, e.slice(0, 16), r);
            n || ey.throwError("unsupported cipher", c.Yd.errors.UNSUPPORTED_OPERATION, {
                operation: "decrypt"
            });
            let i = e.slice(32, 64)
                , o = (0,
                    tw.db)(n);
            if (t.address) {
                let e = t.address.toLowerCase();
                if ("0x" !== e.substring(0, 2) && (e = "0x" + e),
                    (0,
                        y.Kn)(e) !== o)
                    throw Error("address mismatch")
            }
            let s = {
                _isKeystoreAccount: !0,
                address: o,
                privateKey: (0,
                    a.Dv)(n)
            };
            if ("0.1" === em(t, "x-ethers/version")) {
                let e = ef(em(t, "x-ethers/mnemonicCiphertext"))
                    , r = ef(em(t, "x-ethers/mnemonicCounter"))
                    , n = new (eu()).Counter(r)
                    , o = new (eu()).ModeOfOperation.ctr(i, n)
                    , l = em(t, "x-ethers/path") || t8
                    , u = em(t, "x-ethers/locale") || "en"
                    , h = (0,
                        a.lE)(o.decrypt(e));
                try {
                    let t = ee(h, u)
                        , e = t7.fromMnemonic(t, null, u).derivePath(l);
                    if (e.privateKey != s.privateKey)
                        throw Error("mnemonic mismatch");
                    s.mnemonic = e.mnemonic
                } catch (t) {
                    if (t.code !== c.Yd.errors.INVALID_ARGUMENT || "wordlist" !== t.argument)
                        throw t
                }
            }
            return new eb(s)
        }
        function eE(t, e, r, n, i) {
            return (0,
                a.lE)(tY(t, e, r, n, i))
        }
        function eA(t, e, r, n, i) {
            return Promise.resolve(eE(t, e, r, n, i))
        }
        function e_(t, e, r, n, i) {
            let o = ep(e)
                , s = em(t, "crypto/kdf");
            if (s && "string" == typeof s) {
                let e = function (t, e) {
                    return ey.throwArgumentError("invalid key-derivation function parameters", t, e)
                };
                if ("scrypt" === s.toLowerCase()) {
                    let r = ef(em(t, "crypto/kdfparams/salt"))
                        , a = parseInt(em(t, "crypto/kdfparams/n"))
                        , l = parseInt(em(t, "crypto/kdfparams/r"))
                        , u = parseInt(em(t, "crypto/kdfparams/p"));
                    a && l && u || e("kdf", s),
                        (a & a - 1) != 0 && e("N", a);
                    let c = parseInt(em(t, "crypto/kdfparams/dklen"));
                    return 32 !== c && e("dklen", c),
                        n(o, r, a, l, u, 64, i)
                }
                if ("pbkdf2" === s.toLowerCase()) {
                    let n = ef(em(t, "crypto/kdfparams/salt"))
                        , i = null
                        , s = em(t, "crypto/kdfparams/prf");
                    "hmac-sha256" === s ? i = "sha256" : "hmac-sha512" === s ? i = "sha512" : e("prf", s);
                    let a = parseInt(em(t, "crypto/kdfparams/c"))
                        , l = parseInt(em(t, "crypto/kdfparams/dklen"));
                    return 32 !== l && e("dklen", l),
                        r(o, n, a, l, i)
                }
            }
            return ey.throwArgumentError("unsupported key-derivation function", "kdf", s)
        }
        let eS = new c.Yd(eg);
        class ek extends u.dk {
            isCrowdsaleAccount(t) {
                return !!(t && t._isCrowdsaleAccount)
            }
        }
        function eP(t, e) {
            let r = JSON.parse(t);
            e = ep(e);
            let n = (0,
                y.Kn)(em(r, "ethaddr"))
                , i = ef(em(r, "encseed"));
            i && i.length % 16 == 0 || eS.throwArgumentError("invalid encseed", "json", t);
            let o = (0,
                a.lE)(tY(e, e, 2e3, 32, "sha256")).slice(0, 16)
                , s = i.slice(0, 16)
                , l = i.slice(16)
                , u = new (eu()).ModeOfOperation.cbc(o, s)
                , c = eu().padding.pkcs7.strip((0,
                    a.lE)(u.decrypt(l)))
                , h = "";
            for (let t = 0; t < c.length; t++)
                h += String.fromCharCode(c[t]);
            let f = (0,
                O.Y0)(h);
            return new ek({
                _isCrowdsaleAccount: !0,
                address: n,
                privateKey: (0,
                    b.w)(f)
            })
        }
        function eN(t) {
            let e = null;
            try {
                e = JSON.parse(t)
            } catch (t) {
                return !1
            }
            return e.encseed && e.ethaddr
        }
        function eC(t) {
            let e = null;
            try {
                e = JSON.parse(t)
            } catch (t) {
                return !1
            }
            return !!e.version && parseInt(e.version) === e.version && 3 === parseInt(e.version)
        }
        function eT(t) {
            if (eN(t))
                try {
                    return (0,
                        y.Kn)(JSON.parse(t).ethaddr)
                } catch (t) {
                    return null
                }
            if (eC(t))
                try {
                    return (0,
                        y.Kn)(JSON.parse(t).address)
                } catch (t) { }
            return null
        }
        var ex = function (t, e, r, n) {
            return new (r || (r = Promise))(function (i, o) {
                function s(t) {
                    try {
                        l(n.next(t))
                    } catch (t) {
                        o(t)
                    }
                }
                function a(t) {
                    try {
                        l(n.throw(t))
                    } catch (t) {
                        o(t)
                    }
                }
                function l(t) {
                    var e;
                    t.done ? i(t.value) : ((e = t.value) instanceof r ? e : new r(function (t) {
                        t(e)
                    }
                    )).then(s, a)
                }
                l((n = n.apply(t, e || [])).next())
            }
            )
        };
        let eR = new c.Yd("wallet/5.7.0");
        class eI extends tb.E {
            constructor(t, e) {
                var r;
                if (super(),
                    null != (r = t) && (0,
                        a.A7)(r.privateKey, 32) && null != r.address) {
                    let e = new tK.Et(t.privateKey);
                    if ((0,
                        u.zG)(this, "_signingKey", () => e),
                        (0,
                            u.zG)(this, "address", (0,
                                tw.db)(this.publicKey)),
                        this.address !== (0,
                            y.Kn)(t.address) && eR.throwArgumentError("privateKey/address mismatch", "privateKey", "[REDACTED]"),
                        function (t) {
                            let e = t.mnemonic;
                            return e && e.phrase
                        }(t)) {
                        let e = t.mnemonic;
                        (0,
                            u.zG)(this, "_mnemonic", () => ({
                                phrase: e.phrase,
                                path: e.path || t8,
                                locale: e.locale || "en"
                            }));
                        let r = this.mnemonic
                            , n = t7.fromMnemonic(r.phrase, null, r.locale).derivePath(r.path);
                        (0,
                            tw.db)(n.privateKey) !== this.address && eR.throwArgumentError("mnemonic/address mismatch", "privateKey", "[REDACTED]")
                    } else
                        (0,
                            u.zG)(this, "_mnemonic", () => null)
                } else {
                    if (tK.Et.isSigningKey(t))
                        "secp256k1" !== t.curve && eR.throwArgumentError("unsupported curve; must be secp256k1", "privateKey", "[REDACTED]"),
                            (0,
                                u.zG)(this, "_signingKey", () => t);
                    else {
                        "string" == typeof t && t.match(/^[0-9a-f]*$/i) && 64 === t.length && (t = "0x" + t);
                        let e = new tK.Et(t);
                        (0,
                            u.zG)(this, "_signingKey", () => e)
                    }
                    (0,
                        u.zG)(this, "_mnemonic", () => null),
                        (0,
                            u.zG)(this, "address", (0,
                                tw.db)(this.publicKey))
                }
                e && !tv.zt.isProvider(e) && eR.throwArgumentError("invalid provider", "provider", e),
                    (0,
                        u.zG)(this, "provider", e || null)
            }
            get mnemonic() {
                return this._mnemonic()
            }
            get privateKey() {
                return this._signingKey().privateKey
            }
            get publicKey() {
                return this._signingKey().publicKey
            }
            getAddress() {
                return Promise.resolve(this.address)
            }
            connect(t) {
                return new eI(this, t)
            }
            signTransaction(t) {
                return (0,
                    u.mE)(t).then(e => {
                        null != e.from && ((0,
                            y.Kn)(e.from) !== this.address && eR.throwArgumentError("transaction from address mismatch", "transaction.from", t.from),
                            delete e.from);
                        let r = this._signingKey().signDigest((0,
                            b.w)((0,
                                tw.qC)(e)));
                        return (0,
                            tw.qC)(e, r)
                    }
                    )
            }
            signMessage(t) {
                return ex(this, void 0, void 0, function* () {
                    return (0,
                        a.gV)(this._signingKey().signDigest(tL(t)))
                })
            }
            _signTypedData(t, e, r) {
                return ex(this, void 0, void 0, function* () {
                    let n = yield tz.E.resolveNames(t, e, r, t => (null == this.provider && eR.throwError("cannot resolve ENS names without a provider", c.Yd.errors.UNSUPPORTED_OPERATION, {
                        operation: "resolveName",
                        value: t
                    }),
                        this.provider.resolveName(t)));
                    return (0,
                        a.gV)(this._signingKey().signDigest(tz.E.hash(n.domain, e, n.value)))
                })
            }
            encrypt(t, e, r) {
                if ("function" != typeof e || r || (r = e,
                    e = {}),
                    r && "function" != typeof r)
                    throw Error("invalid callback");
                return e || (e = {}),
                    function (t, e, r, n) {
                        try {
                            if ((0,
                                y.Kn)(t.address) !== (0,
                                    tw.db)(t.privateKey))
                                throw Error("address/privateKey mismatch");
                            if (ev(t)) {
                                let e = t.mnemonic;
                                if (t7.fromMnemonic(e.phrase, null, e.locale).derivePath(e.path || t8).privateKey != t.privateKey)
                                    throw Error("mnemonic mismatch")
                            }
                        } catch (t) {
                            return Promise.reject(t)
                        }
                        "function" != typeof r || n || (n = r,
                            r = {}),
                            r || (r = {});
                        let i = (0,
                            a.lE)(t.privateKey)
                            , o = ep(e)
                            , s = null
                            , l = null
                            , u = null;
                        if (ev(t)) {
                            let e = t.mnemonic;
                            s = (0,
                                a.lE)(et(e.phrase, e.locale || "en")),
                                l = e.path || t8,
                                u = e.locale || "en"
                        }
                        let c = r.client;
                        c || (c = "ethers.js");
                        let h = null;
                        h = r.salt ? (0,
                            a.lE)(r.salt) : ea(32);
                        let f = null;
                        if (r.iv) {
                            if (16 !== (f = (0,
                                a.lE)(r.iv)).length)
                                throw Error("invalid iv")
                        } else
                            f = ea(16);
                        let d = null;
                        if (r.uuid) {
                            if (16 !== (d = (0,
                                a.lE)(r.uuid)).length)
                                throw Error("invalid uuid")
                        } else
                            d = ea(16);
                        let p = 131072
                            , m = 8
                            , g = 1;
                        return r.scrypt && (r.scrypt.N && (p = r.scrypt.N),
                            r.scrypt.r && (m = r.scrypt.r),
                            r.scrypt.p && (g = r.scrypt.p)),
                            eh().scrypt(o, h, p, m, g, 64, n).then(e => {
                                let r = (e = (0,
                                    a.lE)(e)).slice(0, 16)
                                    , n = e.slice(16, 32)
                                    , o = e.slice(32, 64)
                                    , y = new (eu()).Counter(f)
                                    , v = new (eu()).ModeOfOperation.ctr(r, y)
                                    , w = (0,
                                        a.lE)(v.encrypt(i))
                                    , E = (0,
                                        b.w)((0,
                                            a.zo)([n, w]))
                                    , A = {
                                        address: t.address.substring(2).toLowerCase(),
                                        id: function (t) {
                                            let e = (0,
                                                a.lE)(t);
                                            e[6] = 15 & e[6] | 64,
                                                e[8] = 63 & e[8] | 128;
                                            let r = (0,
                                                a.Dv)(e);
                                            return [r.substring(2, 10), r.substring(10, 14), r.substring(14, 18), r.substring(18, 22), r.substring(22, 34)].join("-")
                                        }(d),
                                        version: 3,
                                        crypto: {
                                            cipher: "aes-128-ctr",
                                            cipherparams: {
                                                iv: (0,
                                                    a.Dv)(f).substring(2)
                                            },
                                            ciphertext: (0,
                                                a.Dv)(w).substring(2),
                                            kdf: "scrypt",
                                            kdfparams: {
                                                salt: (0,
                                                    a.Dv)(h).substring(2),
                                                n: p,
                                                dklen: 32,
                                                p: g,
                                                r: m
                                            },
                                            mac: E.substring(2)
                                        }
                                    };
                                if (s) {
                                    let t = ea(16)
                                        , e = new (eu()).Counter(t)
                                        , r = new (eu()).ModeOfOperation.ctr(o, e)
                                        , n = (0,
                                            a.lE)(r.encrypt(s))
                                        , i = new Date
                                        , h = i.getUTCFullYear() + "-" + ed(i.getUTCMonth() + 1, 2) + "-" + ed(i.getUTCDate(), 2) + "T" + ed(i.getUTCHours(), 2) + "-" + ed(i.getUTCMinutes(), 2) + "-" + ed(i.getUTCSeconds(), 2) + ".0Z";
                                    A["x-ethers"] = {
                                        client: c,
                                        gethFilename: "UTC--" + h + "--" + A.address,
                                        mnemonicCounter: (0,
                                            a.Dv)(t).substring(2),
                                        mnemonicCiphertext: (0,
                                            a.Dv)(n).substring(2),
                                        path: l,
                                        locale: u,
                                        version: "0.1"
                                    }
                                }
                                return JSON.stringify(A)
                            }
                            )
                    }(this, t, e, r)
            }
            static createRandom(t) {
                let e = ea(16);
                t || (t = {}),
                    t.extraEntropy && (e = (0,
                        a.lE)((0,
                            a.p3)((0,
                                b.w)((0,
                                    a.zo)([e, t.extraEntropy])), 0, 16)));
                let r = ee(e, t.locale);
                return eI.fromMnemonic(r, t.path, t.locale)
            }
            static fromEncryptedJson(t, e, r) {
                return (function (t, e, r) {
                    if (eN(t)) {
                        r && r(0);
                        let n = eP(t, e);
                        return r && r(1),
                            Promise.resolve(n)
                    }
                    return eC(t) ? function (t, e, r) {
                        var n, i, o, s;
                        return n = this,
                            i = void 0,
                            o = void 0,
                            s = function* () {
                                let n = JSON.parse(t)
                                    , i = yield e_(n, e, eA, eh().scrypt, r);
                                return ew(n, i)
                            }
                            ,
                            new (o || (o = Promise))(function (t, e) {
                                function r(t) {
                                    try {
                                        l(s.next(t))
                                    } catch (t) {
                                        e(t)
                                    }
                                }
                                function a(t) {
                                    try {
                                        l(s.throw(t))
                                    } catch (t) {
                                        e(t)
                                    }
                                }
                                function l(e) {
                                    var n;
                                    e.done ? t(e.value) : ((n = e.value) instanceof o ? n : new o(function (t) {
                                        t(n)
                                    }
                                    )).then(r, a)
                                }
                                l((s = s.apply(n, i || [])).next())
                            }
                            )
                    }(t, e, r) : Promise.reject(Error("invalid JSON wallet"))
                }
                )(t, e, r).then(t => new eI(t))
            }
            static fromEncryptedJsonSync(t, e) {
                return new eI(function (t, e) {
                    if (eN(t))
                        return eP(t, e);
                    if (eC(t))
                        return function (t, e) {
                            let r = JSON.parse(t)
                                , n = e_(r, e, eE, eh().syncScrypt);
                            return ew(r, n)
                        }(t, e);
                    throw Error("invalid JSON wallet")
                }(t, e))
            }
            static fromMnemonic(t, e, r) {
                return e || (e = t8),
                    new eI(t7.fromMnemonic(t, null, r).derivePath(e))
            }
        }
        function eO(t, e) {
            return (0,
                tw.RJ)(tL(t), e)
        }
        function eM(t, e, r, n) {
            return (0,
                tw.RJ)(tz.E.hash(t, e, r), n)
        }
        var eB = r(5572)
            , eD = r(76726);
        let eF = "Ξ";
        var eU = r(30795)
            , eL = r(26790)
            , ez = r(54259)
            , eG = r(99227)
            , ej = r(12312)
            , eY = r(61127);
        let eK = new c.Yd(ej.i)
            , eq = "_gg7wSSi0KMBsdKnGVfHDueq6xMB9EkC";
        class eH extends eG.q {
            constructor(t, e) {
                let r = new eJ(t, e);
                super(r.connection.url.replace(/^http/i, "ws").replace(".alchemyapi.", ".ws.alchemyapi."), r.network),
                    (0,
                        u.zG)(this, "apiKey", r.apiKey)
            }
            isCommunityResource() {
                return this.apiKey === eq
            }
        }
        class eJ extends eY.l {
            static getWebSocketProvider(t, e) {
                return new eH(t, e)
            }
            static getApiKey(t) {
                return null == t ? eq : (t && "string" != typeof t && eK.throwArgumentError("invalid apiKey", "apiKey", t),
                    t)
            }
            static getUrl(t, e) {
                let r = null;
                switch (t.name) {
                    case "homestead":
                        r = "eth-mainnet.alchemyapi.io/v2/";
                        break;
                    case "goerli":
                        r = "eth-goerli.g.alchemy.com/v2/";
                        break;
                    case "matic":
                        r = "polygon-mainnet.g.alchemy.com/v2/";
                        break;
                    case "maticmum":
                        r = "polygon-mumbai.g.alchemy.com/v2/";
                        break;
                    case "arbitrum":
                        r = "arb-mainnet.g.alchemy.com/v2/";
                        break;
                    case "arbitrum-goerli":
                        r = "arb-goerli.g.alchemy.com/v2/";
                        break;
                    case "optimism":
                        r = "opt-mainnet.g.alchemy.com/v2/";
                        break;
                    case "optimism-goerli":
                        r = "opt-goerli.g.alchemy.com/v2/";
                        break;
                    default:
                        eK.throwArgumentError("unsupported network", "network", arguments[0])
                }
                return {
                    allowGzip: !0,
                    url: "https://" + r + e,
                    throttleCallback: (t, r) => (e === eq && (0,
                        ez.vh)(),
                        Promise.resolve(!0))
                }
            }
            isCommunityResource() {
                return this.apiKey === eq
            }
        }
        let eV = new c.Yd(ej.i)
            , eW = "9f7d929b018cdffb338517efa06f58359e86ff1ffd350bc889738523659e7972";
        class eQ extends eY.l {
            isCommunityResource() {
                return this.apiKey === eW
            }
            static getApiKey(t) {
                return null == t ? eW : t
            }
            static getUrl(t, e) {
                null == e && (e = eW);
                let r = {
                    allowGzip: !0,
                    url: "https://" + function (t) {
                        switch (t) {
                            case "homestead":
                                return "rpc.ankr.com/eth/";
                            case "ropsten":
                                return "rpc.ankr.com/eth_ropsten/";
                            case "rinkeby":
                                return "rpc.ankr.com/eth_rinkeby/";
                            case "goerli":
                                return "rpc.ankr.com/eth_goerli/";
                            case "matic":
                                return "rpc.ankr.com/polygon/";
                            case "arbitrum":
                                return "rpc.ankr.com/arbitrum/"
                        }
                        return eV.throwArgumentError("unsupported network", "name", t)
                    }(t.name) + e,
                    throttleCallback: (t, r) => (e.apiKey === eW && (0,
                        ez.vh)(),
                        Promise.resolve(!0))
                };
                return null != e.projectSecret && (r.user = "",
                    r.password = e.projectSecret),
                    r
            }
        }
        let e$ = new c.Yd(ej.i);
        class eX extends eY.l {
            static getApiKey(t) {
                return null != t && e$.throwArgumentError("apiKey not supported for cloudflare", "apiKey", t),
                    null
            }
            static getUrl(t, e) {
                let r = null;
                return "homestead" === t.name ? r = "https://cloudflare-eth.com/" : e$.throwArgumentError("unsupported network", "network", arguments[0]),
                    r
            }
            perform(t, e) {
                var r, n, i, o;
                let s = Object.create(null, {
                    perform: {
                        get: () => super.perform
                    }
                });
                return r = this,
                    n = void 0,
                    i = void 0,
                    o = function* () {
                        return "getBlockNumber" === t ? (yield s.perform.call(this, "getBlock", {
                            blockTag: "latest"
                        })).number : s.perform.call(this, t, e)
                    }
                    ,
                    new (i || (i = Promise))(function (t, e) {
                        function s(t) {
                            try {
                                l(o.next(t))
                            } catch (t) {
                                e(t)
                            }
                        }
                        function a(t) {
                            try {
                                l(o.throw(t))
                            } catch (t) {
                                e(t)
                            }
                        }
                        function l(e) {
                            var r;
                            e.done ? t(e.value) : ((r = e.value) instanceof i ? r : new i(function (t) {
                                t(r)
                            }
                            )).then(s, a)
                        }
                        l((o = o.apply(r, n || [])).next())
                    }
                    )
            }
        }
        var eZ = r(39318)
            , e0 = function (t, e, r, n) {
                return new (r || (r = Promise))(function (i, o) {
                    function s(t) {
                        try {
                            l(n.next(t))
                        } catch (t) {
                            o(t)
                        }
                    }
                    function a(t) {
                        try {
                            l(n.throw(t))
                        } catch (t) {
                            o(t)
                        }
                    }
                    function l(t) {
                        var e;
                        t.done ? i(t.value) : ((e = t.value) instanceof r ? e : new r(function (t) {
                            t(e)
                        }
                        )).then(s, a)
                    }
                    l((n = n.apply(t, e || [])).next())
                }
                )
            };
        let e1 = new c.Yd(ej.i);
        function e2(t) {
            let e = {};
            for (let r in t) {
                if (null == t[r])
                    continue;
                let n = t[r];
                ("type" !== r || 0 !== n) && (n = ({
                    type: !0,
                    gasLimit: !0,
                    gasPrice: !0,
                    maxFeePerGs: !0,
                    maxPriorityFeePerGas: !0,
                    nonce: !0,
                    value: !0
                })[r] ? (0,
                    a.$P)((0,
                        a.Dv)(n)) : "accessList" === r ? "[" + (0,
                            tw.z7)(n).map(t => `{address:"${t.address}",storageKeys:["${t.storageKeys.join('","')}"]}`).join(",") + "]" : (0,
                                a.Dv)(n),
                    e[r] = n)
            }
            return e
        }
        function e3(t) {
            if (0 == t.status && ("No records found" === t.message || "No transactions found" === t.message))
                return t.result;
            if (1 != t.status || "string" != typeof t.message || !t.message.match(/^OK/)) {
                let e = Error("invalid response");
                throw e.result = JSON.stringify(t),
                (t.result || "").toLowerCase().indexOf("rate limit") >= 0 && (e.throttleRetry = !0),
                e
            }
            return t.result
        }
        function e6(t) {
            if (t && 0 == t.status && "NOTOK" == t.message && (t.result || "").toLowerCase().indexOf("rate limit") >= 0) {
                let e = Error("throttled response");
                throw e.result = JSON.stringify(t),
                e.throttleRetry = !0,
                e
            }
            if ("2.0" != t.jsonrpc) {
                let e = Error("invalid response");
                throw e.result = JSON.stringify(t),
                e
            }
            if (t.error) {
                let e = Error(t.error.message || "unknown error");
                throw t.error.code && (e.code = t.error.code),
                t.error.data && (e.data = t.error.data),
                e
            }
            return t.result
        }
        function e4(t) {
            if ("pending" === t)
                throw Error("pending not supported");
            return "latest" === t ? t : parseInt(t.substring(2), 16)
        }
        function e5(t, e, r) {
            if ("call" === t && e.code === c.Yd.errors.SERVER_ERROR) {
                let t = e.error;
                if (t && (t.message.match(/reverted/i) || t.message.match(/VM execution error/i))) {
                    let r = t.data;
                    if (r && (r = "0x" + r.replace(/^.*0x/i, "")),
                        (0,
                            a.A7)(r))
                        return r;
                    e1.throwError("missing revert data in call exception", c.Yd.errors.CALL_EXCEPTION, {
                        error: e,
                        data: "0x"
                    })
                }
            }
            let n = e.message;
            throw e.code === c.Yd.errors.SERVER_ERROR && (e.error && "string" == typeof e.error.message ? n = e.error.message : "string" == typeof e.body ? n = e.body : "string" == typeof e.responseText && (n = e.responseText)),
            (n = (n || "").toLowerCase()).match(/insufficient funds/) && e1.throwError("insufficient funds for intrinsic transaction cost", c.Yd.errors.INSUFFICIENT_FUNDS, {
                error: e,
                method: t,
                transaction: r
            }),
            n.match(/same hash was already imported|transaction nonce is too low|nonce too low/) && e1.throwError("nonce has already been used", c.Yd.errors.NONCE_EXPIRED, {
                error: e,
                method: t,
                transaction: r
            }),
            n.match(/another transaction with same nonce/) && e1.throwError("replacement fee too low", c.Yd.errors.REPLACEMENT_UNDERPRICED, {
                error: e,
                method: t,
                transaction: r
            }),
            n.match(/execution failed due to an exception|execution reverted/) && e1.throwError("cannot estimate gas; transaction may fail or may require manual gas limit", c.Yd.errors.UNPREDICTABLE_GAS_LIMIT, {
                error: e,
                method: t,
                transaction: r
            }),
            e
        }
        class e8 extends eL.Zk {
            constructor(t, e) {
                super(t),
                    (0,
                        u.zG)(this, "baseUrl", this.getBaseUrl()),
                    (0,
                        u.zG)(this, "apiKey", e || null)
            }
            getBaseUrl() {
                switch (this.network ? this.network.name : "invalid") {
                    case "homestead":
                        return "https://api.etherscan.io";
                    case "goerli":
                        return "https://api-goerli.etherscan.io";
                    case "sepolia":
                        return "https://api-sepolia.etherscan.io";
                    case "matic":
                        return "https://api.polygonscan.com";
                    case "maticmum":
                        return "https://api-testnet.polygonscan.com";
                    case "arbitrum":
                        return "https://api.arbiscan.io";
                    case "arbitrum-goerli":
                        return "https://api-goerli.arbiscan.io";
                    case "optimism":
                        return "https://api-optimistic.etherscan.io";
                    case "optimism-goerli":
                        return "https://api-goerli-optimistic.etherscan.io"
                }
                return e1.throwArgumentError("unsupported network", "network", this.network.name)
            }
            getUrl(t, e) {
                let r = Object.keys(e).reduce((t, r) => {
                    let n = e[r];
                    return null != n && (t += `&${r}=${n}`),
                        t
                }
                    , "")
                    , n = this.apiKey ? `&apikey=${this.apiKey}` : "";
                return `${this.baseUrl}/api?module=${t}${r}${n}`
            }
            getPostUrl() {
                return `${this.baseUrl}/api`
            }
            getPostData(t, e) {
                return e.module = t,
                    e.apikey = this.apiKey,
                    e
            }
            fetch(t, e, r) {
                return e0(this, void 0, void 0, function* () {
                    let n = r ? this.getPostUrl() : this.getUrl(t, e)
                        , i = r ? this.getPostData(t, e) : null
                        , o = "proxy" === t ? e6 : e3;
                    this.emit("debug", {
                        action: "request",
                        request: n,
                        provider: this
                    });
                    let s = {
                        url: n,
                        throttleSlotInterval: 1e3,
                        throttleCallback: (t, e) => (this.isCommunityResource() && (0,
                            ez.vh)(),
                            Promise.resolve(!0))
                    }
                        , a = null;
                    i && (s.headers = {
                        "content-type": "application/x-www-form-urlencoded; charset=UTF-8"
                    },
                        a = Object.keys(i).map(t => `${t}=${i[t]}`).join("&"));
                    let l = yield (0,
                        eZ.rd)(s, a, o || e6);
                    return this.emit("debug", {
                        action: "response",
                        request: n,
                        response: (0,
                            u.p$)(l),
                        provider: this
                    }),
                        l
                })
            }
            detectNetwork() {
                return e0(this, void 0, void 0, function* () {
                    return this.network
                })
            }
            perform(t, e) {
                let r = Object.create(null, {
                    perform: {
                        get: () => super.perform
                    }
                });
                return e0(this, void 0, void 0, function* () {
                    switch (t) {
                        case "getBlockNumber":
                            return this.fetch("proxy", {
                                action: "eth_blockNumber"
                            });
                        case "getGasPrice":
                            return this.fetch("proxy", {
                                action: "eth_gasPrice"
                            });
                        case "getBalance":
                            return this.fetch("account", {
                                action: "balance",
                                address: e.address,
                                tag: e.blockTag
                            });
                        case "getTransactionCount":
                            return this.fetch("proxy", {
                                action: "eth_getTransactionCount",
                                address: e.address,
                                tag: e.blockTag
                            });
                        case "getCode":
                            return this.fetch("proxy", {
                                action: "eth_getCode",
                                address: e.address,
                                tag: e.blockTag
                            });
                        case "getStorageAt":
                            return this.fetch("proxy", {
                                action: "eth_getStorageAt",
                                address: e.address,
                                position: e.position,
                                tag: e.blockTag
                            });
                        case "sendTransaction":
                            return this.fetch("proxy", {
                                action: "eth_sendRawTransaction",
                                hex: e.signedTransaction
                            }, !0).catch(t => e5("sendTransaction", t, e.signedTransaction));
                        case "getBlock":
                            if (e.blockTag)
                                return this.fetch("proxy", {
                                    action: "eth_getBlockByNumber",
                                    tag: e.blockTag,
                                    boolean: e.includeTransactions ? "true" : "false"
                                });
                            throw Error("getBlock by blockHash not implemented");
                        case "getTransaction":
                            return this.fetch("proxy", {
                                action: "eth_getTransactionByHash",
                                txhash: e.transactionHash
                            });
                        case "getTransactionReceipt":
                            return this.fetch("proxy", {
                                action: "eth_getTransactionReceipt",
                                txhash: e.transactionHash
                            });
                        case "call":
                            {
                                if ("latest" !== e.blockTag)
                                    throw Error("EtherscanProvider does not support blockTag for call");
                                let t = e2(e.transaction);
                                t.module = "proxy",
                                    t.action = "eth_call";
                                try {
                                    return yield this.fetch("proxy", t, !0)
                                } catch (t) {
                                    return e5("call", t, e.transaction)
                                }
                            }
                        case "estimateGas":
                            {
                                let t = e2(e.transaction);
                                t.module = "proxy",
                                    t.action = "eth_estimateGas";
                                try {
                                    return yield this.fetch("proxy", t, !0)
                                } catch (t) {
                                    return e5("estimateGas", t, e.transaction)
                                }
                            }
                        case "getLogs":
                            {
                                let t = {
                                    action: "getLogs"
                                };
                                if (e.filter.fromBlock && (t.fromBlock = e4(e.filter.fromBlock)),
                                    e.filter.toBlock && (t.toBlock = e4(e.filter.toBlock)),
                                    e.filter.address && (t.address = e.filter.address),
                                    e.filter.topics && e.filter.topics.length > 0 && (e.filter.topics.length > 1 && e1.throwError("unsupported topic count", c.Yd.errors.UNSUPPORTED_OPERATION, {
                                        topics: e.filter.topics
                                    }),
                                        1 === e.filter.topics.length)) {
                                    let r = e.filter.topics[0];
                                    ("string" != typeof r || 66 !== r.length) && e1.throwError("unsupported topic format", c.Yd.errors.UNSUPPORTED_OPERATION, {
                                        topic0: r
                                    }),
                                        t.topic0 = r
                                }
                                let r = yield this.fetch("logs", t)
                                    , n = {};
                                for (let t = 0; t < r.length; t++) {
                                    let e = r[t];
                                    if (null == e.blockHash) {
                                        if (null == n[e.blockNumber]) {
                                            let t = yield this.getBlock(e.blockNumber);
                                            t && (n[e.blockNumber] = t.hash)
                                        }
                                        e.blockHash = n[e.blockNumber]
                                    }
                                }
                                return r
                            }
                        case "getEtherPrice":
                            if ("homestead" !== this.network.name)
                                return 0;
                            return parseFloat((yield this.fetch("stats", {
                                action: "ethprice"
                            })).ethusd)
                    }
                    return r.perform.call(this, t, e)
                })
            }
            getHistory(t, e, r) {
                return e0(this, void 0, void 0, function* () {
                    let n = {
                        action: "txlist",
                        address: yield this.resolveName(t),
                        startblock: null == e ? 0 : e,
                        endblock: null == r ? 99999999 : r,
                        sort: "asc"
                    };
                    return (yield this.fetch("account", n)).map(t => {
                        ["contractAddress", "to"].forEach(function (e) {
                            "" == t[e] && delete t[e]
                        }),
                            null == t.creates && null != t.contractAddress && (t.creates = t.contractAddress);
                        let e = this.formatter.transactionResponse(t);
                        return t.timeStamp && (e.timestamp = parseInt(t.timeStamp)),
                            e
                    }
                    )
                })
            }
            isCommunityResource() {
                return null == this.apiKey
            }
        }
        function e7(t) {
            t = t.slice();
            for (let e = t.length - 1; e > 0; e--) {
                let r = Math.floor(Math.random() * (e + 1))
                    , n = t[e];
                t[e] = t[r],
                    t[r] = n
            }
            return t
        }
        var e9 = function (t, e, r, n) {
            return new (r || (r = Promise))(function (i, o) {
                function s(t) {
                    try {
                        l(n.next(t))
                    } catch (t) {
                        o(t)
                    }
                }
                function a(t) {
                    try {
                        l(n.throw(t))
                    } catch (t) {
                        o(t)
                    }
                }
                function l(t) {
                    var e;
                    t.done ? i(t.value) : ((e = t.value) instanceof r ? e : new r(function (t) {
                        t(e)
                    }
                    )).then(s, a)
                }
                l((n = n.apply(t, e || [])).next())
            }
            )
        };
        let rt = new c.Yd(ej.i);
        function re() {
            return new Date().getTime()
        }
        function rr(t) {
            let e = null;
            for (let r = 0; r < t.length; r++) {
                let n = t[r];
                if (null == n)
                    return null;
                e ? e.name === n.name && e.chainId === n.chainId && (e.ensAddress === n.ensAddress || null == e.ensAddress && null == n.ensAddress) || rt.throwArgumentError("provider mismatch", "networks", t) : e = n
            }
            return e
        }
        function rn(t, e) {
            let r = Math.floor((t = t.slice().sort()).length / 2);
            if (t.length % 2)
                return t[r];
            let n = t[r - 1]
                , i = t[r];
            return null != e && Math.abs(n - i) > e ? null : (n + i) / 2
        }
        function ri(t) {
            if (null === t)
                return "null";
            if ("number" == typeof t || "boolean" == typeof t)
                return JSON.stringify(t);
            if ("string" == typeof t)
                return t;
            if (l.O$.isBigNumber(t))
                return t.toString();
            if (Array.isArray(t))
                return JSON.stringify(t.map(t => ri(t)));
            if ("object" == typeof t) {
                let e = Object.keys(t);
                return e.sort(),
                    "{" + e.map(e => {
                        let r = t[e];
                        return r = "function" == typeof r ? "[function]" : ri(r),
                            JSON.stringify(e) + ":" + r
                    }
                    ).join(",") + "}"
            }
            throw Error("unknown value type: " + typeof t)
        }
        let ro = 1;
        function rs(t) {
            let e = null
                , r = null
                , n = new Promise(n => {
                    r = setTimeout(e = function () {
                        r && (clearTimeout(r),
                            r = null),
                            n()
                    }
                        , t)
                }
                );
            return {
                cancel: e,
                getPromise: function () {
                    return n
                },
                wait: t => n = n.then(t)
            }
        }
        let ra = [c.Yd.errors.CALL_EXCEPTION, c.Yd.errors.INSUFFICIENT_FUNDS, c.Yd.errors.NONCE_EXPIRED, c.Yd.errors.REPLACEMENT_UNDERPRICED, c.Yd.errors.UNPREDICTABLE_GAS_LIMIT]
            , rl = ["address", "args", "errorArgs", "errorSignature", "method", "transaction"];
        function ru(t, e) {
            let r = {
                weight: t.weight
            };
            return Object.defineProperty(r, "provider", {
                get: () => t.provider
            }),
                t.start && (r.start = t.start),
                e && (r.duration = e - t.start),
                t.done && (t.error ? r.error = t.error : r.result = t.result || null),
                r
        }
        function rc(t, e) {
            return e9(this, void 0, void 0, function* () {
                let r = t.provider;
                return null != r.blockNumber && r.blockNumber >= e || -1 === e ? r : (0,
                    eZ.$l)(() => new Promise((n, i) => {
                        setTimeout(function () {
                            return r.blockNumber >= e ? n(r) : t.cancelled ? n(null) : n(void 0)
                        }, 0)
                    }
                    ), {
                        oncePoll: r
                    })
            })
        }
        class rh extends eL.Zk {
            constructor(t, e) {
                0 === t.length && rt.throwArgumentError("missing providers", "providers", t);
                let r = t.map((t, e) => {
                    if (tv.zt.isProvider(t)) {
                        let e = (0,
                            ez.Gp)(t) ? 2e3 : 750;
                        return Object.freeze({
                            provider: t,
                            weight: 1,
                            stallTimeout: e,
                            priority: 1
                        })
                    }
                    let r = (0,
                        u.DC)(t);
                    null == r.priority && (r.priority = 1),
                        null == r.stallTimeout && (r.stallTimeout = (0,
                            ez.Gp)(t) ? 2e3 : 750),
                        null == r.weight && (r.weight = 1);
                    let n = r.weight;
                    return (n % 1 || n > 512 || n < 1) && rt.throwArgumentError("invalid weight; must be integer in [1, 512]", `providers[${e}].weight`, n),
                        Object.freeze(r)
                }
                )
                    , n = r.reduce((t, e) => t + e.weight, 0);
                null == e ? e = n / 2 : e > n && rt.throwArgumentError("quorum will always fail; larger than total weight", "quorum", e);
                let i = rr(r.map(t => t.provider.network));
                null == i && (i = new Promise((t, e) => {
                    setTimeout(() => {
                        this.detectNetwork().then(t, e)
                    }
                        , 0)
                }
                )),
                    super(i),
                    (0,
                        u.zG)(this, "providerConfigs", Object.freeze(r)),
                    (0,
                        u.zG)(this, "quorum", e),
                    this._highestBlockNumber = -1
            }
            detectNetwork() {
                return e9(this, void 0, void 0, function* () {
                    return rr((yield Promise.all(this.providerConfigs.map(t => t.provider.getNetwork()))))
                })
            }
            perform(t, e) {
                return e9(this, void 0, void 0, function* () {
                    if ("sendTransaction" === t) {
                        let t = yield Promise.all(this.providerConfigs.map(t => t.provider.sendTransaction(e.signedTransaction).then(t => t.hash, t => t)));
                        for (let e = 0; e < t.length; e++) {
                            let r = t[e];
                            if ("string" == typeof r)
                                return r
                        }
                        throw t[0]
                    }
                    -1 === this._highestBlockNumber && "getBlockNumber" !== t && (yield this.getBlockNumber());
                    let r = function (t, e, r) {
                        var n, i;
                        let o = ri;
                        switch (e) {
                            case "getBlockNumber":
                                return function (e) {
                                    let r = e.map(t => t.result)
                                        , n = rn(e.map(t => t.result), 2);
                                    if (null != n)
                                        return n = Math.ceil(n),
                                            r.indexOf(n + 1) >= 0 && n++,
                                            n >= t._highestBlockNumber && (t._highestBlockNumber = n),
                                            t._highestBlockNumber
                                }
                                    ;
                            case "getGasPrice":
                                return function (t) {
                                    let e = t.map(t => t.result);
                                    return e.sort(),
                                        e[Math.floor(e.length / 2)]
                                }
                                    ;
                            case "getEtherPrice":
                                return function (t) {
                                    return rn(t.map(t => t.result))
                                }
                                    ;
                            case "getBalance":
                            case "getTransactionCount":
                            case "getCode":
                            case "getStorageAt":
                            case "call":
                            case "estimateGas":
                            case "getLogs":
                                break;
                            case "getTransaction":
                            case "getTransactionReceipt":
                                o = function (t) {
                                    return null == t ? null : ((t = (0,
                                        u.DC)(t)).confirmations = -1,
                                        ri(t))
                                }
                                    ;
                                break;
                            case "getBlock":
                                o = r.includeTransactions ? function (t) {
                                    return null == t ? null : ((t = (0,
                                        u.DC)(t)).transactions = t.transactions.map(t => ((t = (0,
                                            u.DC)(t)).confirmations = -1,
                                            t)),
                                        ri(t))
                                }
                                    : function (t) {
                                        return null == t ? null : ri(t)
                                    }
                                    ;
                                break;
                            default:
                                throw Error("unknown method: " + e)
                        }
                        return n = o,
                            i = t.quorum,
                            function (t) {
                                let e = {};
                                t.forEach(t => {
                                    let r = n(t.result);
                                    e[r] || (e[r] = {
                                        count: 0,
                                        result: t.result
                                    }),
                                        e[r].count++
                                }
                                );
                                let r = Object.keys(e);
                                for (let t = 0; t < r.length; t++) {
                                    let n = e[r[t]];
                                    if (n.count >= i)
                                        return n.result
                                }
                            }
                    }(this, t, e)
                        , n = e7(this.providerConfigs.map(u.DC));
                    n.sort((t, e) => t.priority - e.priority);
                    let i = this._highestBlockNumber
                        , o = 0
                        , s = !0;
                    for (; ;) {
                        let l = re()
                            , h = n.filter(t => t.runner && l - t.start < t.stallTimeout).reduce((t, e) => t + e.weight, 0);
                        for (; h < this.quorum && o < n.length;) {
                            let r = n[o++]
                                , s = ro++;
                            r.start = re(),
                                r.staller = rs(r.stallTimeout),
                                r.staller.wait(() => {
                                    r.staller = null
                                }
                                ),
                                r.runner = (function (t, e, r, n) {
                                    return e9(this, void 0, void 0, function* () {
                                        let i = t.provider;
                                        switch (r) {
                                            case "getBlockNumber":
                                            case "getGasPrice":
                                                return i[r]();
                                            case "getEtherPrice":
                                                if (i.getEtherPrice)
                                                    return i.getEtherPrice();
                                                break;
                                            case "getBalance":
                                            case "getTransactionCount":
                                            case "getCode":
                                                return n.blockTag && (0,
                                                    a.A7)(n.blockTag) && (i = yield rc(t, e)),
                                                    i[r](n.address, n.blockTag || "latest");
                                            case "getStorageAt":
                                                return n.blockTag && (0,
                                                    a.A7)(n.blockTag) && (i = yield rc(t, e)),
                                                    i.getStorageAt(n.address, n.position, n.blockTag || "latest");
                                            case "getBlock":
                                                return n.blockTag && (0,
                                                    a.A7)(n.blockTag) && (i = yield rc(t, e)),
                                                    i[n.includeTransactions ? "getBlockWithTransactions" : "getBlock"](n.blockTag || n.blockHash);
                                            case "call":
                                            case "estimateGas":
                                                if (n.blockTag && (0,
                                                    a.A7)(n.blockTag) && (i = yield rc(t, e)),
                                                    "call" === r && n.blockTag)
                                                    return i[r](n.transaction, n.blockTag);
                                                return i[r](n.transaction);
                                            case "getTransaction":
                                            case "getTransactionReceipt":
                                                return i[r](n.transactionHash);
                                            case "getLogs":
                                                {
                                                    let r = n.filter;
                                                    return (r.fromBlock && (0,
                                                        a.A7)(r.fromBlock) || r.toBlock && (0,
                                                            a.A7)(r.toBlock)) && (i = yield rc(t, e)),
                                                        i.getLogs(r)
                                                }
                                        }
                                        return rt.throwError("unknown method error", c.Yd.errors.UNKNOWN_ERROR, {
                                            method: r,
                                            params: n
                                        })
                                    })
                                }
                                )(r, i, t, e).then(n => {
                                    r.done = !0,
                                        r.result = n,
                                        this.listenerCount("debug") && this.emit("debug", {
                                            action: "request",
                                            rid: s,
                                            backend: ru(r, re()),
                                            request: {
                                                method: t,
                                                params: (0,
                                                    u.p$)(e)
                                            },
                                            provider: this
                                        })
                                }
                                    , n => {
                                        r.done = !0,
                                            r.error = n,
                                            this.listenerCount("debug") && this.emit("debug", {
                                                action: "request",
                                                rid: s,
                                                backend: ru(r, re()),
                                                request: {
                                                    method: t,
                                                    params: (0,
                                                        u.p$)(e)
                                                },
                                                provider: this
                                            })
                                    }
                                ),
                                this.listenerCount("debug") && this.emit("debug", {
                                    action: "request",
                                    rid: s,
                                    backend: ru(r, null),
                                    request: {
                                        method: t,
                                        params: (0,
                                            u.p$)(e)
                                    },
                                    provider: this
                                }),
                                h += r.weight
                        }
                        let f = [];
                        n.forEach(t => {
                            !t.done && t.runner && (f.push(t.runner),
                                t.staller && f.push(t.staller.getPromise()))
                        }
                        ),
                            f.length && (yield Promise.race(f));
                        let d = n.filter(t => t.done && null == t.error);
                        if (d.length >= this.quorum) {
                            let t = r(d);
                            if (void 0 !== t)
                                return n.forEach(t => {
                                    t.staller && t.staller.cancel(),
                                        t.cancelled = !0
                                }
                                ),
                                    t;
                            s || (yield rs(100).getPromise()),
                                s = !1
                        }
                        let p = n.reduce((t, e) => {
                            if (!e.done || null == e.error)
                                return t;
                            let r = e.error.code;
                            return ra.indexOf(r) >= 0 && (t[r] || (t[r] = {
                                error: e.error,
                                weight: 0
                            }),
                                t[r].weight += e.weight),
                                t
                        }
                            , {});
                        if (Object.keys(p).forEach(t => {
                            let e = p[t];
                            if (e.weight < this.quorum)
                                return;
                            n.forEach(t => {
                                t.staller && t.staller.cancel(),
                                    t.cancelled = !0
                            }
                            );
                            let r = e.error
                                , i = {};
                            rl.forEach(t => {
                                null != r[t] && (i[t] = r[t])
                            }
                            ),
                                rt.throwError(r.reason || r.message, t, i)
                        }
                        ),
                            0 === n.filter(t => !t.done).length)
                            break
                    }
                    return n.forEach(t => {
                        t.staller && t.staller.cancel(),
                            t.cancelled = !0
                    }
                    ),
                        rt.throwError("failed to meet quorum", c.Yd.errors.SERVER_ERROR, {
                            method: t,
                            params: e,
                            results: n.map(t => ru(t)),
                            provider: this
                        })
                })
            }
        }
        let rf = null;
        var rd = r(6384)
            , rp = r(46795);
        class rm extends rp.r {
            send(t, e) {
                let r = {
                    method: t,
                    params: e,
                    id: this._nextId++,
                    jsonrpc: "2.0"
                };
                null == this._pendingBatch && (this._pendingBatch = []);
                let n = {
                    request: r,
                    resolve: null,
                    reject: null
                }
                    , i = new Promise((t, e) => {
                        n.resolve = t,
                            n.reject = e
                    }
                    );
                return this._pendingBatch.push(n),
                    this._pendingBatchAggregator || (this._pendingBatchAggregator = setTimeout(() => {
                        let t = this._pendingBatch;
                        this._pendingBatch = null,
                            this._pendingBatchAggregator = null;
                        let e = t.map(t => t.request);
                        return this.emit("debug", {
                            action: "requestBatch",
                            request: (0,
                                u.p$)(e),
                            provider: this
                        }),
                            (0,
                                eZ.rd)(this.connection, JSON.stringify(e)).then(r => {
                                    this.emit("debug", {
                                        action: "response",
                                        request: e,
                                        response: r,
                                        provider: this
                                    }),
                                        t.forEach((t, e) => {
                                            let n = r[e];
                                            if (n.error) {
                                                let e = Error(n.error.message);
                                                e.code = n.error.code,
                                                    e.data = n.error.data,
                                                    t.reject(e)
                                            } else
                                                t.resolve(n.result)
                                        }
                                        )
                                }
                                    , r => {
                                        this.emit("debug", {
                                            action: "response",
                                            error: r,
                                            request: e,
                                            provider: this
                                        }),
                                            t.forEach(t => {
                                                t.reject(r)
                                            }
                                            )
                                    }
                                )
                    }
                        , 10)),
                    i
            }
        }
        let rg = new c.Yd(ej.i);
        class ry extends eY.l {
            static getApiKey(t) {
                return t && "string" != typeof t && rg.throwArgumentError("invalid apiKey", "apiKey", t),
                    t || "ETHERS_JS_SHARED"
            }
            static getUrl(t, e) {
                rg.warn("NodeSmith will be discontinued on 2019-12-20; please migrate to another platform.");
                let r = null;
                switch (t.name) {
                    case "homestead":
                        r = "https://ethereum.api.nodesmith.io/v1/mainnet/jsonrpc";
                        break;
                    case "ropsten":
                        r = "https://ethereum.api.nodesmith.io/v1/ropsten/jsonrpc";
                        break;
                    case "rinkeby":
                        r = "https://ethereum.api.nodesmith.io/v1/rinkeby/jsonrpc";
                        break;
                    case "goerli":
                        r = "https://ethereum.api.nodesmith.io/v1/goerli/jsonrpc";
                        break;
                    case "kovan":
                        r = "https://ethereum.api.nodesmith.io/v1/kovan/jsonrpc";
                        break;
                    default:
                        rg.throwArgumentError("unsupported network", "network", arguments[0])
                }
                return r + "?apiKey=" + e
            }
        }
        let rv = new c.Yd(ej.i)
            , rb = "62e1ad51b37b8e00394bda3b";
        class rw extends eY.l {
            static getApiKey(t) {
                let e = {
                    applicationId: null,
                    loadBalancer: !0,
                    applicationSecretKey: null
                };
                return null == t ? e.applicationId = rb : "string" == typeof t ? e.applicationId = t : null != t.applicationSecretKey ? (e.applicationId = t.applicationId,
                    e.applicationSecretKey = t.applicationSecretKey) : t.applicationId ? e.applicationId = t.applicationId : rv.throwArgumentError("unsupported PocketProvider apiKey", "apiKey", t),
                    e
            }
            static getUrl(t, e) {
                let r = null;
                switch (t ? t.name : "unknown") {
                    case "goerli":
                        r = "eth-goerli.gateway.pokt.network";
                        break;
                    case "homestead":
                        r = "eth-mainnet.gateway.pokt.network";
                        break;
                    case "kovan":
                        r = "poa-kovan.gateway.pokt.network";
                        break;
                    case "matic":
                        r = "poly-mainnet.gateway.pokt.network";
                        break;
                    case "maticmum":
                        r = "polygon-mumbai-rpc.gateway.pokt.network";
                        break;
                    case "rinkeby":
                        r = "eth-rinkeby.gateway.pokt.network";
                        break;
                    case "ropsten":
                        r = "eth-ropsten.gateway.pokt.network";
                        break;
                    default:
                        rv.throwError("unsupported network", c.Yd.errors.INVALID_ARGUMENT, {
                            argument: "network",
                            value: t
                        })
                }
                let n = {
                    headers: {},
                    url: `https://${r}/v1/lb/${e.applicationId}`
                };
                return null != e.applicationSecretKey && (n.user = "",
                    n.password = e.applicationSecretKey),
                    n
            }
            isCommunityResource() {
                return this.applicationId === rb
            }
        }
        let rE = new c.Yd(ej.i)
            , rA = 1;
        function r_(t, e) {
            let r = "Web3LegacyFetcher";
            return function (t, n) {
                let i = {
                    method: t,
                    params: n,
                    id: rA++,
                    jsonrpc: "2.0"
                };
                return new Promise((t, n) => {
                    this.emit("debug", {
                        action: "request",
                        fetcher: r,
                        request: (0,
                            u.p$)(i),
                        provider: this
                    }),
                        e(i, (e, o) => {
                            if (e)
                                return this.emit("debug", {
                                    action: "response",
                                    fetcher: r,
                                    error: e,
                                    request: i,
                                    provider: this
                                }),
                                    n(e);
                            if (this.emit("debug", {
                                action: "response",
                                fetcher: r,
                                request: i,
                                response: o,
                                provider: this
                            }),
                                o.error) {
                                let t = Error(o.error.message);
                                return t.code = o.error.code,
                                    t.data = o.error.data,
                                    n(t)
                            }
                            t(o.result)
                        }
                        )
                }
                )
            }
        }
        class rS extends rp.r {
            constructor(t, e) {
                null == t && rE.throwArgumentError("missing provider", "provider", t);
                let r = null
                    , n = null
                    , i = null;
                "function" == typeof t ? (r = "unknown:",
                    n = t) : (((r = t.host || t.path || "") || !t.isMetaMask || (r = "metamask"),
                        i = t,
                        t.request) ? ("" === r && (r = "eip-1193:"),
                            n = function (e, r) {
                                null == r && (r = []);
                                let n = {
                                    method: e,
                                    params: r
                                };
                                return this.emit("debug", {
                                    action: "request",
                                    fetcher: "Eip1193Fetcher",
                                    request: (0,
                                        u.p$)(n),
                                    provider: this
                                }),
                                    t.request(n).then(t => (this.emit("debug", {
                                        action: "response",
                                        fetcher: "Eip1193Fetcher",
                                        request: n,
                                        response: t,
                                        provider: this
                                    }),
                                        t), t => {
                                            throw this.emit("debug", {
                                                action: "response",
                                                fetcher: "Eip1193Fetcher",
                                                request: n,
                                                error: t,
                                                provider: this
                                            }),
                                            t
                                        }
                                    )
                            }
                    ) : t.sendAsync ? n = r_(t, t.sendAsync.bind(t)) : t.send ? n = r_(t, t.send.bind(t)) : rE.throwArgumentError("unsupported provider", "provider", t),
                        r || (r = "unknown:")),
                    super(r, e),
                    (0,
                        u.zG)(this, "jsonRpcFetchFunc", n),
                    (0,
                        u.zG)(this, "provider", i)
            }
            send(t, e) {
                return this.jsonRpcFetchFunc(t, e)
            }
        }
        let rk = new c.Yd(ej.i);
        function rP(t, e) {
            if (null == t && (t = "homestead"),
                "string" == typeof t) {
                let e = t.match(/^(ws|http)s?:/i);
                if (e)
                    switch (e[1].toLowerCase()) {
                        case "http":
                        case "https":
                            return new rp.r(t);
                        case "ws":
                        case "wss":
                            return new eG.q(t);
                        default:
                            rk.throwArgumentError("unsupported URL scheme", "network", t)
                    }
            }
            let r = (0,
                eU.H)(t);
            return r && r._defaultProvider || rk.throwError("unsupported getDefaultProvider network", c.Yd.errors.NETWORK_ERROR, {
                operation: "getDefaultProvider",
                network: t
            }),
                r._defaultProvider({
                    FallbackProvider: rh,
                    AlchemyProvider: eJ,
                    AnkrProvider: eQ,
                    CloudflareProvider: eX,
                    EtherscanProvider: e8,
                    InfuraProvider: rd.J,
                    JsonRpcProvider: rp.r,
                    NodesmithProvider: ry,
                    PocketProvider: rw,
                    Web3Provider: rS,
                    IpcProvider: rf
                }, e)
        }
        var rN = r(72275)
            , rC = r(66007);
        let rT = RegExp("^bytes([0-9]+)$")
            , rx = RegExp("^(u?int)([0-9]*)$")
            , rR = RegExp("^(.*)\\[([0-9]*)\\]$")
            , rI = new c.Yd("solidity/5.7.0");
        function rO(t, e) {
            t.length != e.length && rI.throwArgumentError("wrong number of values; expected ${ types.length }", "values", e);
            let r = [];
            return t.forEach(function (t, n) {
                r.push(function t(e, r, n) {
                    switch (e) {
                        case "address":
                            if (n)
                                return (0,
                                    a.Bu)(r, 32);
                            return (0,
                                a.lE)(r);
                        case "string":
                            return (0,
                                O.Y0)(r);
                        case "bytes":
                            return (0,
                                a.lE)(r);
                        case "bool":
                            if (r = r ? "0x01" : "0x00",
                                n)
                                return (0,
                                    a.Bu)(r, 32);
                            return (0,
                                a.lE)(r)
                    }
                    let i = e.match(rx);
                    if (i) {
                        let t = parseInt(i[2] || "256");
                        return (i[2] && String(t) !== i[2] || t % 8 != 0 || 0 === t || t > 256) && rI.throwArgumentError("invalid number type", "type", e),
                            n && (t = 256),
                            r = l.O$.from(r).toTwos(t),
                            (0,
                                a.Bu)(r, t / 8)
                    }
                    if (i = e.match(rT)) {
                        let t = parseInt(i[1]);
                        return ((String(t) !== i[1] || 0 === t || t > 32) && rI.throwArgumentError("invalid bytes type", "type", e),
                            (0,
                                a.lE)(r).byteLength !== t && rI.throwArgumentError(`invalid value for ${e}`, "value", r),
                            n) ? (0,
                                a.lE)((r + "0000000000000000000000000000000000000000000000000000000000000000").substring(0, 66)) : r
                    }
                    if ((i = e.match(rR)) && Array.isArray(r)) {
                        let n = i[1];
                        parseInt(i[2] || String(r.length)) != r.length && rI.throwArgumentError(`invalid array length for ${e}`, "value", r);
                        let o = [];
                        return r.forEach(function (e) {
                            o.push(t(n, e, !0))
                        }),
                            (0,
                                a.zo)(o)
                    }
                    return rI.throwArgumentError("invalid type", "type", e)
                }(t, e[n]))
            }),
                (0,
                    a.Dv)((0,
                        a.zo)(r))
        }
        function rM(t, e) {
            return (0,
                b.w)(rO(t, e))
        }
        function rB(t, e) {
            return (0,
                tj.JQ)(rO(t, e))
        }
        var rD = r(7054);
        function rF(t, e) {
            e || (e = function (t) {
                return [parseInt(t, 16)]
            }
            );
            let r = 0
                , n = {};
            return t.split(",").forEach(t => {
                let i = t.split(":");
                n[r += parseInt(i[0], 16)] = e(i[1])
            }
            ),
                n
        }
        function rU(t) {
            let e = 0;
            return t.split(",").map(t => {
                let r = t.split("-");
                return 1 === r.length ? r[1] = "0" : "" === r[1] && (r[1] = "1"),
                {
                    l: e + parseInt(r[0], 16),
                    h: e = parseInt(r[1], 16)
                }
            }
            )
        }
        function rL(t, e) {
            let r = 0;
            for (let n = 0; n < e.length; n++) {
                let i = e[n];
                if (t >= (r += i.l) && t <= r + i.h && (t - r) % (i.d || 1) == 0) {
                    if (i.e && -1 !== i.e.indexOf(t - r))
                        continue;
                    return i
                }
            }
            return null
        }
        let rz = rU("221,13-1b,5f-,40-10,51-f,11-3,3-3,2-2,2-4,8,2,15,2d,28-8,88,48,27-,3-5,11-20,27-,8,28,3-5,12,18,b-a,1c-4,6-16,2-d,2-2,2,1b-4,17-9,8f-,10,f,1f-2,1c-34,33-14e,4,36-,13-,6-2,1a-f,4,9-,3-,17,8,2-2,5-,2,8-,3-,4-8,2-3,3,6-,16-6,2-,7-3,3-,17,8,3,3,3-,2,6-3,3-,4-a,5,2-6,10-b,4,8,2,4,17,8,3,6-,b,4,4-,2-e,2-4,b-10,4,9-,3-,17,8,3-,5-,9-2,3-,4-7,3-3,3,4-3,c-10,3,7-2,4,5-2,3,2,3-2,3-2,4-2,9,4-3,6-2,4,5-8,2-e,d-d,4,9,4,18,b,6-3,8,4,5-6,3-8,3-3,b-11,3,9,4,18,b,6-3,8,4,5-6,3-6,2,3-3,b-11,3,9,4,18,11-3,7-,4,5-8,2-7,3-3,b-11,3,13-2,19,a,2-,8-2,2-3,7,2,9-11,4-b,3b-3,1e-24,3,2-,3,2-,2-5,5,8,4,2,2-,3,e,4-,6,2,7-,b-,3-21,49,23-5,1c-3,9,25,10-,2-2f,23,6,3,8-2,5-5,1b-45,27-9,2a-,2-3,5b-4,45-4,53-5,8,40,2,5-,8,2,5-,28,2,5-,20,2,5-,8,2,5-,8,8,18,20,2,5-,8,28,14-5,1d-22,56-b,277-8,1e-2,52-e,e,8-a,18-8,15-b,e,4,3-b,5e-2,b-15,10,b-5,59-7,2b-555,9d-3,5b-5,17-,7-,27-,7-,9,2,2,2,20-,36,10,f-,7,14-,4,a,54-3,2-6,6-5,9-,1c-10,13-1d,1c-14,3c-,10-6,32-b,240-30,28-18,c-14,a0,115-,3,66-,b-76,5,5-,1d,24,2,5-2,2,8-,35-2,19,f-10,1d-3,311-37f,1b,5a-b,d7-19,d-3,41,57-,68-4,29-3,5f,29-37,2e-2,25-c,2c-2,4e-3,30,78-3,64-,20,19b7-49,51a7-59,48e-2,38-738,2ba5-5b,222f-,3c-94,8-b,6-4,1b,6,2,3,3,6d-20,16e-f,41-,37-7,2e-2,11-f,5-b,18-,b,14,5-3,6,88-,2,bf-2,7-,7-,7-,4-2,8,8-9,8-2ff,20,5-b,1c-b4,27-,27-cbb1,f7-9,28-2,b5-221,56,48,3-,2-,3-,5,d,2,5,3,42,5-,9,8,1d,5,6,2-2,8,153-3,123-3,33-27fd,a6da-5128,21f-5df,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3,2-1d,61-ff7d")
            , rG = "ad,34f,1806,180b,180c,180d,200b,200c,200d,2060,feff".split(",").map(t => parseInt(t, 16))
            , rj = [{
                h: 25,
                s: 32,
                l: 65
            }, {
                h: 30,
                s: 32,
                e: [23],
                l: 127
            }, {
                h: 54,
                s: 1,
                e: [48],
                l: 64,
                d: 2
            }, {
                h: 14,
                s: 1,
                l: 57,
                d: 2
            }, {
                h: 44,
                s: 1,
                l: 17,
                d: 2
            }, {
                h: 10,
                s: 1,
                e: [2, 6, 8],
                l: 61,
                d: 2
            }, {
                h: 16,
                s: 1,
                l: 68,
                d: 2
            }, {
                h: 84,
                s: 1,
                e: [18, 24, 66],
                l: 19,
                d: 2
            }, {
                h: 26,
                s: 32,
                e: [17],
                l: 435
            }, {
                h: 22,
                s: 1,
                l: 71,
                d: 2
            }, {
                h: 15,
                s: 80,
                l: 40
            }, {
                h: 31,
                s: 32,
                l: 16
            }, {
                h: 32,
                s: 1,
                l: 80,
                d: 2
            }, {
                h: 52,
                s: 1,
                l: 42,
                d: 2
            }, {
                h: 12,
                s: 1,
                l: 55,
                d: 2
            }, {
                h: 40,
                s: 1,
                e: [38],
                l: 15,
                d: 2
            }, {
                h: 14,
                s: 1,
                l: 48,
                d: 2
            }, {
                h: 37,
                s: 48,
                l: 49
            }, {
                h: 148,
                s: 1,
                l: 6351,
                d: 2
            }, {
                h: 88,
                s: 1,
                l: 160,
                d: 2
            }, {
                h: 15,
                s: 16,
                l: 704
            }, {
                h: 25,
                s: 26,
                l: 854
            }, {
                h: 25,
                s: 32,
                l: 55915
            }, {
                h: 37,
                s: 40,
                l: 1247
            }, {
                h: 25,
                s: -119711,
                l: 53248
            }, {
                h: 25,
                s: -119763,
                l: 52
            }, {
                h: 25,
                s: -119815,
                l: 52
            }, {
                h: 25,
                s: -119867,
                e: [1, 4, 5, 7, 8, 11, 12, 17],
                l: 52
            }, {
                h: 25,
                s: -119919,
                l: 52
            }, {
                h: 24,
                s: -119971,
                e: [2, 7, 8, 17],
                l: 52
            }, {
                h: 24,
                s: -120023,
                e: [2, 7, 13, 15, 16, 17],
                l: 52
            }, {
                h: 25,
                s: -120075,
                l: 52
            }, {
                h: 25,
                s: -120127,
                l: 52
            }, {
                h: 25,
                s: -120179,
                l: 52
            }, {
                h: 25,
                s: -120231,
                l: 52
            }, {
                h: 25,
                s: -120283,
                l: 52
            }, {
                h: 25,
                s: -120335,
                l: 52
            }, {
                h: 24,
                s: -119543,
                e: [17],
                l: 56
            }, {
                h: 24,
                s: -119601,
                e: [17],
                l: 58
            }, {
                h: 24,
                s: -119659,
                e: [17],
                l: 58
            }, {
                h: 24,
                s: -119717,
                e: [17],
                l: 58
            }, {
                h: 24,
                s: -119775,
                e: [17],
                l: 58
            }]
            , rY = rF("b5:3bc,c3:ff,7:73,2:253,5:254,3:256,1:257,5:259,1:25b,3:260,1:263,2:269,1:268,5:26f,1:272,2:275,7:280,3:283,5:288,3:28a,1:28b,5:292,3f:195,1:1bf,29:19e,125:3b9,8b:3b2,1:3b8,1:3c5,3:3c6,1:3c0,1a:3ba,1:3c1,1:3c3,2:3b8,1:3b5,1bc9:3b9,1c:1f76,1:1f77,f:1f7a,1:1f7b,d:1f78,1:1f79,1:1f7c,1:1f7d,107:63,5:25b,4:68,1:68,1:68,3:69,1:69,1:6c,3:6e,4:70,1:71,1:72,1:72,1:72,7:7a,2:3c9,2:7a,2:6b,1:e5,1:62,1:63,3:65,1:66,2:6d,b:3b3,1:3c0,6:64,1b574:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3")
            , rK = rF("179:1,2:1,2:1,5:1,2:1,a:4f,a:1,8:1,2:1,2:1,3:1,5:1,3:1,4:1,2:1,3:1,4:1,8:2,1:1,2:2,1:1,2:2,27:2,195:26,2:25,1:25,1:25,2:40,2:3f,1:3f,33:1,11:-6,1:-9,1ac7:-3a,6d:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,b:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,c:-8,2:-8,2:-8,2:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,49:-8,1:-8,1:-4a,1:-4a,d:-56,1:-56,1:-56,1:-56,d:-8,1:-8,f:-8,1:-8,3:-7")
            , rq = rF("df:00730073,51:00690307,19:02BC006E,a7:006A030C,18a:002003B9,16:03B903080301,20:03C503080301,1d7:05650582,190f:00680331,1:00740308,1:0077030A,1:0079030A,1:006102BE,b6:03C50313,2:03C503130300,2:03C503130301,2:03C503130342,2a:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,3:1F7003B9,1:03B103B9,1:03AC03B9,2:03B10342,1:03B1034203B9,5:03B103B9,6:1F7403B9,1:03B703B9,1:03AE03B9,2:03B70342,1:03B7034203B9,5:03B703B9,6:03B903080300,1:03B903080301,3:03B90342,1:03B903080342,b:03C503080300,1:03C503080301,1:03C10313,2:03C50342,1:03C503080342,b:1F7C03B9,1:03C903B9,1:03CE03B9,2:03C90342,1:03C9034203B9,5:03C903B9,ac:00720073,5b:00B00063,6:00B00066,d:006E006F,a:0073006D,1:00740065006C,1:0074006D,124f:006800700061,2:00610075,2:006F0076,b:00700061,1:006E0061,1:03BC0061,1:006D0061,1:006B0061,1:006B0062,1:006D0062,1:00670062,3:00700066,1:006E0066,1:03BC0066,4:0068007A,1:006B0068007A,1:006D0068007A,1:00670068007A,1:00740068007A,15:00700061,1:006B00700061,1:006D00700061,1:006700700061,8:00700076,1:006E0076,1:03BC0076,1:006D0076,1:006B0076,1:006D0076,1:00700077,1:006E0077,1:03BC0077,1:006D0077,1:006B0077,1:006D0077,1:006B03C9,1:006D03C9,2:00620071,3:00632215006B0067,1:0063006F002E,1:00640062,1:00670079,2:00680070,2:006B006B,1:006B006D,9:00700068,2:00700070006D,1:00700072,2:00730076,1:00770062,c723:00660066,1:00660069,1:0066006C,1:006600660069,1:00660066006C,1:00730074,1:00730074,d:05740576,1:05740565,1:0574056B,1:057E0576,1:0574056D", function (t) {
                if (t.length % 4 != 0)
                    throw Error("bad data");
                let e = [];
                for (let r = 0; r < t.length; r += 4)
                    e.push(parseInt(t.substring(r, r + 4), 16));
                return e
            })
            , rH = rU("80-20,2a0-,39c,32,f71,18e,7f2-f,19-7,30-4,7-5,f81-b,5,a800-20ff,4d1-1f,110,fa-6,d174-7,2e84-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,2,1f-5f,ff7f-20001");
        function rJ(t) {
            if (t.match(/^[a-z0-9-]*$/i) && t.length <= 59)
                return t.toLowerCase();
            let e = (0,
                O.XL)(t);
            e = e.map(t => rG.indexOf(t) >= 0 || t >= 65024 && t <= 65039 ? [] : function (t) {
                let e = rL(t, rj);
                if (e)
                    return [t + e.s];
                let r = rY[t];
                if (r)
                    return r;
                let n = rK[t];
                return n ? [t + n[0]] : rq[t] || null
            }(t) || [t]).reduce((t, e) => (e.forEach(e => {
                t.push(e)
            }
            ),
                t), []),
                (e = (0,
                    O.XL)((0,
                        O.uu)(e), O.Uj.NFKC)).forEach(t => {
                            if (rL(t, rH))
                                throw Error("STRINGPREP_CONTAINS_PROHIBITED")
                        }
                        ),
                e.forEach(t => {
                    if (rL(t, rz))
                        throw Error("STRINGPREP_CONTAINS_UNASSIGNED")
                }
                );
            let r = (0,
                O.uu)(e);
            if ("-" === r.substring(0, 1) || "--" === r.substring(2, 4) || "-" === r.substring(r.length - 1))
                throw Error("invalid hyphen");
            return r
        }
        function rV(t) {
            let e = (0,
                O.Y0)(t);
            if (e.length > 31)
                throw Error("bytes32 string must be less than 32 bytes");
            return (0,
                a.Dv)((0,
                    a.zo)([e, eD.R]).slice(0, 32))
        }
        function rW(t) {
            let e = (0,
                a.lE)(t);
            if (32 !== e.length)
                throw Error("invalid bytes32 - not 32 bytes long");
            if (0 !== e[31])
                throw Error("invalid bytes32 string - no null terminator");
            let r = 31;
            for (; 0 === e[r - 1];)
                r--;
            return (0,
                O.ZN)(e.slice(0, r))
        }
        var rQ = r(73760);
        let r$ = "ethers/5.7.2"
            , rX = new c.Yd(r$)
    },
    55336: function (t, e, r) {
        e.utils = r(65794),
            e.common = r(49619),
            e.sha = r(53610),
            e.ripemd = r(17721),
            e.hmac = r(56432),
            e.sha1 = e.sha.sha1,
            e.sha256 = e.sha.sha256,
            e.sha224 = e.sha.sha224,
            e.sha384 = e.sha.sha384,
            e.sha512 = e.sha.sha512,
            e.ripemd160 = e.ripemd.ripemd160
    },
    49619: function (t, e, r) {
        "use strict";
        var n = r(65794)
            , i = r(8786);
        function o() {
            this.pending = null,
                this.pendingTotal = 0,
                this.blockSize = this.constructor.blockSize,
                this.outSize = this.constructor.outSize,
                this.hmacStrength = this.constructor.hmacStrength,
                this.padLength = this.constructor.padLength / 8,
                this.endian = "big",
                this._delta8 = this.blockSize / 8,
                this._delta32 = this.blockSize / 32
        }
        e.BlockHash = o,
            o.prototype.update = function (t, e) {
                if (t = n.toArray(t, e),
                    this.pending ? this.pending = this.pending.concat(t) : this.pending = t,
                    this.pendingTotal += t.length,
                    this.pending.length >= this._delta8) {
                    var r = (t = this.pending).length % this._delta8;
                    this.pending = t.slice(t.length - r, t.length),
                        0 === this.pending.length && (this.pending = null),
                        t = n.join32(t, 0, t.length - r, this.endian);
                    for (var i = 0; i < t.length; i += this._delta32)
                        this._update(t, i, i + this._delta32)
                }
                return this
            }
            ,
            o.prototype.digest = function (t) {
                return this.update(this._pad()),
                    i(null === this.pending),
                    this._digest(t)
            }
            ,
            o.prototype._pad = function () {
                var t = this.pendingTotal
                    , e = this._delta8
                    , r = e - (t + this.padLength) % e
                    , n = Array(r + this.padLength);
                n[0] = 128;
                for (var i = 1; i < r; i++)
                    n[i] = 0;
                if (t <<= 3,
                    "big" === this.endian) {
                    for (var o = 8; o < this.padLength; o++)
                        n[i++] = 0;
                    n[i++] = 0,
                        n[i++] = 0,
                        n[i++] = 0,
                        n[i++] = 0,
                        n[i++] = t >>> 24 & 255,
                        n[i++] = t >>> 16 & 255,
                        n[i++] = t >>> 8 & 255,
                        n[i++] = 255 & t
                } else
                    for (o = 8,
                        n[i++] = 255 & t,
                        n[i++] = t >>> 8 & 255,
                        n[i++] = t >>> 16 & 255,
                        n[i++] = t >>> 24 & 255,
                        n[i++] = 0,
                        n[i++] = 0,
                        n[i++] = 0,
                        n[i++] = 0; o < this.padLength; o++)
                        n[i++] = 0;
                return n
            }
    },
    56432: function (t, e, r) {
        "use strict";
        var n = r(65794)
            , i = r(8786);
        function o(t, e, r) {
            if (!(this instanceof o))
                return new o(t, e, r);
            this.Hash = t,
                this.blockSize = t.blockSize / 8,
                this.outSize = t.outSize / 8,
                this.inner = null,
                this.outer = null,
                this._init(n.toArray(e, r))
        }
        t.exports = o,
            o.prototype._init = function (t) {
                t.length > this.blockSize && (t = new this.Hash().update(t).digest()),
                    i(t.length <= this.blockSize);
                for (var e = t.length; e < this.blockSize; e++)
                    t.push(0);
                for (e = 0; e < t.length; e++)
                    t[e] ^= 54;
                for (e = 0,
                    this.inner = new this.Hash().update(t); e < t.length; e++)
                    t[e] ^= 106;
                this.outer = new this.Hash().update(t)
            }
            ,
            o.prototype.update = function (t, e) {
                return this.inner.update(t, e),
                    this
            }
            ,
            o.prototype.digest = function (t) {
                return this.outer.update(this.inner.digest()),
                    this.outer.digest(t)
            }
    },
    17721: function (t, e, r) {
        "use strict";
        var n = r(65794)
            , i = r(49619)
            , o = n.rotl32
            , s = n.sum32
            , a = n.sum32_3
            , l = n.sum32_4
            , u = i.BlockHash;
        function c() {
            if (!(this instanceof c))
                return new c;
            u.call(this),
                this.h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520],
                this.endian = "little"
        }
        function h(t, e, r, n) {
            return t <= 15 ? e ^ r ^ n : t <= 31 ? e & r | ~e & n : t <= 47 ? (e | ~r) ^ n : t <= 63 ? e & n | r & ~n : e ^ (r | ~n)
        }
        n.inherits(c, u),
            e.ripemd160 = c,
            c.blockSize = 512,
            c.outSize = 160,
            c.hmacStrength = 192,
            c.padLength = 64,
            c.prototype._update = function (t, e) {
                for (var r = this.h[0], n = this.h[1], i = this.h[2], u = this.h[3], c = this.h[4], g = r, y = n, v = i, b = u, w = c, E = 0; E < 80; E++) {
                    var A, _, S = s(o(l(r, h(E, n, i, u), t[f[E] + e], (A = E) <= 15 ? 0 : A <= 31 ? 1518500249 : A <= 47 ? 1859775393 : A <= 63 ? 2400959708 : 2840853838), p[E]), c);
                    r = c,
                        c = u,
                        u = o(i, 10),
                        i = n,
                        n = S,
                        S = s(o(l(g, h(79 - E, y, v, b), t[d[E] + e], (_ = E) <= 15 ? 1352829926 : _ <= 31 ? 1548603684 : _ <= 47 ? 1836072691 : _ <= 63 ? 2053994217 : 0), m[E]), w),
                        g = w,
                        w = b,
                        b = o(v, 10),
                        v = y,
                        y = S
                }
                S = a(this.h[1], i, b),
                    this.h[1] = a(this.h[2], u, w),
                    this.h[2] = a(this.h[3], c, g),
                    this.h[3] = a(this.h[4], r, y),
                    this.h[4] = a(this.h[0], n, v),
                    this.h[0] = S
            }
            ,
            c.prototype._digest = function (t) {
                return "hex" === t ? n.toHex32(this.h, "little") : n.split32(this.h, "little")
            }
            ;
        var f = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13]
            , d = [5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11]
            , p = [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6]
            , m = [8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11]
    },
    53610: function (t, e, r) {
        "use strict";
        e.sha1 = r(22490),
            e.sha224 = r(10627),
            e.sha256 = r(78101),
            e.sha384 = r(11629),
            e.sha512 = r(20368)
    },
    22490: function (t, e, r) {
        "use strict";
        var n = r(65794)
            , i = r(49619)
            , o = r(52770)
            , s = n.rotl32
            , a = n.sum32
            , l = n.sum32_5
            , u = o.ft_1
            , c = i.BlockHash
            , h = [1518500249, 1859775393, 2400959708, 3395469782];
        function f() {
            if (!(this instanceof f))
                return new f;
            c.call(this),
                this.h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520],
                this.W = Array(80)
        }
        n.inherits(f, c),
            t.exports = f,
            f.blockSize = 512,
            f.outSize = 160,
            f.hmacStrength = 80,
            f.padLength = 64,
            f.prototype._update = function (t, e) {
                for (var r = this.W, n = 0; n < 16; n++)
                    r[n] = t[e + n];
                for (; n < r.length; n++)
                    r[n] = s(r[n - 3] ^ r[n - 8] ^ r[n - 14] ^ r[n - 16], 1);
                var i = this.h[0]
                    , o = this.h[1]
                    , c = this.h[2]
                    , f = this.h[3]
                    , d = this.h[4];
                for (n = 0; n < r.length; n++) {
                    var p = ~~(n / 20)
                        , m = l(s(i, 5), u(p, o, c, f), d, r[n], h[p]);
                    d = f,
                        f = c,
                        c = s(o, 30),
                        o = i,
                        i = m
                }
                this.h[0] = a(this.h[0], i),
                    this.h[1] = a(this.h[1], o),
                    this.h[2] = a(this.h[2], c),
                    this.h[3] = a(this.h[3], f),
                    this.h[4] = a(this.h[4], d)
            }
            ,
            f.prototype._digest = function (t) {
                return "hex" === t ? n.toHex32(this.h, "big") : n.split32(this.h, "big")
            }
    },
    10627: function (t, e, r) {
        "use strict";
        var n = r(65794)
            , i = r(78101);
        function o() {
            if (!(this instanceof o))
                return new o;
            i.call(this),
                this.h = [3238371032, 914150663, 812702999, 4144912697, 4290775857, 1750603025, 1694076839, 3204075428]
        }
        n.inherits(o, i),
            t.exports = o,
            o.blockSize = 512,
            o.outSize = 224,
            o.hmacStrength = 192,
            o.padLength = 64,
            o.prototype._digest = function (t) {
                return "hex" === t ? n.toHex32(this.h.slice(0, 7), "big") : n.split32(this.h.slice(0, 7), "big")
            }
    },
    78101: function (t, e, r) {
        "use strict";
        var n = r(65794)
            , i = r(49619)
            , o = r(52770)
            , s = r(8786)
            , a = n.sum32
            , l = n.sum32_4
            , u = n.sum32_5
            , c = o.ch32
            , h = o.maj32
            , f = o.s0_256
            , d = o.s1_256
            , p = o.g0_256
            , m = o.g1_256
            , g = i.BlockHash
            , y = [1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298];
        function v() {
            if (!(this instanceof v))
                return new v;
            g.call(this),
                this.h = [1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924, 528734635, 1541459225],
                this.k = y,
                this.W = Array(64)
        }
        n.inherits(v, g),
            t.exports = v,
            v.blockSize = 512,
            v.outSize = 256,
            v.hmacStrength = 192,
            v.padLength = 64,
            v.prototype._update = function (t, e) {
                for (var r = this.W, n = 0; n < 16; n++)
                    r[n] = t[e + n];
                for (; n < r.length; n++)
                    r[n] = l(m(r[n - 2]), r[n - 7], p(r[n - 15]), r[n - 16]);
                var i = this.h[0]
                    , o = this.h[1]
                    , g = this.h[2]
                    , y = this.h[3]
                    , v = this.h[4]
                    , b = this.h[5]
                    , w = this.h[6]
                    , E = this.h[7];
                for (s(this.k.length === r.length),
                    n = 0; n < r.length; n++) {
                    var A = u(E, d(v), c(v, b, w), this.k[n], r[n])
                        , _ = a(f(i), h(i, o, g));
                    E = w,
                        w = b,
                        b = v,
                        v = a(y, A),
                        y = g,
                        g = o,
                        o = i,
                        i = a(A, _)
                }
                this.h[0] = a(this.h[0], i),
                    this.h[1] = a(this.h[1], o),
                    this.h[2] = a(this.h[2], g),
                    this.h[3] = a(this.h[3], y),
                    this.h[4] = a(this.h[4], v),
                    this.h[5] = a(this.h[5], b),
                    this.h[6] = a(this.h[6], w),
                    this.h[7] = a(this.h[7], E)
            }
            ,
            v.prototype._digest = function (t) {
                return "hex" === t ? n.toHex32(this.h, "big") : n.split32(this.h, "big")
            }
    },
    11629: function (t, e, r) {
        "use strict";
        var n = r(65794)
            , i = r(20368);
        function o() {
            if (!(this instanceof o))
                return new o;
            i.call(this),
                this.h = [3418070365, 3238371032, 1654270250, 914150663, 2438529370, 812702999, 355462360, 4144912697, 1731405415, 4290775857, 2394180231, 1750603025, 3675008525, 1694076839, 1203062813, 3204075428]
        }
        n.inherits(o, i),
            t.exports = o,
            o.blockSize = 1024,
            o.outSize = 384,
            o.hmacStrength = 192,
            o.padLength = 128,
            o.prototype._digest = function (t) {
                return "hex" === t ? n.toHex32(this.h.slice(0, 12), "big") : n.split32(this.h.slice(0, 12), "big")
            }
    },
    20368: function (t, e, r) {
        "use strict";
        var n = r(65794)
            , i = r(49619)
            , o = r(8786)
            , s = n.rotr64_hi
            , a = n.rotr64_lo
            , l = n.shr64_hi
            , u = n.shr64_lo
            , c = n.sum64
            , h = n.sum64_hi
            , f = n.sum64_lo
            , d = n.sum64_4_hi
            , p = n.sum64_4_lo
            , m = n.sum64_5_hi
            , g = n.sum64_5_lo
            , y = i.BlockHash
            , v = [1116352408, 3609767458, 1899447441, 602891725, 3049323471, 3964484399, 3921009573, 2173295548, 961987163, 4081628472, 1508970993, 3053834265, 2453635748, 2937671579, 2870763221, 3664609560, 3624381080, 2734883394, 310598401, 1164996542, 607225278, 1323610764, 1426881987, 3590304994, 1925078388, 4068182383, 2162078206, 991336113, 2614888103, 633803317, 3248222580, 3479774868, 3835390401, 2666613458, 4022224774, 944711139, 264347078, 2341262773, 604807628, 2007800933, 770255983, 1495990901, 1249150122, 1856431235, 1555081692, 3175218132, 1996064986, 2198950837, 2554220882, 3999719339, 2821834349, 766784016, 2952996808, 2566594879, 3210313671, 3203337956, 3336571891, 1034457026, 3584528711, 2466948901, 113926993, 3758326383, 338241895, 168717936, 666307205, 1188179964, 773529912, 1546045734, 1294757372, 1522805485, 1396182291, 2643833823, 1695183700, 2343527390, 1986661051, 1014477480, 2177026350, 1206759142, 2456956037, 344077627, 2730485921, 1290863460, 2820302411, 3158454273, 3259730800, 3505952657, 3345764771, 106217008, 3516065817, 3606008344, 3600352804, 1432725776, 4094571909, 1467031594, 275423344, 851169720, 430227734, 3100823752, 506948616, 1363258195, 659060556, 3750685593, 883997877, 3785050280, 958139571, 3318307427, 1322822218, 3812723403, 1537002063, 2003034995, 1747873779, 3602036899, 1955562222, 1575990012, 2024104815, 1125592928, 2227730452, 2716904306, 2361852424, 442776044, 2428436474, 593698344, 2756734187, 3733110249, 3204031479, 2999351573, 3329325298, 3815920427, 3391569614, 3928383900, 3515267271, 566280711, 3940187606, 3454069534, 4118630271, 4000239992, 116418474, 1914138554, 174292421, 2731055270, 289380356, 3203993006, 460393269, 320620315, 685471733, 587496836, 852142971, 1086792851, 1017036298, 365543100, 1126000580, 2618297676, 1288033470, 3409855158, 1501505948, 4234509866, 1607167915, 987167468, 1816402316, 1246189591];
        function b() {
            if (!(this instanceof b))
                return new b;
            y.call(this),
                this.h = [1779033703, 4089235720, 3144134277, 2227873595, 1013904242, 4271175723, 2773480762, 1595750129, 1359893119, 2917565137, 2600822924, 725511199, 528734635, 4215389547, 1541459225, 327033209],
                this.k = v,
                this.W = Array(160)
        }
        n.inherits(b, y),
            t.exports = b,
            b.blockSize = 1024,
            b.outSize = 512,
            b.hmacStrength = 192,
            b.padLength = 128,
            b.prototype._prepareBlock = function (t, e) {
                for (var r = this.W, n = 0; n < 32; n++)
                    r[n] = t[e + n];
                for (; n < r.length; n += 2) {
                    var i = function (t, e) {
                        var r = s(t, e, 19) ^ s(e, t, 29) ^ l(t, e, 6);
                        return r < 0 && (r += 4294967296),
                            r
                    }(r[n - 4], r[n - 3])
                        , o = function (t, e) {
                            var r = a(t, e, 19) ^ a(e, t, 29) ^ u(t, e, 6);
                            return r < 0 && (r += 4294967296),
                                r
                        }(r[n - 4], r[n - 3])
                        , c = r[n - 14]
                        , h = r[n - 13]
                        , f = function (t, e) {
                            var r = s(t, e, 1) ^ s(t, e, 8) ^ l(t, e, 7);
                            return r < 0 && (r += 4294967296),
                                r
                        }(r[n - 30], r[n - 29])
                        , m = function (t, e) {
                            var r = a(t, e, 1) ^ a(t, e, 8) ^ u(t, e, 7);
                            return r < 0 && (r += 4294967296),
                                r
                        }(r[n - 30], r[n - 29])
                        , g = r[n - 32]
                        , y = r[n - 31];
                    r[n] = d(i, o, c, h, f, m, g, y),
                        r[n + 1] = p(i, o, c, h, f, m, g, y)
                }
            }
            ,
            b.prototype._update = function (t, e) {
                this._prepareBlock(t, e);
                var r = this.W
                    , n = this.h[0]
                    , i = this.h[1]
                    , l = this.h[2]
                    , u = this.h[3]
                    , d = this.h[4]
                    , p = this.h[5]
                    , y = this.h[6]
                    , v = this.h[7]
                    , b = this.h[8]
                    , w = this.h[9]
                    , E = this.h[10]
                    , A = this.h[11]
                    , _ = this.h[12]
                    , S = this.h[13]
                    , k = this.h[14]
                    , P = this.h[15];
                o(this.k.length === r.length);
                for (var N = 0; N < r.length; N += 2) {
                    var C = k
                        , T = P
                        , x = function (t, e) {
                            var r = s(t, e, 14) ^ s(t, e, 18) ^ s(e, t, 9);
                            return r < 0 && (r += 4294967296),
                                r
                        }(b, w)
                        , R = function (t, e) {
                            var r = a(t, e, 14) ^ a(t, e, 18) ^ a(e, t, 9);
                            return r < 0 && (r += 4294967296),
                                r
                        }(b, w)
                        , I = function (t, e, r, n, i) {
                            var o = t & r ^ ~t & i;
                            return o < 0 && (o += 4294967296),
                                o
                        }(b, 0, E, 0, _, S)
                        , O = function (t, e, r, n, i, o) {
                            var s = e & n ^ ~e & o;
                            return s < 0 && (s += 4294967296),
                                s
                        }(0, w, 0, A, 0, S)
                        , M = this.k[N]
                        , B = this.k[N + 1]
                        , D = r[N]
                        , F = r[N + 1]
                        , U = m(C, T, x, R, I, O, M, B, D, F)
                        , L = g(C, T, x, R, I, O, M, B, D, F);
                    C = function (t, e) {
                        var r = s(t, e, 28) ^ s(e, t, 2) ^ s(e, t, 7);
                        return r < 0 && (r += 4294967296),
                            r
                    }(n, i);
                    var z = h(C, T = function (t, e) {
                        var r = a(t, e, 28) ^ a(e, t, 2) ^ a(e, t, 7);
                        return r < 0 && (r += 4294967296),
                            r
                    }(n, i), x = function (t, e, r, n, i) {
                        var o = t & r ^ t & i ^ r & i;
                        return o < 0 && (o += 4294967296),
                            o
                    }(n, 0, l, 0, d, p), R = function (t, e, r, n, i, o) {
                        var s = e & n ^ e & o ^ n & o;
                        return s < 0 && (s += 4294967296),
                            s
                    }(0, i, 0, u, 0, p))
                        , G = f(C, T, x, R);
                    k = _,
                        P = S,
                        _ = E,
                        S = A,
                        E = b,
                        A = w,
                        b = h(y, v, U, L),
                        w = f(v, v, U, L),
                        y = d,
                        v = p,
                        d = l,
                        p = u,
                        l = n,
                        u = i,
                        n = h(U, L, z, G),
                        i = f(U, L, z, G)
                }
                c(this.h, 0, n, i),
                    c(this.h, 2, l, u),
                    c(this.h, 4, d, p),
                    c(this.h, 6, y, v),
                    c(this.h, 8, b, w),
                    c(this.h, 10, E, A),
                    c(this.h, 12, _, S),
                    c(this.h, 14, k, P)
            }
            ,
            b.prototype._digest = function (t) {
                return "hex" === t ? n.toHex32(this.h, "big") : n.split32(this.h, "big")
            }
    },
    52770: function (t, e, r) {
        "use strict";
        var n = r(65794).rotr32;
        function i(t, e, r) {
            return t & e ^ t & r ^ e & r
        }
        e.ft_1 = function (t, e, r, n) {
            return 0 === t ? e & r ^ ~e & n : 1 === t || 3 === t ? e ^ r ^ n : 2 === t ? i(e, r, n) : void 0
        }
            ,
            e.ch32 = function (t, e, r) {
                return t & e ^ ~t & r
            }
            ,
            e.maj32 = i,
            e.p32 = function (t, e, r) {
                return t ^ e ^ r
            }
            ,
            e.s0_256 = function (t) {
                return n(t, 2) ^ n(t, 13) ^ n(t, 22)
            }
            ,
            e.s1_256 = function (t) {
                return n(t, 6) ^ n(t, 11) ^ n(t, 25)
            }
            ,
            e.g0_256 = function (t) {
                return n(t, 7) ^ n(t, 18) ^ t >>> 3
            }
            ,
            e.g1_256 = function (t) {
                return n(t, 17) ^ n(t, 19) ^ t >>> 10
            }
    },
    65794: function (t, e, r) {
        "use strict";
        var n = r(8786)
            , i = r(75335);
        function o(t) {
            return (t >>> 24 | t >>> 8 & 65280 | t << 8 & 16711680 | (255 & t) << 24) >>> 0
        }
        function s(t) {
            return 1 === t.length ? "0" + t : t
        }
        function a(t) {
            if (7 === t.length)
                return "0" + t;
            if (6 === t.length)
                return "00" + t;
            if (5 === t.length)
                return "000" + t;
            if (4 === t.length)
                return "0000" + t;
            if (3 === t.length)
                return "00000" + t;
            if (2 === t.length)
                return "000000" + t;
            if (1 === t.length)
                return "0000000" + t;
            else
                return t
        }
        e.inherits = i,
            e.toArray = function (t, e) {
                if (Array.isArray(t))
                    return t.slice();
                if (!t)
                    return [];
                var r = [];
                if ("string" == typeof t) {
                    if (e) {
                        if ("hex" === e)
                            for ((t = t.replace(/[^a-z0-9]+/ig, "")).length % 2 != 0 && (t = "0" + t),
                                i = 0; i < t.length; i += 2)
                                r.push(parseInt(t[i] + t[i + 1], 16))
                    } else
                        for (var n = 0, i = 0; i < t.length; i++) {
                            var o, s, a = t.charCodeAt(i);
                            a < 128 ? r[n++] = a : (a < 2048 ? r[n++] = a >> 6 | 192 : ((o = t,
                                s = i,
                                (64512 & o.charCodeAt(s)) != 55296 || s < 0 || s + 1 >= o.length ? 1 : (64512 & o.charCodeAt(s + 1)) != 56320) ? r[n++] = a >> 12 | 224 : (a = 65536 + ((1023 & a) << 10) + (1023 & t.charCodeAt(++i)),
                                    r[n++] = a >> 18 | 240,
                                    r[n++] = a >> 12 & 63 | 128),
                                r[n++] = a >> 6 & 63 | 128),
                                r[n++] = 63 & a | 128)
                        }
                } else
                    for (i = 0; i < t.length; i++)
                        r[i] = 0 | t[i];
                return r
            }
            ,
            e.toHex = function (t) {
                for (var e = "", r = 0; r < t.length; r++)
                    e += s(t[r].toString(16));
                return e
            }
            ,
            e.htonl = o,
            e.toHex32 = function (t, e) {
                for (var r = "", n = 0; n < t.length; n++) {
                    var i = t[n];
                    "little" === e && (i = o(i)),
                        r += a(i.toString(16))
                }
                return r
            }
            ,
            e.zero2 = s,
            e.zero8 = a,
            e.join32 = function (t, e, r, i) {
                var o, s = r - e;
                n(s % 4 == 0);
                for (var a = Array(s / 4), l = 0, u = e; l < a.length; l++,
                    u += 4)
                    o = "big" === i ? t[u] << 24 | t[u + 1] << 16 | t[u + 2] << 8 | t[u + 3] : t[u + 3] << 24 | t[u + 2] << 16 | t[u + 1] << 8 | t[u],
                        a[l] = o >>> 0;
                return a
            }
            ,
            e.split32 = function (t, e) {
                for (var r = Array(4 * t.length), n = 0, i = 0; n < t.length; n++,
                    i += 4) {
                    var o = t[n];
                    "big" === e ? (r[i] = o >>> 24,
                        r[i + 1] = o >>> 16 & 255,
                        r[i + 2] = o >>> 8 & 255,
                        r[i + 3] = 255 & o) : (r[i + 3] = o >>> 24,
                            r[i + 2] = o >>> 16 & 255,
                            r[i + 1] = o >>> 8 & 255,
                            r[i] = 255 & o)
                }
                return r
            }
            ,
            e.rotr32 = function (t, e) {
                return t >>> e | t << 32 - e
            }
            ,
            e.rotl32 = function (t, e) {
                return t << e | t >>> 32 - e
            }
            ,
            e.sum32 = function (t, e) {
                return t + e >>> 0
            }
            ,
            e.sum32_3 = function (t, e, r) {
                return t + e + r >>> 0
            }
            ,
            e.sum32_4 = function (t, e, r, n) {
                return t + e + r + n >>> 0
            }
            ,
            e.sum32_5 = function (t, e, r, n, i) {
                return t + e + r + n + i >>> 0
            }
            ,
            e.sum64 = function (t, e, r, n) {
                var i = t[e]
                    , o = n + t[e + 1] >>> 0;
                t[e] = (o < n ? 1 : 0) + r + i >>> 0,
                    t[e + 1] = o
            }
            ,
            e.sum64_hi = function (t, e, r, n) {
                return (e + n >>> 0 < e ? 1 : 0) + t + r >>> 0
            }
            ,
            e.sum64_lo = function (t, e, r, n) {
                return e + n >>> 0
            }
            ,
            e.sum64_4_hi = function (t, e, r, n, i, o, s, a) {
                var l, u = e;
                return t + r + i + s + (0 + ((u = u + n >>> 0) < e ? 1 : 0) + ((u = u + o >>> 0) < o ? 1 : 0) + ((u = u + a >>> 0) < a ? 1 : 0)) >>> 0
            }
            ,
            e.sum64_4_lo = function (t, e, r, n, i, o, s, a) {
                return e + n + o + a >>> 0
            }
            ,
            e.sum64_5_hi = function (t, e, r, n, i, o, s, a, l, u) {
                var c, h = e;
                return t + r + i + s + l + (0 + ((h = h + n >>> 0) < e ? 1 : 0) + ((h = h + o >>> 0) < o ? 1 : 0) + ((h = h + a >>> 0) < a ? 1 : 0) + ((h = h + u >>> 0) < u ? 1 : 0)) >>> 0
            }
            ,
            e.sum64_5_lo = function (t, e, r, n, i, o, s, a, l, u) {
                return e + n + o + a + u >>> 0
            }
            ,
            e.rotr64_hi = function (t, e, r) {
                return (e << 32 - r | t >>> r) >>> 0
            }
            ,
            e.rotr64_lo = function (t, e, r) {
                return (t << 32 - r | e >>> r) >>> 0
            }
            ,
            e.shr64_hi = function (t, e, r) {
                return t >>> r
            }
            ,
            e.shr64_lo = function (t, e, r) {
                return (t << 32 - r | e >>> r) >>> 0
            }
    },
    19087: function (t, e) {
        /*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
        e.read = function (t, e, r, n, i) {
            var o, s, a = 8 * i - n - 1, l = (1 << a) - 1, u = l >> 1, c = -7, h = r ? i - 1 : 0, f = r ? -1 : 1, d = t[e + h];
            for (h += f,
                o = d & (1 << -c) - 1,
                d >>= -c,
                c += a; c > 0; o = 256 * o + t[e + h],
                h += f,
                c -= 8)
                ;
            for (s = o & (1 << -c) - 1,
                o >>= -c,
                c += n; c > 0; s = 256 * s + t[e + h],
                h += f,
                c -= 8)
                ;
            if (0 === o)
                o = 1 - u;
            else {
                if (o === l)
                    return s ? NaN : 1 / 0 * (d ? -1 : 1);
                s += Math.pow(2, n),
                    o -= u
            }
            return (d ? -1 : 1) * s * Math.pow(2, o - n)
        }
            ,
            e.write = function (t, e, r, n, i, o) {
                var s, a, l, u = 8 * o - i - 1, c = (1 << u) - 1, h = c >> 1, f = 23 === i ? 5960464477539062e-23 : 0, d = n ? 0 : o - 1, p = n ? 1 : -1, m = e < 0 || 0 === e && 1 / e < 0 ? 1 : 0;
                for (isNaN(e = Math.abs(e)) || e === 1 / 0 ? (a = isNaN(e) ? 1 : 0,
                    s = c) : (s = Math.floor(Math.log(e) / Math.LN2),
                        e * (l = Math.pow(2, -s)) < 1 && (s--,
                            l *= 2),
                        s + h >= 1 ? e += f / l : e += f * Math.pow(2, 1 - h),
                        e * l >= 2 && (s++,
                            l /= 2),
                        s + h >= c ? (a = 0,
                            s = c) : s + h >= 1 ? (a = (e * l - 1) * Math.pow(2, i),
                                s += h) : (a = e * Math.pow(2, h - 1) * Math.pow(2, i),
                                    s = 0)); i >= 8; t[r + d] = 255 & a,
                                    d += p,
                                    a /= 256,
                    i -= 8)
                    ;
                for (s = s << i | a,
                    u += i; u > 0; t[r + d] = 255 & s,
                    d += p,
                    s /= 256,
                    u -= 8)
                    ;
                t[r + d - p] |= 128 * m
            }
    },
    75335: function (t) {
        "function" == typeof Object.create ? t.exports = function (t, e) {
            e && (t.super_ = e,
                t.prototype = Object.create(e.prototype, {
                    constructor: {
                        value: t,
                        enumerable: !1,
                        writable: !0,
                        configurable: !0
                    }
                }))
        }
            : t.exports = function (t, e) {
                if (e) {
                    t.super_ = e;
                    var r = function () { };
                    r.prototype = e.prototype,
                        t.prototype = new r,
                        t.prototype.constructor = t
                }
            }
    },
    26398: function (t, e, r) {
        var n, i = r(25566);
        !function () {
            "use strict";
            var o = "input is invalid type"
                , s = "object" == typeof window
                , a = s ? window : {};
            a.JS_SHA3_NO_WINDOW && (s = !1);
            var l = !s && "object" == typeof self;
            !a.JS_SHA3_NO_NODE_JS && "object" == typeof i && i.versions && i.versions.node ? a = r.g : l && (a = self);
            var u = !a.JS_SHA3_NO_COMMON_JS && t.exports
                , c = r.amdO
                , h = !a.JS_SHA3_NO_ARRAY_BUFFER && "undefined" != typeof ArrayBuffer
                , f = "0123456789abcdef".split("")
                , d = [4, 1024, 262144, 67108864]
                , p = [0, 8, 16, 24]
                , m = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649, 0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0, 2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771, 2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648, 2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648]
                , g = [224, 256, 384, 512]
                , y = [128, 256]
                , v = ["hex", "buffer", "arrayBuffer", "array", "digest"]
                , b = {
                    128: 168,
                    256: 136
                };
            (a.JS_SHA3_NO_NODE_JS || !Array.isArray) && (Array.isArray = function (t) {
                return "[object Array]" === Object.prototype.toString.call(t)
            }
            ),
                h && (a.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView) && (ArrayBuffer.isView = function (t) {
                    return "object" == typeof t && t.buffer && t.buffer.constructor === ArrayBuffer
                }
                );
            for (var w = function (t, e, r) {
                return function (n) {
                    return new B(t, e, t).update(n)[r]()
                }
            }, E = function (t, e, r) {
                return function (n, i) {
                    return new B(t, e, i).update(n)[r]()
                }
            }, A = function (t, e, r) {
                return function (e, n, i, o) {
                    return N["cshake" + t].update(e, n, i, o)[r]()
                }
            }, _ = function (t, e, r) {
                return function (e, n, i, o) {
                    return N["kmac" + t].update(e, n, i, o)[r]()
                }
            }, S = function (t, e, r, n) {
                for (var i = 0; i < v.length; ++i) {
                    var o = v[i];
                    t[o] = e(r, n, o)
                }
                return t
            }, k = function (t, e) {
                var r = w(t, e, "hex");
                return r.create = function () {
                    return new B(t, e, t)
                }
                    ,
                    r.update = function (t) {
                        return r.create().update(t)
                    }
                    ,
                    S(r, w, t, e)
            }, P = [{
                name: "keccak",
                padding: [1, 256, 65536, 16777216],
                bits: g,
                createMethod: k
            }, {
                name: "sha3",
                padding: [6, 1536, 393216, 100663296],
                bits: g,
                createMethod: k
            }, {
                name: "shake",
                padding: [31, 7936, 2031616, 520093696],
                bits: y,
                createMethod: function (t, e) {
                    var r = E(t, e, "hex");
                    return r.create = function (r) {
                        return new B(t, e, r)
                    }
                        ,
                        r.update = function (t, e) {
                            return r.create(e).update(t)
                        }
                        ,
                        S(r, E, t, e)
                }
            }, {
                name: "cshake",
                padding: d,
                bits: y,
                createMethod: function (t, e) {
                    var r = b[t]
                        , n = A(t, e, "hex");
                    return n.create = function (n, i, o) {
                        return i || o ? new B(t, e, n).bytepad([i, o], r) : N["shake" + t].create(n)
                    }
                        ,
                        n.update = function (t, e, r, i) {
                            return n.create(e, r, i).update(t)
                        }
                        ,
                        S(n, A, t, e)
                }
            }, {
                name: "kmac",
                padding: d,
                bits: y,
                createMethod: function (t, e) {
                    var r = b[t]
                        , n = _(t, e, "hex");
                    return n.create = function (n, i, o) {
                        return new D(t, e, i).bytepad(["KMAC", o], r).bytepad([n], r)
                    }
                        ,
                        n.update = function (t, e, r, i) {
                            return n.create(t, r, i).update(e)
                        }
                        ,
                        S(n, _, t, e)
                }
            }], N = {}, C = [], T = 0; T < P.length; ++T)
                for (var x = P[T], R = x.bits, I = 0; I < R.length; ++I) {
                    var O = x.name + "_" + R[I];
                    if (C.push(O),
                        N[O] = x.createMethod(R[I], x.padding),
                        "sha3" !== x.name) {
                        var M = x.name + R[I];
                        C.push(M),
                            N[M] = N[O]
                    }
                }
            function B(t, e, r) {
                this.blocks = [],
                    this.s = [],
                    this.padding = e,
                    this.outputBits = r,
                    this.reset = !0,
                    this.finalized = !1,
                    this.block = 0,
                    this.start = 0,
                    this.blockCount = 1600 - (t << 1) >> 5,
                    this.byteCount = this.blockCount << 2,
                    this.outputBlocks = r >> 5,
                    this.extraBytes = (31 & r) >> 3;
                for (var n = 0; n < 50; ++n)
                    this.s[n] = 0
            }
            function D(t, e, r) {
                B.call(this, t, e, r)
            }
            B.prototype.update = function (t) {
                if (this.finalized)
                    throw Error("finalize already called");
                var e, r = typeof t;
                if ("string" !== r) {
                    if ("object" === r) {
                        if (null === t)
                            throw Error(o);
                        if (h && t.constructor === ArrayBuffer)
                            t = new Uint8Array(t);
                        else if (!Array.isArray(t) && (!h || !ArrayBuffer.isView(t)))
                            throw Error(o)
                    } else
                        throw Error(o);
                    e = !0
                }
                for (var n, i, s = this.blocks, a = this.byteCount, l = t.length, u = this.blockCount, c = 0, f = this.s; c < l;) {
                    if (this.reset)
                        for (n = 1,
                            this.reset = !1,
                            s[0] = this.block; n < u + 1; ++n)
                            s[n] = 0;
                    if (e)
                        for (n = this.start; c < l && n < a; ++c)
                            s[n >> 2] |= t[c] << p[3 & n++];
                    else
                        for (n = this.start; c < l && n < a; ++c)
                            (i = t.charCodeAt(c)) < 128 ? s[n >> 2] |= i << p[3 & n++] : (i < 2048 ? s[n >> 2] |= (192 | i >> 6) << p[3 & n++] : (i < 55296 || i >= 57344 ? s[n >> 2] |= (224 | i >> 12) << p[3 & n++] : (i = 65536 + ((1023 & i) << 10 | 1023 & t.charCodeAt(++c)),
                                s[n >> 2] |= (240 | i >> 18) << p[3 & n++],
                                s[n >> 2] |= (128 | i >> 12 & 63) << p[3 & n++]),
                                s[n >> 2] |= (128 | i >> 6 & 63) << p[3 & n++]),
                                s[n >> 2] |= (128 | 63 & i) << p[3 & n++]);
                    if (this.lastByteIndex = n,
                        n >= a) {
                        for (this.start = n - a,
                            this.block = s[u],
                            n = 0; n < u; ++n)
                            f[n] ^= s[n];
                        F(f),
                            this.reset = !0
                    } else
                        this.start = n
                }
                return this
            }
                ,
                B.prototype.encode = function (t, e) {
                    var r = 255 & t
                        , n = 1
                        , i = [r];
                    for (t >>= 8,
                        r = 255 & t; r > 0;)
                        i.unshift(r),
                            t >>= 8,
                            r = 255 & t,
                            ++n;
                    return e ? i.push(n) : i.unshift(n),
                        this.update(i),
                        i.length
                }
                ,
                B.prototype.encodeString = function (t) {
                    var e, r = typeof t;
                    if ("string" !== r) {
                        if ("object" === r) {
                            if (null === t)
                                throw Error(o);
                            if (h && t.constructor === ArrayBuffer)
                                t = new Uint8Array(t);
                            else if (!Array.isArray(t) && (!h || !ArrayBuffer.isView(t)))
                                throw Error(o)
                        } else
                            throw Error(o);
                        e = !0
                    }
                    var n = 0
                        , i = t.length;
                    if (e)
                        n = i;
                    else
                        for (var s = 0; s < t.length; ++s) {
                            var a = t.charCodeAt(s);
                            a < 128 ? n += 1 : a < 2048 ? n += 2 : a < 55296 || a >= 57344 ? n += 3 : (a = 65536 + ((1023 & a) << 10 | 1023 & t.charCodeAt(++s)),
                                n += 4)
                        }
                    return n += this.encode(8 * n),
                        this.update(t),
                        n
                }
                ,
                B.prototype.bytepad = function (t, e) {
                    for (var r = this.encode(e), n = 0; n < t.length; ++n)
                        r += this.encodeString(t[n]);
                    var i = e - r % e
                        , o = [];
                    return o.length = i,
                        this.update(o),
                        this
                }
                ,
                B.prototype.finalize = function () {
                    if (!this.finalized) {
                        this.finalized = !0;
                        var t = this.blocks
                            , e = this.lastByteIndex
                            , r = this.blockCount
                            , n = this.s;
                        if (t[e >> 2] |= this.padding[3 & e],
                            this.lastByteIndex === this.byteCount)
                            for (e = 1,
                                t[0] = t[r]; e < r + 1; ++e)
                                t[e] = 0;
                        for (t[r - 1] |= 2147483648,
                            e = 0; e < r; ++e)
                            n[e] ^= t[e];
                        F(n)
                    }
                }
                ,
                B.prototype.toString = B.prototype.hex = function () {
                    this.finalize();
                    for (var t, e = this.blockCount, r = this.s, n = this.outputBlocks, i = this.extraBytes, o = 0, s = 0, a = ""; s < n;) {
                        for (o = 0; o < e && s < n; ++o,
                            ++s)
                            a += f[(t = r[o]) >> 4 & 15] + f[15 & t] + f[t >> 12 & 15] + f[t >> 8 & 15] + f[t >> 20 & 15] + f[t >> 16 & 15] + f[t >> 28 & 15] + f[t >> 24 & 15];
                        s % e == 0 && (F(r),
                            o = 0)
                    }
                    return i && (a += f[(t = r[o]) >> 4 & 15] + f[15 & t],
                        i > 1 && (a += f[t >> 12 & 15] + f[t >> 8 & 15]),
                        i > 2 && (a += f[t >> 20 & 15] + f[t >> 16 & 15])),
                        a
                }
                ,
                B.prototype.arrayBuffer = function () {
                    this.finalize();
                    var t, e = this.blockCount, r = this.s, n = this.outputBlocks, i = this.extraBytes, o = 0, s = 0, a = this.outputBits >> 3;
                    t = new ArrayBuffer(i ? n + 1 << 2 : a);
                    for (var l = new Uint32Array(t); s < n;) {
                        for (o = 0; o < e && s < n; ++o,
                            ++s)
                            l[s] = r[o];
                        s % e == 0 && F(r)
                    }
                    return i && (l[o] = r[o],
                        t = t.slice(0, a)),
                        t
                }
                ,
                B.prototype.buffer = B.prototype.arrayBuffer,
                B.prototype.digest = B.prototype.array = function () {
                    this.finalize();
                    for (var t, e, r = this.blockCount, n = this.s, i = this.outputBlocks, o = this.extraBytes, s = 0, a = 0, l = []; a < i;) {
                        for (s = 0; s < r && a < i; ++s,
                            ++a)
                            t = a << 2,
                                e = n[s],
                                l[t] = 255 & e,
                                l[t + 1] = e >> 8 & 255,
                                l[t + 2] = e >> 16 & 255,
                                l[t + 3] = e >> 24 & 255;
                        a % r == 0 && F(n)
                    }
                    return o && (t = a << 2,
                        e = n[s],
                        l[t] = 255 & e,
                        o > 1 && (l[t + 1] = e >> 8 & 255),
                        o > 2 && (l[t + 2] = e >> 16 & 255)),
                        l
                }
                ,
                D.prototype = new B,
                D.prototype.finalize = function () {
                    return this.encode(this.outputBits, !0),
                        B.prototype.finalize.call(this)
                }
                ;
            var F = function (t) {
                var e, r, n, i, o, s, a, l, u, c, h, f, d, p, g, y, v, b, w, E, A, _, S, k, P, N, C, T, x, R, I, O, M, B, D, F, U, L, z, G, j, Y, K, q, H, J, V, W, Q, $, X, Z, tt, te, tr, tn, ti, to, ts, ta, tl, tu, tc;
                for (n = 0; n < 48; n += 2)
                    i = t[0] ^ t[10] ^ t[20] ^ t[30] ^ t[40],
                        o = t[1] ^ t[11] ^ t[21] ^ t[31] ^ t[41],
                        s = t[2] ^ t[12] ^ t[22] ^ t[32] ^ t[42],
                        a = t[3] ^ t[13] ^ t[23] ^ t[33] ^ t[43],
                        l = t[4] ^ t[14] ^ t[24] ^ t[34] ^ t[44],
                        u = t[5] ^ t[15] ^ t[25] ^ t[35] ^ t[45],
                        c = t[6] ^ t[16] ^ t[26] ^ t[36] ^ t[46],
                        h = t[7] ^ t[17] ^ t[27] ^ t[37] ^ t[47],
                        f = t[8] ^ t[18] ^ t[28] ^ t[38] ^ t[48],
                        d = t[9] ^ t[19] ^ t[29] ^ t[39] ^ t[49],
                        e = f ^ (s << 1 | a >>> 31),
                        r = d ^ (a << 1 | s >>> 31),
                        t[0] ^= e,
                        t[1] ^= r,
                        t[10] ^= e,
                        t[11] ^= r,
                        t[20] ^= e,
                        t[21] ^= r,
                        t[30] ^= e,
                        t[31] ^= r,
                        t[40] ^= e,
                        t[41] ^= r,
                        e = i ^ (l << 1 | u >>> 31),
                        r = o ^ (u << 1 | l >>> 31),
                        t[2] ^= e,
                        t[3] ^= r,
                        t[12] ^= e,
                        t[13] ^= r,
                        t[22] ^= e,
                        t[23] ^= r,
                        t[32] ^= e,
                        t[33] ^= r,
                        t[42] ^= e,
                        t[43] ^= r,
                        e = s ^ (c << 1 | h >>> 31),
                        r = a ^ (h << 1 | c >>> 31),
                        t[4] ^= e,
                        t[5] ^= r,
                        t[14] ^= e,
                        t[15] ^= r,
                        t[24] ^= e,
                        t[25] ^= r,
                        t[34] ^= e,
                        t[35] ^= r,
                        t[44] ^= e,
                        t[45] ^= r,
                        e = l ^ (f << 1 | d >>> 31),
                        r = u ^ (d << 1 | f >>> 31),
                        t[6] ^= e,
                        t[7] ^= r,
                        t[16] ^= e,
                        t[17] ^= r,
                        t[26] ^= e,
                        t[27] ^= r,
                        t[36] ^= e,
                        t[37] ^= r,
                        t[46] ^= e,
                        t[47] ^= r,
                        e = c ^ (i << 1 | o >>> 31),
                        r = h ^ (o << 1 | i >>> 31),
                        t[8] ^= e,
                        t[9] ^= r,
                        t[18] ^= e,
                        t[19] ^= r,
                        t[28] ^= e,
                        t[29] ^= r,
                        t[38] ^= e,
                        t[39] ^= r,
                        t[48] ^= e,
                        t[49] ^= r,
                        p = t[0],
                        g = t[1],
                        J = t[11] << 4 | t[10] >>> 28,
                        V = t[10] << 4 | t[11] >>> 28,
                        T = t[20] << 3 | t[21] >>> 29,
                        x = t[21] << 3 | t[20] >>> 29,
                        ta = t[31] << 9 | t[30] >>> 23,
                        tl = t[30] << 9 | t[31] >>> 23,
                        Y = t[40] << 18 | t[41] >>> 14,
                        K = t[41] << 18 | t[40] >>> 14,
                        B = t[2] << 1 | t[3] >>> 31,
                        D = t[3] << 1 | t[2] >>> 31,
                        y = t[13] << 12 | t[12] >>> 20,
                        v = t[12] << 12 | t[13] >>> 20,
                        W = t[22] << 10 | t[23] >>> 22,
                        Q = t[23] << 10 | t[22] >>> 22,
                        R = t[33] << 13 | t[32] >>> 19,
                        I = t[32] << 13 | t[33] >>> 19,
                        tu = t[42] << 2 | t[43] >>> 30,
                        tc = t[43] << 2 | t[42] >>> 30,
                        te = t[5] << 30 | t[4] >>> 2,
                        tr = t[4] << 30 | t[5] >>> 2,
                        F = t[14] << 6 | t[15] >>> 26,
                        U = t[15] << 6 | t[14] >>> 26,
                        b = t[25] << 11 | t[24] >>> 21,
                        w = t[24] << 11 | t[25] >>> 21,
                        $ = t[34] << 15 | t[35] >>> 17,
                        X = t[35] << 15 | t[34] >>> 17,
                        O = t[45] << 29 | t[44] >>> 3,
                        M = t[44] << 29 | t[45] >>> 3,
                        k = t[6] << 28 | t[7] >>> 4,
                        P = t[7] << 28 | t[6] >>> 4,
                        tn = t[17] << 23 | t[16] >>> 9,
                        ti = t[16] << 23 | t[17] >>> 9,
                        L = t[26] << 25 | t[27] >>> 7,
                        z = t[27] << 25 | t[26] >>> 7,
                        E = t[36] << 21 | t[37] >>> 11,
                        A = t[37] << 21 | t[36] >>> 11,
                        Z = t[47] << 24 | t[46] >>> 8,
                        tt = t[46] << 24 | t[47] >>> 8,
                        q = t[8] << 27 | t[9] >>> 5,
                        H = t[9] << 27 | t[8] >>> 5,
                        N = t[18] << 20 | t[19] >>> 12,
                        C = t[19] << 20 | t[18] >>> 12,
                        to = t[29] << 7 | t[28] >>> 25,
                        ts = t[28] << 7 | t[29] >>> 25,
                        G = t[38] << 8 | t[39] >>> 24,
                        j = t[39] << 8 | t[38] >>> 24,
                        _ = t[48] << 14 | t[49] >>> 18,
                        S = t[49] << 14 | t[48] >>> 18,
                        t[0] = p ^ ~y & b,
                        t[1] = g ^ ~v & w,
                        t[10] = k ^ ~N & T,
                        t[11] = P ^ ~C & x,
                        t[20] = B ^ ~F & L,
                        t[21] = D ^ ~U & z,
                        t[30] = q ^ ~J & W,
                        t[31] = H ^ ~V & Q,
                        t[40] = te ^ ~tn & to,
                        t[41] = tr ^ ~ti & ts,
                        t[2] = y ^ ~b & E,
                        t[3] = v ^ ~w & A,
                        t[12] = N ^ ~T & R,
                        t[13] = C ^ ~x & I,
                        t[22] = F ^ ~L & G,
                        t[23] = U ^ ~z & j,
                        t[32] = J ^ ~W & $,
                        t[33] = V ^ ~Q & X,
                        t[42] = tn ^ ~to & ta,
                        t[43] = ti ^ ~ts & tl,
                        t[4] = b ^ ~E & _,
                        t[5] = w ^ ~A & S,
                        t[14] = T ^ ~R & O,
                        t[15] = x ^ ~I & M,
                        t[24] = L ^ ~G & Y,
                        t[25] = z ^ ~j & K,
                        t[34] = W ^ ~$ & Z,
                        t[35] = Q ^ ~X & tt,
                        t[44] = to ^ ~ta & tu,
                        t[45] = ts ^ ~tl & tc,
                        t[6] = E ^ ~_ & p,
                        t[7] = A ^ ~S & g,
                        t[16] = R ^ ~O & k,
                        t[17] = I ^ ~M & P,
                        t[26] = G ^ ~Y & B,
                        t[27] = j ^ ~K & D,
                        t[36] = $ ^ ~Z & q,
                        t[37] = X ^ ~tt & H,
                        t[46] = ta ^ ~tu & te,
                        t[47] = tl ^ ~tc & tr,
                        t[8] = _ ^ ~p & y,
                        t[9] = S ^ ~g & v,
                        t[18] = O ^ ~k & N,
                        t[19] = M ^ ~P & C,
                        t[28] = Y ^ ~B & F,
                        t[29] = K ^ ~D & U,
                        t[38] = Z ^ ~q & J,
                        t[39] = tt ^ ~H & V,
                        t[48] = tu ^ ~te & tn,
                        t[49] = tc ^ ~tr & ti,
                        t[0] ^= m[n],
                        t[1] ^= m[n + 1]
            };
            if (u)
                t.exports = N;
            else {
                for (T = 0; T < C.length; ++T)
                    a[C[T]] = N[C[T]];
                c && void 0 !== (n = (function () {
                    return N
                }
                ).call(e, r, e, t)) && (t.exports = n)
            }
        }()
    },
    8786: function (t) {
        function e(t, e) {
            if (!t)
                throw Error(e || "Assertion failed")
        }
        t.exports = e,
            e.equal = function (t, e, r) {
                if (t != e)
                    throw Error(r || "Assertion failed: " + t + " != " + e)
            }
    },
    90413: function (t, e, r) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
            Object.defineProperty(e, "Image", {
                enumerable: !0,
                get: function () {
                    return y
                }
            });
        let n = r(21024)
            , i = r(68533)._(r(2265))
            , o = n._(r(54887))
            , s = n._(r(35793))
            , a = r(7929)
            , l = r(17727)
            , u = r(47327);
        r(92637);
        let c = r(36304)
            , h = n._(r(69950))
            , f = {
                deviceSizes: [640, 750, 828, 1080, 1200, 1920, 2048, 3840],
                imageSizes: [16, 32, 48, 64, 96, 128, 256, 384],
                path: "/_next/image",
                loader: "default",
                dangerouslyAllowSVG: !1,
                unoptimized: !1
            };
        function d(t, e, r, n, i, o) {
            let s = null == t ? void 0 : t.src;
            t && t["data-loaded-src"] !== s && (t["data-loaded-src"] = s,
                ("decode" in t ? t.decode() : Promise.resolve()).catch(() => { }
                ).then(() => {
                    if (t.parentElement && t.isConnected) {
                        if ("empty" !== e && i(!0),
                            null == r ? void 0 : r.current) {
                            let e = new Event("load");
                            Object.defineProperty(e, "target", {
                                writable: !1,
                                value: t
                            });
                            let n = !1
                                , i = !1;
                            r.current({
                                ...e,
                                nativeEvent: e,
                                currentTarget: t,
                                target: t,
                                isDefaultPrevented: () => n,
                                isPropagationStopped: () => i,
                                persist: () => { }
                                ,
                                preventDefault: () => {
                                    n = !0,
                                        e.preventDefault()
                                }
                                ,
                                stopPropagation: () => {
                                    i = !0,
                                        e.stopPropagation()
                                }
                            })
                        }
                        (null == n ? void 0 : n.current) && n.current(t)
                    }
                }
                ))
        }
        function p(t) {
            let [e, r] = i.version.split(".", 2)
                , n = parseInt(e, 10)
                , o = parseInt(r, 10);
            return n > 18 || 18 === n && o >= 3 ? {
                fetchPriority: t
            } : {
                fetchpriority: t
            }
        }
        let m = (0,
            i.forwardRef)((t, e) => {
                let { src: r, srcSet: n, sizes: o, height: s, width: a, decoding: l, className: u, style: c, fetchPriority: h, placeholder: f, loading: m, unoptimized: g, fill: y, onLoadRef: v, onLoadingCompleteRef: b, setBlurComplete: w, setShowAltText: E, onLoad: A, onError: _, ...S } = t;
                return i.default.createElement("img", {
                    ...S,
                    ...p(h),
                    loading: m,
                    width: a,
                    height: s,
                    decoding: l,
                    "data-nimg": y ? "fill" : "1",
                    className: u,
                    style: c,
                    sizes: o,
                    srcSet: n,
                    src: r,
                    ref: (0,
                        i.useCallback)(t => {
                            e && ("function" == typeof e ? e(t) : "object" == typeof e && (e.current = t)),
                                t && (_ && (t.src = t.src),
                                    t.complete && d(t, f, v, b, w, g))
                        }
                            , [r, f, v, b, w, _, g, e]),
                    onLoad: t => {
                        d(t.currentTarget, f, v, b, w, g)
                    }
                    ,
                    onError: t => {
                        E(!0),
                            "empty" !== f && w(!0),
                            _ && _(t)
                    }
                })
            }
            );
        function g(t) {
            let { isAppRouter: e, imgAttributes: r } = t
                , n = {
                    as: "image",
                    imageSrcSet: r.srcSet,
                    imageSizes: r.sizes,
                    crossOrigin: r.crossOrigin,
                    referrerPolicy: r.referrerPolicy,
                    ...p(r.fetchPriority)
                };
            return e && o.default.preload ? (o.default.preload(r.src, n),
                null) : i.default.createElement(s.default, null, i.default.createElement("link", {
                    key: "__nimg-" + r.src + r.srcSet + r.sizes,
                    rel: "preload",
                    href: r.srcSet ? void 0 : r.src,
                    ...n
                }))
        }
        let y = (0,
            i.forwardRef)((t, e) => {
                let r = (0,
                    i.useContext)(c.RouterContext)
                    , n = (0,
                        i.useContext)(u.ImageConfigContext)
                    , o = (0,
                        i.useMemo)(() => {
                            let t = f || n || l.imageConfigDefault
                                , e = [...t.deviceSizes, ...t.imageSizes].sort((t, e) => t - e)
                                , r = t.deviceSizes.sort((t, e) => t - e);
                            return {
                                ...t,
                                allSizes: e,
                                deviceSizes: r
                            }
                        }
                            , [n])
                    , { onLoad: s, onLoadingComplete: d } = t
                    , p = (0,
                        i.useRef)(s);
                (0,
                    i.useEffect)(() => {
                        p.current = s
                    }
                        , [s]);
                let y = (0,
                    i.useRef)(d);
                (0,
                    i.useEffect)(() => {
                        y.current = d
                    }
                        , [d]);
                let [v, b] = (0,
                    i.useState)(!1)
                    , [w, E] = (0,
                        i.useState)(!1)
                    , { props: A, meta: _ } = (0,
                        a.getImgProps)(t, {
                            defaultLoader: h.default,
                            imgConf: o,
                            blurComplete: v,
                            showAltText: w
                        });
                return i.default.createElement(i.default.Fragment, null, i.default.createElement(m, {
                    ...A,
                    unoptimized: _.unoptimized,
                    placeholder: _.placeholder,
                    fill: _.fill,
                    onLoadRef: p,
                    onLoadingCompleteRef: y,
                    setBlurComplete: b,
                    setShowAltText: E,
                    ref: e
                }), _.priority ? i.default.createElement(g, {
                    isAppRouter: !r,
                    imgAttributes: A
                }) : null)
            }
            );
        ("function" == typeof e.default || "object" == typeof e.default && null !== e.default) && void 0 === e.default.__esModule && (Object.defineProperty(e.default, "__esModule", {
            value: !0
        }),
            Object.assign(e.default, e),
            t.exports = e.default)
    },
    28569: function (t, e, r) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
            Object.defineProperty(e, "AmpStateContext", {
                enumerable: !0,
                get: function () {
                    return n
                }
            });
        let n = r(21024)._(r(2265)).default.createContext({})
    },
    94472: function (t, e) {
        "use strict";
        function r(t) {
            let { ampFirst: e = !1, hybrid: r = !1, hasQuery: n = !1 } = void 0 === t ? {} : t;
            return e || r && n
        }
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
            Object.defineProperty(e, "isInAmpMode", {
                enumerable: !0,
                get: function () {
                    return r
                }
            })
    },
    7929: function (t, e, r) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
            Object.defineProperty(e, "getImgProps", {
                enumerable: !0,
                get: function () {
                    return a
                }
            }),
            r(92637);
        let n = r(61511)
            , i = r(17727);
        function o(t) {
            return void 0 !== t.default
        }
        function s(t) {
            return void 0 === t ? t : "number" == typeof t ? Number.isFinite(t) ? t : NaN : "string" == typeof t && /^[0-9]+$/.test(t) ? parseInt(t, 10) : NaN
        }
        function a(t, e) {
            var r;
            let a, l, u, { src: c, sizes: h, unoptimized: f = !1, priority: d = !1, loading: p, className: m, quality: g, width: y, height: v, fill: b = !1, style: w, onLoad: E, onLoadingComplete: A, placeholder: _ = "empty", blurDataURL: S, fetchPriority: k, layout: P, objectFit: N, objectPosition: C, lazyBoundary: T, lazyRoot: x, ...R } = t, { imgConf: I, showAltText: O, blurComplete: M, defaultLoader: B } = e, D = I || i.imageConfigDefault;
            if ("allSizes" in D)
                a = D;
            else {
                let t = [...D.deviceSizes, ...D.imageSizes].sort((t, e) => t - e)
                    , e = D.deviceSizes.sort((t, e) => t - e);
                a = {
                    ...D,
                    allSizes: t,
                    deviceSizes: e
                }
            }
            let F = R.loader || B;
            delete R.loader,
                delete R.srcSet;
            let U = "__next_img_default" in F;
            if (U) {
                if ("custom" === a.loader)
                    throw Error('Image with src "' + c + '" is missing "loader" prop.\nRead more: https://nextjs.org/docs/messages/next-image-missing-loader')
            } else {
                let t = F;
                F = e => {
                    let { config: r, ...n } = e;
                    return t(n)
                }
            }
            if (P) {
                "fill" === P && (b = !0);
                let t = {
                    intrinsic: {
                        maxWidth: "100%",
                        height: "auto"
                    },
                    responsive: {
                        width: "100%",
                        height: "auto"
                    }
                }[P];
                t && (w = {
                    ...w,
                    ...t
                });
                let e = {
                    responsive: "100vw",
                    fill: "100vw"
                }[P];
                e && !h && (h = e)
            }
            let L = ""
                , z = s(y)
                , G = s(v);
            if ("object" == typeof (r = c) && (o(r) || void 0 !== r.src)) {
                let t = o(c) ? c.default : c;
                if (!t.src)
                    throw Error("An object should only be passed to the image component src parameter if it comes from a static image import. It must include src. Received " + JSON.stringify(t));
                if (!t.height || !t.width)
                    throw Error("An object should only be passed to the image component src parameter if it comes from a static image import. It must include height and width. Received " + JSON.stringify(t));
                if (l = t.blurWidth,
                    u = t.blurHeight,
                    S = S || t.blurDataURL,
                    L = t.src,
                    !b) {
                    if (z || G) {
                        if (z && !G) {
                            let e = z / t.width;
                            G = Math.round(t.height * e)
                        } else if (!z && G) {
                            let e = G / t.height;
                            z = Math.round(t.width * e)
                        }
                    } else
                        z = t.width,
                            G = t.height
                }
            }
            let j = !d && ("lazy" === p || void 0 === p);
            (!(c = "string" == typeof c ? c : L) || c.startsWith("data:") || c.startsWith("blob:")) && (f = !0,
                j = !1),
                a.unoptimized && (f = !0),
                U && c.endsWith(".svg") && !a.dangerouslyAllowSVG && (f = !0),
                d && (k = "high");
            let Y = s(g)
                , K = Object.assign(b ? {
                    position: "absolute",
                    height: "100%",
                    width: "100%",
                    left: 0,
                    top: 0,
                    right: 0,
                    bottom: 0,
                    objectFit: N,
                    objectPosition: C
                } : {}, O ? {} : {
                    color: "transparent"
                }, w)
                , q = M || "empty" === _ ? null : "blur" === _ ? 'url("data:image/svg+xml;charset=utf-8,' + (0,
                    n.getImageBlurSvg)({
                        widthInt: z,
                        heightInt: G,
                        blurWidth: l,
                        blurHeight: u,
                        blurDataURL: S || "",
                        objectFit: K.objectFit
                    }) + '")' : 'url("' + _ + '")'
                , H = q ? {
                    backgroundSize: K.objectFit || "cover",
                    backgroundPosition: K.objectPosition || "50% 50%",
                    backgroundRepeat: "no-repeat",
                    backgroundImage: q
                } : {}
                , J = function (t) {
                    let { config: e, src: r, unoptimized: n, width: i, quality: o, sizes: s, loader: a } = t;
                    if (n)
                        return {
                            src: r,
                            srcSet: void 0,
                            sizes: void 0
                        };
                    let { widths: l, kind: u } = function (t, e, r) {
                        let { deviceSizes: n, allSizes: i } = t;
                        if (r) {
                            let t = /(^|\s)(1?\d?\d)vw/g
                                , e = [];
                            for (let n; n = t.exec(r); n)
                                e.push(parseInt(n[2]));
                            if (e.length) {
                                let t = .01 * Math.min(...e);
                                return {
                                    widths: i.filter(e => e >= n[0] * t),
                                    kind: "w"
                                }
                            }
                            return {
                                widths: i,
                                kind: "w"
                            }
                        }
                        return "number" != typeof e ? {
                            widths: n,
                            kind: "w"
                        } : {
                            widths: [...new Set([e, 2 * e].map(t => i.find(e => e >= t) || i[i.length - 1]))],
                            kind: "x"
                        }
                    }(e, i, s)
                        , c = l.length - 1;
                    return {
                        sizes: s || "w" !== u ? s : "100vw",
                        srcSet: l.map((t, n) => a({
                            config: e,
                            src: r,
                            quality: o,
                            width: t
                        }) + " " + ("w" === u ? t : n + 1) + u).join(", "),
                        src: a({
                            config: e,
                            src: r,
                            quality: o,
                            width: l[c]
                        })
                    }
                }({
                    config: a,
                    src: c,
                    unoptimized: f,
                    width: z,
                    quality: Y,
                    sizes: h,
                    loader: F
                });
            return {
                props: {
                    ...R,
                    loading: j ? "lazy" : p,
                    fetchPriority: k,
                    width: z,
                    height: G,
                    decoding: "async",
                    className: m,
                    style: {
                        ...K,
                        ...H
                    },
                    sizes: J.sizes,
                    srcSet: J.srcSet,
                    src: J.src
                },
                meta: {
                    unoptimized: f,
                    priority: d,
                    placeholder: _,
                    fill: b
                }
            }
        }
    },
    35793: function (t, e, r) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
            function (t, e) {
                for (var r in e)
                    Object.defineProperty(t, r, {
                        enumerable: !0,
                        get: e[r]
                    })
            }(e, {
                defaultHead: function () {
                    return u
                },
                default: function () {
                    return d
                }
            });
        let n = r(21024)
            , i = r(68533)._(r(2265))
            , o = n._(r(80110))
            , s = r(28569)
            , a = r(61852)
            , l = r(94472);
        function u(t) {
            void 0 === t && (t = !1);
            let e = [i.default.createElement("meta", {
                charSet: "utf-8"
            })];
            return t || e.push(i.default.createElement("meta", {
                name: "viewport",
                content: "width=device-width"
            })),
                e
        }
        function c(t, e) {
            return "string" == typeof e || "number" == typeof e ? t : e.type === i.default.Fragment ? t.concat(i.default.Children.toArray(e.props.children).reduce((t, e) => "string" == typeof e || "number" == typeof e ? t : t.concat(e), [])) : t.concat(e)
        }
        r(92637);
        let h = ["name", "httpEquiv", "charSet", "itemProp"];
        function f(t, e) {
            let { inAmpMode: r } = e;
            return t.reduce(c, []).reverse().concat(u(r).reverse()).filter(function () {
                let t = new Set
                    , e = new Set
                    , r = new Set
                    , n = {};
                return i => {
                    let o = !0
                        , s = !1;
                    if (i.key && "number" != typeof i.key && i.key.indexOf("$") > 0) {
                        s = !0;
                        let e = i.key.slice(i.key.indexOf("$") + 1);
                        t.has(e) ? o = !1 : t.add(e)
                    }
                    switch (i.type) {
                        case "title":
                        case "base":
                            e.has(i.type) ? o = !1 : e.add(i.type);
                            break;
                        case "meta":
                            for (let t = 0, e = h.length; t < e; t++) {
                                let e = h[t];
                                if (i.props.hasOwnProperty(e)) {
                                    if ("charSet" === e)
                                        r.has(e) ? o = !1 : r.add(e);
                                    else {
                                        let t = i.props[e]
                                            , r = n[e] || new Set;
                                        ("name" !== e || !s) && r.has(t) ? o = !1 : (r.add(t),
                                            n[e] = r)
                                    }
                                }
                            }
                    }
                    return o
                }
            }()).reverse().map((t, e) => {
                let n = t.key || e;
                if (!r && "link" === t.type && t.props.href && ["https://fonts.googleapis.com/css", "https://use.typekit.net/"].some(e => t.props.href.startsWith(e))) {
                    let e = {
                        ...t.props || {}
                    };
                    return e["data-href"] = e.href,
                        e.href = void 0,
                        e["data-optimized-fonts"] = !0,
                        i.default.cloneElement(t, e)
                }
                return i.default.cloneElement(t, {
                    key: n
                })
            }
            )
        }
        let d = function (t) {
            let { children: e } = t
                , r = (0,
                    i.useContext)(s.AmpStateContext)
                , n = (0,
                    i.useContext)(a.HeadManagerContext);
            return i.default.createElement(o.default, {
                reduceComponentsToState: f,
                headManager: n,
                inAmpMode: (0,
                    l.isInAmpMode)(r)
            }, e)
        };
        ("function" == typeof e.default || "object" == typeof e.default && null !== e.default) && void 0 === e.default.__esModule && (Object.defineProperty(e.default, "__esModule", {
            value: !0
        }),
            Object.assign(e.default, e),
            t.exports = e.default)
    },
    61511: function (t, e) {
        "use strict";
        function r(t) {
            let { widthInt: e, heightInt: r, blurWidth: n, blurHeight: i, blurDataURL: o, objectFit: s } = t
                , a = n ? 40 * n : e
                , l = i ? 40 * i : r
                , u = a && l ? "viewBox='0 0 " + a + " " + l + "'" : "";
            return "%3Csvg xmlns='http://www.w3.org/2000/svg' " + u + "%3E%3Cfilter id='b' color-interpolation-filters='sRGB'%3E%3CfeGaussianBlur stdDeviation='20'/%3E%3CfeColorMatrix values='1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 100 -1' result='s'/%3E%3CfeFlood x='0' y='0' width='100%25' height='100%25'/%3E%3CfeComposite operator='out' in='s'/%3E%3CfeComposite in2='SourceGraphic'/%3E%3CfeGaussianBlur stdDeviation='20'/%3E%3C/filter%3E%3Cimage width='100%25' height='100%25' x='0' y='0' preserveAspectRatio='" + (u ? "none" : "contain" === s ? "xMidYMid" : "cover" === s ? "xMidYMid slice" : "none") + "' style='filter: url(%23b);' href='" + o + "'/%3E%3C/svg%3E"
        }
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
            Object.defineProperty(e, "getImageBlurSvg", {
                enumerable: !0,
                get: function () {
                    return r
                }
            })
    },
    47327: function (t, e, r) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
            Object.defineProperty(e, "ImageConfigContext", {
                enumerable: !0,
                get: function () {
                    return o
                }
            });
        let n = r(21024)._(r(2265))
            , i = r(17727)
            , o = n.default.createContext(i.imageConfigDefault)
    },
    17727: function (t, e) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
            function (t, e) {
                for (var r in e)
                    Object.defineProperty(t, r, {
                        enumerable: !0,
                        get: e[r]
                    })
            }(e, {
                VALID_LOADERS: function () {
                    return r
                },
                imageConfigDefault: function () {
                    return n
                }
            });
        let r = ["default", "imgix", "cloudinary", "akamai", "custom"]
            , n = {
                deviceSizes: [640, 750, 828, 1080, 1200, 1920, 2048, 3840],
                imageSizes: [16, 32, 48, 64, 96, 128, 256, 384],
                path: "/_next/image",
                loader: "default",
                loaderFile: "",
                domains: [],
                disableStaticImages: !1,
                minimumCacheTTL: 60,
                formats: ["image/webp"],
                dangerouslyAllowSVG: !1,
                contentSecurityPolicy: "script-src 'none'; frame-src 'none'; sandbox;",
                contentDispositionType: "inline",
                remotePatterns: [],
                unoptimized: !1
            }
    },
    80679: function (t, e, r) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
            function (t, e) {
                for (var r in e)
                    Object.defineProperty(t, r, {
                        enumerable: !0,
                        get: e[r]
                    })
            }(e, {
                unstable_getImgProps: function () {
                    return l
                },
                default: function () {
                    return u
                }
            });
        let n = r(21024)
            , i = r(7929)
            , o = r(92637)
            , s = r(90413)
            , a = n._(r(69950))
            , l = t => {
                (0,
                    o.warnOnce)("Warning: unstable_getImgProps() is experimental and may change or be removed at any time. Use at your own risk.");
                let { props: e } = (0,
                    i.getImgProps)(t, {
                        defaultLoader: a.default,
                        imgConf: {
                            deviceSizes: [640, 750, 828, 1080, 1200, 1920, 2048, 3840],
                            imageSizes: [16, 32, 48, 64, 96, 128, 256, 384],
                            path: "/_next/image",
                            loader: "default",
                            dangerouslyAllowSVG: !1,
                            unoptimized: !1
                        }
                    });
                for (let [t, r] of Object.entries(e))
                    void 0 === r && delete e[t];
                return {
                    props: e
                }
            }
            , u = s.Image
    },
    69950: function (t, e) {
        "use strict";
        function r(t) {
            let { config: e, src: r, width: n, quality: i } = t;
            return e.path + "?url=" + encodeURIComponent(r) + "&w=" + n + "&q=" + (i || 75)
        }
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
            Object.defineProperty(e, "default", {
                enumerable: !0,
                get: function () {
                    return n
                }
            }),
            r.__next_img_default = !0;
        let n = r
    },
    36304: function (t, e, r) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
            Object.defineProperty(e, "RouterContext", {
                enumerable: !0,
                get: function () {
                    return n
                }
            });
        let n = r(21024)._(r(2265)).default.createContext(null)
    },
    80110: function (t, e, r) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
            Object.defineProperty(e, "default", {
                enumerable: !0,
                get: function () {
                    return s
                }
            });
        let n = r(2265)
            , i = n.useLayoutEffect
            , o = n.useEffect;
        function s(t) {
            let { headManager: e, reduceComponentsToState: r } = t;
            function s() {
                if (e && e.mountedInstances) {
                    let i = n.Children.toArray(Array.from(e.mountedInstances).filter(Boolean));
                    e.updateHead(r(i, t))
                }
            }
            return i(() => {
                var r;
                return null == e || null == (r = e.mountedInstances) || r.add(t.children),
                    () => {
                        var r;
                        null == e || null == (r = e.mountedInstances) || r.delete(t.children)
                    }
            }
            ),
                i(() => (e && (e._pendingUpdate = s),
                    () => {
                        e && (e._pendingUpdate = s)
                    }
                )),
                o(() => (e && e._pendingUpdate && (e._pendingUpdate(),
                    e._pendingUpdate = null),
                    () => {
                        e && e._pendingUpdate && (e._pendingUpdate(),
                            e._pendingUpdate = null)
                    }
                )),
                null
        }
    },
    92637: function (t, e) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        }),
            Object.defineProperty(e, "warnOnce", {
                enumerable: !0,
                get: function () {
                    return r
                }
            });
        let r = t => { }
    },
    30622: function (t, e, r) {
        "use strict";
        var n = r(2265)
            , i = Symbol.for("react.element")
            , o = Symbol.for("react.fragment")
            , s = Object.prototype.hasOwnProperty
            , a = n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner
            , l = {
                key: !0,
                ref: !0,
                __self: !0,
                __source: !0
            };
        function u(t, e, r) {
            var n, o = {}, u = null, c = null;
            for (n in void 0 !== r && (u = "" + r),
                void 0 !== e.key && (u = "" + e.key),
                void 0 !== e.ref && (c = e.ref),
                e)
                s.call(e, n) && !l.hasOwnProperty(n) && (o[n] = e[n]);
            if (t && t.defaultProps)
                for (n in e = t.defaultProps)
                    void 0 === o[n] && (o[n] = e[n]);
            return {
                $$typeof: i,
                type: t,
                key: u,
                ref: c,
                props: o,
                _owner: a.current
            }
        }
        e.Fragment = o,
            e.jsx = u,
            e.jsxs = u
    },
    57437: function (t, e, r) {
        "use strict";
        t.exports = r(30622)
    },
    16691: function (t, e, r) {
        t.exports = r(80679)
    },
    25566: function (t) {
        var e, r, n, i = t.exports = {};
        function o() {
            throw Error("setTimeout has not been defined")
        }
        function s() {
            throw Error("clearTimeout has not been defined")
        }
        function a(t) {
            if (e === setTimeout)
                return setTimeout(t, 0);
            if ((e === o || !e) && setTimeout)
                return e = setTimeout,
                    setTimeout(t, 0);
            try {
                return e(t, 0)
            } catch (r) {
                try {
                    return e.call(null, t, 0)
                } catch (r) {
                    return e.call(this, t, 0)
                }
            }
        }
        !function () {
            try {
                e = "function" == typeof setTimeout ? setTimeout : o
            } catch (t) {
                e = o
            }
            try {
                r = "function" == typeof clearTimeout ? clearTimeout : s
            } catch (t) {
                r = s
            }
        }();
        var l = []
            , u = !1
            , c = -1;
        function h() {
            u && n && (u = !1,
                n.length ? l = n.concat(l) : c = -1,
                l.length && f())
        }
        function f() {
            if (!u) {
                var t = a(h);
                u = !0;
                for (var e = l.length; e;) {
                    for (n = l,
                        l = []; ++c < e;)
                        n && n[c].run();
                    c = -1,
                        e = l.length
                }
                n = null,
                    u = !1,
                    function (t) {
                        if (r === clearTimeout)
                            return clearTimeout(t);
                        if ((r === s || !r) && clearTimeout)
                            return r = clearTimeout,
                                clearTimeout(t);
                        try {
                            r(t)
                        } catch (e) {
                            try {
                                return r.call(null, t)
                            } catch (e) {
                                return r.call(this, t)
                            }
                        }
                    }(t)
            }
        }
        function d(t, e) {
            this.fun = t,
                this.array = e
        }
        function p() { }
        i.nextTick = function (t) {
            var e = Array(arguments.length - 1);
            if (arguments.length > 1)
                for (var r = 1; r < arguments.length; r++)
                    e[r - 1] = arguments[r];
            l.push(new d(t, e)),
                1 !== l.length || u || a(f)
        }
            ,
            d.prototype.run = function () {
                this.fun.apply(null, this.array)
            }
            ,
            i.title = "browser",
            i.browser = !0,
            i.env = {},
            i.argv = [],
            i.version = "",
            i.versions = {},
            i.on = p,
            i.addListener = p,
            i.once = p,
            i.off = p,
            i.removeListener = p,
            i.removeAllListeners = p,
            i.emit = p,
            i.prependListener = p,
            i.prependOnceListener = p,
            i.listeners = function (t) {
                return []
            }
            ,
            i.binding = function (t) {
                throw Error("process.binding is not supported")
            }
            ,
            i.cwd = function () {
                return "/"
            }
            ,
            i.chdir = function (t) {
                throw Error("process.chdir is not supported")
            }
            ,
            i.umask = function () {
                return 0
            }
    },
    29150: function (t) {
        "use strict";
        !function (e) {
            function r(t) {
                let e = new Uint32Array([1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298])
                    , r = 1779033703
                    , n = 3144134277
                    , i = 1013904242
                    , o = 2773480762
                    , s = 1359893119
                    , a = 2600822924
                    , l = 528734635
                    , u = 1541459225
                    , c = new Uint32Array(64);
                function h(t) {
                    let h = 0
                        , f = t.length;
                    for (; f >= 64;) {
                        let d = r, p = n, m = i, g = o, y = s, v = a, b = l, w = u, E, A, _, S, k;
                        for (A = 0; A < 16; A++)
                            _ = h + 4 * A,
                                c[A] = (255 & t[_]) << 24 | (255 & t[_ + 1]) << 16 | (255 & t[_ + 2]) << 8 | 255 & t[_ + 3];
                        for (A = 16; A < 64; A++)
                            S = ((E = c[A - 2]) >>> 17 | E << 15) ^ (E >>> 19 | E << 13) ^ E >>> 10,
                                k = ((E = c[A - 15]) >>> 7 | E << 25) ^ (E >>> 18 | E << 14) ^ E >>> 3,
                                c[A] = (S + c[A - 7] | 0) + (k + c[A - 16] | 0) | 0;
                        for (A = 0; A < 64; A++)
                            S = (((y >>> 6 | y << 26) ^ (y >>> 11 | y << 21) ^ (y >>> 25 | y << 7)) + (y & v ^ ~y & b) | 0) + (w + (e[A] + c[A] | 0) | 0) | 0,
                                k = ((d >>> 2 | d << 30) ^ (d >>> 13 | d << 19) ^ (d >>> 22 | d << 10)) + (d & p ^ d & m ^ p & m) | 0,
                                w = b,
                                b = v,
                                v = y,
                                y = g + S | 0,
                                g = m,
                                m = p,
                                p = d,
                                d = S + k | 0;
                        r = r + d | 0,
                            n = n + p | 0,
                            i = i + m | 0,
                            o = o + g | 0,
                            s = s + y | 0,
                            a = a + v | 0,
                            l = l + b | 0,
                            u = u + w | 0,
                            h += 64,
                            f -= 64
                    }
                }
                h(t);
                let f, d = t.length % 64, p = t.length / 536870912 | 0, m = t.length << 3, g = d < 56 ? 56 : 120, y = t.slice(t.length - d, t.length);
                for (y.push(128),
                    f = d + 1; f < g; f++)
                    y.push(0);
                return y.push(p >>> 24 & 255),
                    y.push(p >>> 16 & 255),
                    y.push(p >>> 8 & 255),
                    y.push(p >>> 0 & 255),
                    y.push(m >>> 24 & 255),
                    y.push(m >>> 16 & 255),
                    y.push(m >>> 8 & 255),
                    y.push(m >>> 0 & 255),
                    h(y),
                    [r >>> 24 & 255, r >>> 16 & 255, r >>> 8 & 255, r >>> 0 & 255, n >>> 24 & 255, n >>> 16 & 255, n >>> 8 & 255, n >>> 0 & 255, i >>> 24 & 255, i >>> 16 & 255, i >>> 8 & 255, i >>> 0 & 255, o >>> 24 & 255, o >>> 16 & 255, o >>> 8 & 255, o >>> 0 & 255, s >>> 24 & 255, s >>> 16 & 255, s >>> 8 & 255, s >>> 0 & 255, a >>> 24 & 255, a >>> 16 & 255, a >>> 8 & 255, a >>> 0 & 255, l >>> 24 & 255, l >>> 16 & 255, l >>> 8 & 255, l >>> 0 & 255, u >>> 24 & 255, u >>> 16 & 255, u >>> 8 & 255, u >>> 0 & 255]
            }
            function n(t, e, n) {
                let i;
                t = t.length <= 64 ? t : r(t);
                let o = 64 + e.length + 4
                    , s = Array(o)
                    , a = Array(64)
                    , l = [];
                for (i = 0; i < 64; i++)
                    s[i] = 54;
                for (i = 0; i < t.length; i++)
                    s[i] ^= t[i];
                for (i = 0; i < e.length; i++)
                    s[64 + i] = e[i];
                for (i = o - 4; i < o; i++)
                    s[i] = 0;
                for (i = 0; i < 64; i++)
                    a[i] = 92;
                for (i = 0; i < t.length; i++)
                    a[i] ^= t[i];
                function u() {
                    for (let t = o - 1; t >= o - 4; t--) {
                        if (s[t]++,
                            s[t] <= 255)
                            return;
                        s[t] = 0
                    }
                }
                for (; n >= 32;)
                    u(),
                        l = l.concat(r(a.concat(r(s)))),
                        n -= 32;
                return n > 0 && (u(),
                    l = l.concat(r(a.concat(r(s))).slice(0, n))),
                    l
            }
            function i(t, e, r, n, i) {
                let l;
                for (a(t, (2 * r - 1) * 16, i, 0, 16),
                    l = 0; l < 2 * r; l++)
                    s(t, 16 * l, i, 16),
                        function (t, e) {
                            a(t, 0, e, 0, 16);
                            for (let t = 8; t > 0; t -= 2)
                                e[4] ^= o(e[0] + e[12], 7),
                                    e[8] ^= o(e[4] + e[0], 9),
                                    e[12] ^= o(e[8] + e[4], 13),
                                    e[0] ^= o(e[12] + e[8], 18),
                                    e[9] ^= o(e[5] + e[1], 7),
                                    e[13] ^= o(e[9] + e[5], 9),
                                    e[1] ^= o(e[13] + e[9], 13),
                                    e[5] ^= o(e[1] + e[13], 18),
                                    e[14] ^= o(e[10] + e[6], 7),
                                    e[2] ^= o(e[14] + e[10], 9),
                                    e[6] ^= o(e[2] + e[14], 13),
                                    e[10] ^= o(e[6] + e[2], 18),
                                    e[3] ^= o(e[15] + e[11], 7),
                                    e[7] ^= o(e[3] + e[15], 9),
                                    e[11] ^= o(e[7] + e[3], 13),
                                    e[15] ^= o(e[11] + e[7], 18),
                                    e[1] ^= o(e[0] + e[3], 7),
                                    e[2] ^= o(e[1] + e[0], 9),
                                    e[3] ^= o(e[2] + e[1], 13),
                                    e[0] ^= o(e[3] + e[2], 18),
                                    e[6] ^= o(e[5] + e[4], 7),
                                    e[7] ^= o(e[6] + e[5], 9),
                                    e[4] ^= o(e[7] + e[6], 13),
                                    e[5] ^= o(e[4] + e[7], 18),
                                    e[11] ^= o(e[10] + e[9], 7),
                                    e[8] ^= o(e[11] + e[10], 9),
                                    e[9] ^= o(e[8] + e[11], 13),
                                    e[10] ^= o(e[9] + e[8], 18),
                                    e[12] ^= o(e[15] + e[14], 7),
                                    e[13] ^= o(e[12] + e[15], 9),
                                    e[14] ^= o(e[13] + e[12], 13),
                                    e[15] ^= o(e[14] + e[13], 18);
                            for (let r = 0; r < 16; ++r)
                                t[r] += e[r]
                        }(i, n),
                        a(i, 0, t, e + 16 * l, 16);
                for (l = 0; l < r; l++)
                    a(t, e + 32 * l, t, 16 * l, 16);
                for (l = 0; l < r; l++)
                    a(t, e + (2 * l + 1) * 16, t, (l + r) * 16, 16)
            }
            function o(t, e) {
                return t << e | t >>> 32 - e
            }
            function s(t, e, r, n) {
                for (let i = 0; i < n; i++)
                    r[i] ^= t[e + i]
            }
            function a(t, e, r, n, i) {
                for (; i--;)
                    r[n++] = t[e++]
            }
            function l(t) {
                if (!t || "number" != typeof t.length)
                    return !1;
                for (let e = 0; e < t.length; e++) {
                    let r = t[e];
                    if ("number" != typeof r || r % 1 || r < 0 || r >= 256)
                        return !1
                }
                return !0
            }
            function u(t, e) {
                if ("number" != typeof t || t % 1)
                    throw Error("invalid " + e);
                return t
            }
            function c(t, e, r, o, c, h, f) {
                let d;
                if (r = u(r, "N"),
                    o = u(o, "r"),
                    c = u(c, "p"),
                    h = u(h, "dkLen"),
                    0 === r || (r & r - 1) != 0)
                    throw Error("N must be power of 2");
                if (r > 2147483647 / 128 / o)
                    throw Error("N too large");
                if (o > 2147483647 / 128 / c)
                    throw Error("r too large");
                if (!l(t))
                    throw Error("password must be an array or buffer");
                if (t = Array.prototype.slice.call(t),
                    !l(e))
                    throw Error("salt must be an array or buffer");
                e = Array.prototype.slice.call(e);
                let p = n(t, e, 128 * c * o)
                    , m = new Uint32Array(32 * c * o);
                for (let t = 0; t < m.length; t++) {
                    let e = 4 * t;
                    m[t] = (255 & p[e + 3]) << 24 | (255 & p[e + 2]) << 16 | (255 & p[e + 1]) << 8 | (255 & p[e + 0]) << 0
                }
                let g = new Uint32Array(64 * o), y = new Uint32Array(32 * o * r), v = 32 * o, b = new Uint32Array(16), w = new Uint32Array(16), E = c * r * 2, A = 0, _ = null, S = !1, k = 0, P = 0, N, C = f ? parseInt(1e3 / o) : 4294967295, T = "undefined" != typeof setImmediate ? setImmediate : setTimeout, x = function () {
                    let e;
                    if (S)
                        return f(Error("cancelled"), A / E);
                    switch (k) {
                        case 0:
                            a(m, d = 32 * P * o, g, 0, v),
                                k = 1,
                                N = 0;
                        case 1:
                            (e = r - N) > C && (e = C);
                            for (let t = 0; t < e; t++)
                                a(g, 0, y, (N + t) * v, v),
                                    i(g, v, o, b, w);
                            if (N += e,
                                A += e,
                                f) {
                                let t = parseInt(1e3 * A / E);
                                if (t !== _) {
                                    if (S = f(null, A / E))
                                        break;
                                    _ = t
                                }
                            }
                            if (N < r)
                                break;
                            N = 0,
                                k = 2;
                        case 2:
                            (e = r - N) > C && (e = C);
                            for (let t = 0; t < e; t++)
                                s(y, (g[(2 * o - 1) * 16] & r - 1) * v, g, v),
                                    i(g, v, o, b, w);
                            if (N += e,
                                A += e,
                                f) {
                                let t = parseInt(1e3 * A / E);
                                if (t !== _) {
                                    if (S = f(null, A / E))
                                        break;
                                    _ = t
                                }
                            }
                            if (N < r)
                                break;
                            if (a(g, 0, m, d, v),
                                ++P < c) {
                                k = 0;
                                break
                            }
                            p = [];
                            for (let t = 0; t < m.length; t++)
                                p.push(m[t] >> 0 & 255),
                                    p.push(m[t] >> 8 & 255),
                                    p.push(m[t] >> 16 & 255),
                                    p.push(m[t] >> 24 & 255);
                            let l = n(t, p, h);
                            return f && f(null, 1, l),
                                l
                    }
                    f && T(x)
                };
                if (!f)
                    for (; ;) {
                        let t = x();
                        if (void 0 != t)
                            return t
                    }
                x()
            }
            t.exports = {
                scrypt: function (t, e, r, n, i, o, s) {
                    return new Promise(function (a, l) {
                        let u = 0;
                        s && s(0),
                            c(t, e, r, n, i, o, function (t, e, r) {
                                if (t)
                                    l(t);
                                else if (r)
                                    s && 1 !== u && s(1),
                                        a(new Uint8Array(r));
                                else if (s && e !== u)
                                    return u = e,
                                        s(e)
                            })
                    }
                    )
                },
                syncScrypt: function (t, e, r, n, i, o) {
                    return new Uint8Array(c(t, e, r, n, i, o))
                }
            }
        }(0)
    },
    81853: function (t, e, r) {
        "use strict";
        /**
 * @license React
 * use-sync-external-store-shim.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
        var n = r(2265)
            , i = "function" == typeof Object.is ? Object.is : function (t, e) {
                return t === e && (0 !== t || 1 / t == 1 / e) || t != t && e != e
            }
            , o = n.useState
            , s = n.useEffect
            , a = n.useLayoutEffect
            , l = n.useDebugValue;
        function u(t) {
            var e = t.getSnapshot;
            t = t.value;
            try {
                var r = e();
                return !i(t, r)
            } catch (t) {
                return !0
            }
        }
        var c = "undefined" == typeof window || void 0 === window.document || void 0 === window.document.createElement ? function (t, e) {
            return e()
        }
            : function (t, e) {
                var r = e()
                    , n = o({
                        inst: {
                            value: r,
                            getSnapshot: e
                        }
                    })
                    , i = n[0].inst
                    , c = n[1];
                return a(function () {
                    i.value = r,
                        i.getSnapshot = e,
                        u(i) && c({
                            inst: i
                        })
                }, [t, r, e]),
                    s(function () {
                        return u(i) && c({
                            inst: i
                        }),
                            t(function () {
                                u(i) && c({
                                    inst: i
                                })
                            })
                    }, [t]),
                    l(r),
                    r
            }
            ;
        e.useSyncExternalStore = void 0 !== n.useSyncExternalStore ? n.useSyncExternalStore : c
    },
    78704: function (t, e, r) {
        "use strict";
        /**
 * @license React
 * use-sync-external-store-shim/with-selector.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
        var n = r(2265)
            , i = r(26272)
            , o = "function" == typeof Object.is ? Object.is : function (t, e) {
                return t === e && (0 !== t || 1 / t == 1 / e) || t != t && e != e
            }
            , s = i.useSyncExternalStore
            , a = n.useRef
            , l = n.useEffect
            , u = n.useMemo
            , c = n.useDebugValue;
        e.useSyncExternalStoreWithSelector = function (t, e, r, n, i) {
            var h = a(null);
            if (null === h.current) {
                var f = {
                    hasValue: !1,
                    value: null
                };
                h.current = f
            } else
                f = h.current;
            var d = s(t, (h = u(function () {
                function t(t) {
                    if (!l) {
                        if (l = !0,
                            s = t,
                            t = n(t),
                            void 0 !== i && f.hasValue) {
                            var e = f.value;
                            if (i(e, t))
                                return a = e
                        }
                        return a = t
                    }
                    if (e = a,
                        o(s, t))
                        return e;
                    var r = n(t);
                    return void 0 !== i && i(e, r) ? e : (s = t,
                        a = r)
                }
                var s, a, l = !1, u = void 0 === r ? null : r;
                return [function () {
                    return t(e())
                }
                    , null === u ? void 0 : function () {
                        return t(u())
                    }
                ]
            }, [e, r, n, i]))[0], h[1]);
            return l(function () {
                f.hasValue = !0,
                    f.value = d
            }, [d]),
                c(d),
                d
        }
    },
    26272: function (t, e, r) {
        "use strict";
        t.exports = r(81853)
    },
    65401: function (t, e, r) {
        "use strict";
        t.exports = r(78704)
    },
    92173: function (t, e, r) {
        "use strict";
        r.d(e, {
            Z: function () {
                return tK
            }
        });
        var n, i, o, s = {};
        function a(t, e) {
            return function () {
                return t.apply(e, arguments)
            }
        }
        r.r(s),
            r.d(s, {
                hasBrowserEnv: function () {
                    return to
                },
                hasStandardBrowserEnv: function () {
                    return ts
                },
                hasStandardBrowserWebWorkerEnv: function () {
                    return ta
                }
            });
        let { toString: l } = Object.prototype
            , { getPrototypeOf: u } = Object
            , c = (n = Object.create(null),
                t => {
                    let e = l.call(t);
                    return n[e] || (n[e] = e.slice(8, -1).toLowerCase())
                }
            )
            , h = t => (t = t.toLowerCase(),
                e => c(e) === t)
            , f = t => e => typeof e === t
            , { isArray: d } = Array
            , p = f("undefined")
            , m = h("ArrayBuffer")
            , g = f("string")
            , y = f("function")
            , v = f("number")
            , b = t => null !== t && "object" == typeof t
            , w = t => {
                if ("object" !== c(t))
                    return !1;
                let e = u(t);
                return (null === e || e === Object.prototype || null === Object.getPrototypeOf(e)) && !(Symbol.toStringTag in t) && !(Symbol.iterator in t)
            }
            , E = h("Date")
            , A = h("File")
            , _ = h("Blob")
            , S = h("FileList")
            , k = h("URLSearchParams");
        function P(t, e, { allOwnKeys: r = !1 } = {}) {
            let n, i;
            if (null != t) {
                if ("object" != typeof t && (t = [t]),
                    d(t))
                    for (n = 0,
                        i = t.length; n < i; n++)
                        e.call(null, t[n], n, t);
                else {
                    let i;
                    let o = r ? Object.getOwnPropertyNames(t) : Object.keys(t)
                        , s = o.length;
                    for (n = 0; n < s; n++)
                        i = o[n],
                            e.call(null, t[i], i, t)
                }
            }
        }
        function N(t, e) {
            let r;
            e = e.toLowerCase();
            let n = Object.keys(t)
                , i = n.length;
            for (; i-- > 0;)
                if (e === (r = n[i]).toLowerCase())
                    return r;
            return null
        }
        let C = "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self ? self : "undefined" != typeof window ? window : global
            , T = t => !p(t) && t !== C
            , x = (i = "undefined" != typeof Uint8Array && u(Uint8Array),
                t => i && t instanceof i)
            , R = h("HTMLFormElement")
            , I = (({ hasOwnProperty: t }) => (e, r) => t.call(e, r))(Object.prototype)
            , O = h("RegExp")
            , M = (t, e) => {
                let r = Object.getOwnPropertyDescriptors(t)
                    , n = {};
                P(r, (r, i) => {
                    let o;
                    !1 !== (o = e(r, i, t)) && (n[i] = o || r)
                }
                ),
                    Object.defineProperties(t, n)
            }
            , B = "abcdefghijklmnopqrstuvwxyz"
            , D = "0123456789"
            , F = {
                DIGIT: D,
                ALPHA: B,
                ALPHA_DIGIT: B + B.toUpperCase() + D
            }
            , U = h("AsyncFunction");
        var L = {
            isArray: d,
            isArrayBuffer: m,
            isBuffer: function (t) {
                return null !== t && !p(t) && null !== t.constructor && !p(t.constructor) && y(t.constructor.isBuffer) && t.constructor.isBuffer(t)
            },
            isFormData: t => {
                let e;
                return t && ("function" == typeof FormData && t instanceof FormData || y(t.append) && ("formdata" === (e = c(t)) || "object" === e && y(t.toString) && "[object FormData]" === t.toString()))
            }
            ,
            isArrayBufferView: function (t) {
                return "undefined" != typeof ArrayBuffer && ArrayBuffer.isView ? ArrayBuffer.isView(t) : t && t.buffer && m(t.buffer)
            },
            isString: g,
            isNumber: v,
            isBoolean: t => !0 === t || !1 === t,
            isObject: b,
            isPlainObject: w,
            isUndefined: p,
            isDate: E,
            isFile: A,
            isBlob: _,
            isRegExp: O,
            isFunction: y,
            isStream: t => b(t) && y(t.pipe),
            isURLSearchParams: k,
            isTypedArray: x,
            isFileList: S,
            forEach: P,
            merge: function t() {
                let { caseless: e } = T(this) && this || {}
                    , r = {}
                    , n = (n, i) => {
                        let o = e && N(r, i) || i;
                        w(r[o]) && w(n) ? r[o] = t(r[o], n) : w(n) ? r[o] = t({}, n) : d(n) ? r[o] = n.slice() : r[o] = n
                    }
                    ;
                for (let t = 0, e = arguments.length; t < e; t++)
                    arguments[t] && P(arguments[t], n);
                return r
            },
            extend: (t, e, r, { allOwnKeys: n } = {}) => (P(e, (e, n) => {
                r && y(e) ? t[n] = a(e, r) : t[n] = e
            }
                , {
                    allOwnKeys: n
                }),
                t),
            trim: t => t.trim ? t.trim() : t.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, ""),
            stripBOM: t => (65279 === t.charCodeAt(0) && (t = t.slice(1)),
                t),
            inherits: (t, e, r, n) => {
                t.prototype = Object.create(e.prototype, n),
                    t.prototype.constructor = t,
                    Object.defineProperty(t, "super", {
                        value: e.prototype
                    }),
                    r && Object.assign(t.prototype, r)
            }
            ,
            toFlatObject: (t, e, r, n) => {
                let i, o, s;
                let a = {};
                if (e = e || {},
                    null == t)
                    return e;
                do {
                    for (o = (i = Object.getOwnPropertyNames(t)).length; o-- > 0;)
                        s = i[o],
                            (!n || n(s, t, e)) && !a[s] && (e[s] = t[s],
                                a[s] = !0);
                    t = !1 !== r && u(t)
                } while (t && (!r || r(t, e)) && t !== Object.prototype);
                return e
            }
            ,
            kindOf: c,
            kindOfTest: h,
            endsWith: (t, e, r) => {
                t = String(t),
                    (void 0 === r || r > t.length) && (r = t.length),
                    r -= e.length;
                let n = t.indexOf(e, r);
                return -1 !== n && n === r
            }
            ,
            toArray: t => {
                if (!t)
                    return null;
                if (d(t))
                    return t;
                let e = t.length;
                if (!v(e))
                    return null;
                let r = Array(e);
                for (; e-- > 0;)
                    r[e] = t[e];
                return r
            }
            ,
            forEachEntry: (t, e) => {
                let r;
                let n = (t && t[Symbol.iterator]).call(t);
                for (; (r = n.next()) && !r.done;) {
                    let n = r.value;
                    e.call(t, n[0], n[1])
                }
            }
            ,
            matchAll: (t, e) => {
                let r;
                let n = [];
                for (; null !== (r = t.exec(e));)
                    n.push(r);
                return n
            }
            ,
            isHTMLForm: R,
            hasOwnProperty: I,
            hasOwnProp: I,
            reduceDescriptors: M,
            freezeMethods: t => {
                M(t, (e, r) => {
                    if (y(t) && -1 !== ["arguments", "caller", "callee"].indexOf(r))
                        return !1;
                    if (y(t[r])) {
                        if (e.enumerable = !1,
                            "writable" in e) {
                            e.writable = !1;
                            return
                        }
                        e.set || (e.set = () => {
                            throw Error("Can not rewrite read-only method '" + r + "'")
                        }
                        )
                    }
                }
                )
            }
            ,
            toObjectSet: (t, e) => {
                let r = {};
                return (t => {
                    t.forEach(t => {
                        r[t] = !0
                    }
                    )
                }
                )(d(t) ? t : String(t).split(e)),
                    r
            }
            ,
            toCamelCase: t => t.toLowerCase().replace(/[-_\s]([a-z\d])(\w*)/g, function (t, e, r) {
                return e.toUpperCase() + r
            }),
            noop: () => { }
            ,
            toFiniteNumber: (t, e) => Number.isFinite(t = +t) ? t : e,
            findKey: N,
            global: C,
            isContextDefined: T,
            ALPHABET: F,
            generateString: (t = 16, e = F.ALPHA_DIGIT) => {
                let r = ""
                    , { length: n } = e;
                for (; t--;)
                    r += e[Math.random() * n | 0];
                return r
            }
            ,
            isSpecCompliantForm: function (t) {
                return !!(t && y(t.append) && "FormData" === t[Symbol.toStringTag] && t[Symbol.iterator])
            },
            toJSONObject: t => {
                let e = Array(10)
                    , r = (t, n) => {
                        if (b(t)) {
                            if (e.indexOf(t) >= 0)
                                return;
                            if (!("toJSON" in t)) {
                                e[n] = t;
                                let i = d(t) ? [] : {};
                                return P(t, (t, e) => {
                                    let o = r(t, n + 1);
                                    p(o) || (i[e] = o)
                                }
                                ),
                                    e[n] = void 0,
                                    i
                            }
                        }
                        return t
                    }
                    ;
                return r(t, 0)
            }
            ,
            isAsyncFn: U,
            isThenable: t => t && (b(t) || y(t)) && y(t.then) && y(t.catch)
        };
        function z(t, e, r, n, i) {
            Error.call(this),
                Error.captureStackTrace ? Error.captureStackTrace(this, this.constructor) : this.stack = Error().stack,
                this.message = t,
                this.name = "AxiosError",
                e && (this.code = e),
                r && (this.config = r),
                n && (this.request = n),
                i && (this.response = i)
        }
        L.inherits(z, Error, {
            toJSON: function () {
                return {
                    message: this.message,
                    name: this.name,
                    description: this.description,
                    number: this.number,
                    fileName: this.fileName,
                    lineNumber: this.lineNumber,
                    columnNumber: this.columnNumber,
                    stack: this.stack,
                    config: L.toJSONObject(this.config),
                    code: this.code,
                    status: this.response && this.response.status ? this.response.status : null
                }
            }
        });
        let G = z.prototype
            , j = {};
        ["ERR_BAD_OPTION_VALUE", "ERR_BAD_OPTION", "ECONNABORTED", "ETIMEDOUT", "ERR_NETWORK", "ERR_FR_TOO_MANY_REDIRECTS", "ERR_DEPRECATED", "ERR_BAD_RESPONSE", "ERR_BAD_REQUEST", "ERR_CANCELED", "ERR_NOT_SUPPORT", "ERR_INVALID_URL"].forEach(t => {
            j[t] = {
                value: t
            }
        }
        ),
            Object.defineProperties(z, j),
            Object.defineProperty(G, "isAxiosError", {
                value: !0
            }),
            z.from = (t, e, r, n, i, o) => {
                let s = Object.create(G);
                return L.toFlatObject(t, s, function (t) {
                    return t !== Error.prototype
                }, t => "isAxiosError" !== t),
                    z.call(s, t.message, e, r, n, i),
                    s.cause = t,
                    s.name = t.name,
                    o && Object.assign(s, o),
                    s
            }
            ;
        var Y = r(67133).Buffer;
        function K(t) {
            return L.isPlainObject(t) || L.isArray(t)
        }
        function q(t) {
            return L.endsWith(t, "[]") ? t.slice(0, -2) : t
        }
        function H(t, e, r) {
            return t ? t.concat(e).map(function (t, e) {
                return t = q(t),
                    !r && e ? "[" + t + "]" : t
            }).join(r ? "." : "") : e
        }
        let J = L.toFlatObject(L, {}, null, function (t) {
            return /^is[A-Z]/.test(t)
        });
        var V = function (t, e, r) {
            if (!L.isObject(t))
                throw TypeError("target must be an object");
            e = e || new FormData;
            let n = (r = L.toFlatObject(r, {
                metaTokens: !0,
                dots: !1,
                indexes: !1
            }, !1, function (t, e) {
                return !L.isUndefined(e[t])
            })).metaTokens
                , i = r.visitor || u
                , o = r.dots
                , s = r.indexes
                , a = (r.Blob || "undefined" != typeof Blob && Blob) && L.isSpecCompliantForm(e);
            if (!L.isFunction(i))
                throw TypeError("visitor must be a function");
            function l(t) {
                if (null === t)
                    return "";
                if (L.isDate(t))
                    return t.toISOString();
                if (!a && L.isBlob(t))
                    throw new z("Blob is not supported. Use a Buffer instead.");
                return L.isArrayBuffer(t) || L.isTypedArray(t) ? a && "function" == typeof Blob ? new Blob([t]) : Y.from(t) : t
            }
            function u(t, r, i) {
                let a = t;
                if (t && !i && "object" == typeof t) {
                    if (L.endsWith(r, "{}"))
                        r = n ? r : r.slice(0, -2),
                            t = JSON.stringify(t);
                    else {
                        var u;
                        if (L.isArray(t) && (u = t,
                            L.isArray(u) && !u.some(K)) || (L.isFileList(t) || L.endsWith(r, "[]")) && (a = L.toArray(t)))
                            return r = q(r),
                                a.forEach(function (t, n) {
                                    L.isUndefined(t) || null === t || e.append(!0 === s ? H([r], n, o) : null === s ? r : r + "[]", l(t))
                                }),
                                !1
                    }
                }
                return !!K(t) || (e.append(H(i, r, o), l(t)),
                    !1)
            }
            let c = []
                , h = Object.assign(J, {
                    defaultVisitor: u,
                    convertValue: l,
                    isVisitable: K
                });
            if (!L.isObject(t))
                throw TypeError("data must be an object");
            return !function t(r, n) {
                if (!L.isUndefined(r)) {
                    if (-1 !== c.indexOf(r))
                        throw Error("Circular reference detected in " + n.join("."));
                    c.push(r),
                        L.forEach(r, function (r, o) {
                            !0 === (!(L.isUndefined(r) || null === r) && i.call(e, r, L.isString(o) ? o.trim() : o, n, h)) && t(r, n ? n.concat(o) : [o])
                        }),
                        c.pop()
                }
            }(t),
                e
        };
        function W(t) {
            let e = {
                "!": "%21",
                "'": "%27",
                "(": "%28",
                ")": "%29",
                "~": "%7E",
                "%20": "+",
                "%00": "\x00"
            };
            return encodeURIComponent(t).replace(/[!'()~]|%20|%00/g, function (t) {
                return e[t]
            })
        }
        function Q(t, e) {
            this._pairs = [],
                t && V(t, this, e)
        }
        let $ = Q.prototype;
        function X(t) {
            return encodeURIComponent(t).replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%20/g, "+").replace(/%5B/gi, "[").replace(/%5D/gi, "]")
        }
        function Z(t, e, r) {
            let n;
            if (!e)
                return t;
            let i = r && r.encode || X
                , o = r && r.serialize;
            if (n = o ? o(e, r) : L.isURLSearchParams(e) ? e.toString() : new Q(e, r).toString(i)) {
                let e = t.indexOf("#");
                -1 !== e && (t = t.slice(0, e)),
                    t += (-1 === t.indexOf("?") ? "?" : "&") + n
            }
            return t
        }
        $.append = function (t, e) {
            this._pairs.push([t, e])
        }
            ,
            $.toString = function (t) {
                let e = t ? function (e) {
                    return t.call(this, e, W)
                }
                    : W;
                return this._pairs.map(function (t) {
                    return e(t[0]) + "=" + e(t[1])
                }, "").join("&")
            }
            ;
        class tt {
            constructor() {
                this.handlers = []
            }
            use(t, e, r) {
                return this.handlers.push({
                    fulfilled: t,
                    rejected: e,
                    synchronous: !!r && r.synchronous,
                    runWhen: r ? r.runWhen : null
                }),
                    this.handlers.length - 1
            }
            eject(t) {
                this.handlers[t] && (this.handlers[t] = null)
            }
            clear() {
                this.handlers && (this.handlers = [])
            }
            forEach(t) {
                L.forEach(this.handlers, function (e) {
                    null !== e && t(e)
                })
            }
        }
        var te = {
            silentJSONParsing: !0,
            forcedJSONParsing: !0,
            clarifyTimeoutError: !1
        }
            , tr = "undefined" != typeof URLSearchParams ? URLSearchParams : Q
            , tn = "undefined" != typeof FormData ? FormData : null
            , ti = "undefined" != typeof Blob ? Blob : null;
        let to = "undefined" != typeof window && "undefined" != typeof document
            , ts = (o = "undefined" != typeof navigator && navigator.product,
                to && 0 > ["ReactNative", "NativeScript", "NS"].indexOf(o))
            , ta = "undefined" != typeof WorkerGlobalScope && self instanceof WorkerGlobalScope && "function" == typeof self.importScripts;
        var tl = {
            ...s,
            isBrowser: !0,
            classes: {
                URLSearchParams: tr,
                FormData: tn,
                Blob: ti
            },
            protocols: ["http", "https", "file", "blob", "url", "data"]
        }
            , tu = function (t) {
                if (L.isFormData(t) && L.isFunction(t.entries)) {
                    let e = {};
                    return L.forEachEntry(t, (t, r) => {
                        !function t(e, r, n, i) {
                            let o = e[i++];
                            if ("__proto__" === o)
                                return !0;
                            let s = Number.isFinite(+o)
                                , a = i >= e.length;
                            return (o = !o && L.isArray(n) ? n.length : o,
                                a) ? L.hasOwnProp(n, o) ? n[o] = [n[o], r] : n[o] = r : (n[o] && L.isObject(n[o]) || (n[o] = []),
                                    t(e, r, n[o], i) && L.isArray(n[o]) && (n[o] = function (t) {
                                        let e, r;
                                        let n = {}
                                            , i = Object.keys(t)
                                            , o = i.length;
                                        for (e = 0; e < o; e++)
                                            n[r = i[e]] = t[r];
                                        return n
                                    }(n[o]))),
                                !s
                        }(L.matchAll(/\w+|\[(\w*)]/g, t).map(t => "[]" === t[0] ? "" : t[1] || t[0]), r, e, 0)
                    }
                    ),
                        e
                }
                return null
            };
        let tc = {
            transitional: te,
            adapter: ["xhr", "http"],
            transformRequest: [function (t, e) {
                let r;
                let n = e.getContentType() || ""
                    , i = n.indexOf("application/json") > -1
                    , o = L.isObject(t);
                if (o && L.isHTMLForm(t) && (t = new FormData(t)),
                    L.isFormData(t))
                    return i ? JSON.stringify(tu(t)) : t;
                if (L.isArrayBuffer(t) || L.isBuffer(t) || L.isStream(t) || L.isFile(t) || L.isBlob(t))
                    return t;
                if (L.isArrayBufferView(t))
                    return t.buffer;
                if (L.isURLSearchParams(t))
                    return e.setContentType("application/x-www-form-urlencoded;charset=utf-8", !1),
                        t.toString();
                if (o) {
                    if (n.indexOf("application/x-www-form-urlencoded") > -1) {
                        var s, a;
                        return (s = t,
                            a = this.formSerializer,
                            V(s, new tl.classes.URLSearchParams, Object.assign({
                                visitor: function (t, e, r, n) {
                                    return tl.isNode && L.isBuffer(t) ? (this.append(e, t.toString("base64")),
                                        !1) : n.defaultVisitor.apply(this, arguments)
                                }
                            }, a))).toString()
                    }
                    if ((r = L.isFileList(t)) || n.indexOf("multipart/form-data") > -1) {
                        let e = this.env && this.env.FormData;
                        return V(r ? {
                            "files[]": t
                        } : t, e && new e, this.formSerializer)
                    }
                }
                return o || i ? (e.setContentType("application/json", !1),
                    function (t, e, r) {
                        if (L.isString(t))
                            try {
                                return (0,
                                    JSON.parse)(t),
                                    L.trim(t)
                            } catch (t) {
                                if ("SyntaxError" !== t.name)
                                    throw t
                            }
                        return (0,
                            JSON.stringify)(t)
                    }(t)) : t
            }
            ],
            transformResponse: [function (t) {
                let e = this.transitional || tc.transitional
                    , r = e && e.forcedJSONParsing
                    , n = "json" === this.responseType;
                if (t && L.isString(t) && (r && !this.responseType || n)) {
                    let r = e && e.silentJSONParsing;
                    try {
                        return JSON.parse(t)
                    } catch (t) {
                        if (!r && n) {
                            if ("SyntaxError" === t.name)
                                throw z.from(t, z.ERR_BAD_RESPONSE, this, null, this.response);
                            throw t
                        }
                    }
                }
                return t
            }
            ],
            timeout: 0,
            xsrfCookieName: "XSRF-TOKEN",
            xsrfHeaderName: "X-XSRF-TOKEN",
            maxContentLength: -1,
            maxBodyLength: -1,
            env: {
                FormData: tl.classes.FormData,
                Blob: tl.classes.Blob
            },
            validateStatus: function (t) {
                return t >= 200 && t < 300
            },
            headers: {
                common: {
                    Accept: "application/json, text/plain, */*",
                    "Content-Type": void 0
                }
            }
        };
        L.forEach(["delete", "get", "head", "post", "put", "patch"], t => {
            tc.headers[t] = {}
        }
        );
        let th = L.toObjectSet(["age", "authorization", "content-length", "content-type", "etag", "expires", "from", "host", "if-modified-since", "if-unmodified-since", "last-modified", "location", "max-forwards", "proxy-authorization", "referer", "retry-after", "user-agent"]);
        var tf = t => {
            let e, r, n;
            let i = {};
            return t && t.split("\n").forEach(function (t) {
                n = t.indexOf(":"),
                    e = t.substring(0, n).trim().toLowerCase(),
                    r = t.substring(n + 1).trim(),
                    !e || i[e] && th[e] || ("set-cookie" === e ? i[e] ? i[e].push(r) : i[e] = [r] : i[e] = i[e] ? i[e] + ", " + r : r)
            }),
                i
        }
            ;
        let td = Symbol("internals");
        function tp(t) {
            return t && String(t).trim().toLowerCase()
        }
        function tm(t) {
            return !1 === t || null == t ? t : L.isArray(t) ? t.map(tm) : String(t)
        }
        let tg = t => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(t.trim());
        function ty(t, e, r, n, i) {
            if (L.isFunction(n))
                return n.call(this, e, r);
            if (i && (e = r),
                L.isString(e)) {
                if (L.isString(n))
                    return -1 !== e.indexOf(n);
                if (L.isRegExp(n))
                    return n.test(e)
            }
        }
        class tv {
            constructor(t) {
                t && this.set(t)
            }
            set(t, e, r) {
                let n = this;
                function i(t, e, r) {
                    let i = tp(e);
                    if (!i)
                        throw Error("header name must be a non-empty string");
                    let o = L.findKey(n, i);
                    o && void 0 !== n[o] && !0 !== r && (void 0 !== r || !1 === n[o]) || (n[o || e] = tm(t))
                }
                let o = (t, e) => L.forEach(t, (t, r) => i(t, r, e));
                return L.isPlainObject(t) || t instanceof this.constructor ? o(t, e) : L.isString(t) && (t = t.trim()) && !tg(t) ? o(tf(t), e) : null != t && i(e, t, r),
                    this
            }
            get(t, e) {
                if (t = tp(t)) {
                    let r = L.findKey(this, t);
                    if (r) {
                        let t = this[r];
                        if (!e)
                            return t;
                        if (!0 === e)
                            return function (t) {
                                let e;
                                let r = Object.create(null)
                                    , n = /([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g;
                                for (; e = n.exec(t);)
                                    r[e[1]] = e[2];
                                return r
                            }(t);
                        if (L.isFunction(e))
                            return e.call(this, t, r);
                        if (L.isRegExp(e))
                            return e.exec(t);
                        throw TypeError("parser must be boolean|regexp|function")
                    }
                }
            }
            has(t, e) {
                if (t = tp(t)) {
                    let r = L.findKey(this, t);
                    return !!(r && void 0 !== this[r] && (!e || ty(this, this[r], r, e)))
                }
                return !1
            }
            delete(t, e) {
                let r = this
                    , n = !1;
                function i(t) {
                    if (t = tp(t)) {
                        let i = L.findKey(r, t);
                        i && (!e || ty(r, r[i], i, e)) && (delete r[i],
                            n = !0)
                    }
                }
                return L.isArray(t) ? t.forEach(i) : i(t),
                    n
            }
            clear(t) {
                let e = Object.keys(this)
                    , r = e.length
                    , n = !1;
                for (; r--;) {
                    let i = e[r];
                    (!t || ty(this, this[i], i, t, !0)) && (delete this[i],
                        n = !0)
                }
                return n
            }
            normalize(t) {
                let e = this
                    , r = {};
                return L.forEach(this, (n, i) => {
                    let o = L.findKey(r, i);
                    if (o) {
                        e[o] = tm(n),
                            delete e[i];
                        return
                    }
                    let s = t ? i.trim().toLowerCase().replace(/([a-z\d])(\w*)/g, (t, e, r) => e.toUpperCase() + r) : String(i).trim();
                    s !== i && delete e[i],
                        e[s] = tm(n),
                        r[s] = !0
                }
                ),
                    this
            }
            concat(...t) {
                return this.constructor.concat(this, ...t)
            }
            toJSON(t) {
                let e = Object.create(null);
                return L.forEach(this, (r, n) => {
                    null != r && !1 !== r && (e[n] = t && L.isArray(r) ? r.join(", ") : r)
                }
                ),
                    e
            }
            [Symbol.iterator]() {
                return Object.entries(this.toJSON())[Symbol.iterator]()
            }
            toString() {
                return Object.entries(this.toJSON()).map(([t, e]) => t + ": " + e).join("\n")
            }
            get [Symbol.toStringTag]() {
                return "AxiosHeaders"
            }
            static from(t) {
                return t instanceof this ? t : new this(t)
            }
            static concat(t, ...e) {
                let r = new this(t);
                return e.forEach(t => r.set(t)),
                    r
            }
            static accessor(t) {
                let e = (this[td] = this[td] = {
                    accessors: {}
                }).accessors
                    , r = this.prototype;
                function n(t) {
                    let n = tp(t);
                    e[n] || (!function (t, e) {
                        let r = L.toCamelCase(" " + e);
                        ["get", "set", "has"].forEach(n => {
                            Object.defineProperty(t, n + r, {
                                value: function (t, r, i) {
                                    return this[n].call(this, e, t, r, i)
                                },
                                configurable: !0
                            })
                        }
                        )
                    }(r, t),
                        e[n] = !0)
                }
                return L.isArray(t) ? t.forEach(n) : n(t),
                    this
            }
        }
        function tb(t, e) {
            let r = this || tc
                , n = e || r
                , i = tv.from(n.headers)
                , o = n.data;
            return L.forEach(t, function (t) {
                o = t.call(r, o, i.normalize(), e ? e.status : void 0)
            }),
                i.normalize(),
                o
        }
        function tw(t) {
            return !!(t && t.__CANCEL__)
        }
        function tE(t, e, r) {
            z.call(this, null == t ? "canceled" : t, z.ERR_CANCELED, e, r),
                this.name = "CanceledError"
        }
        tv.accessor(["Content-Type", "Content-Length", "Accept", "Accept-Encoding", "User-Agent", "Authorization"]),
            L.reduceDescriptors(tv.prototype, ({ value: t }, e) => {
                let r = e[0].toUpperCase() + e.slice(1);
                return {
                    get: () => t,
                    set(t) {
                        this[r] = t
                    }
                }
            }
            ),
            L.freezeMethods(tv),
            L.inherits(tE, z, {
                __CANCEL__: !0
            });
        var tA = tl.hasStandardBrowserEnv ? {
            write(t, e, r, n, i, o) {
                let s = [t + "=" + encodeURIComponent(e)];
                L.isNumber(r) && s.push("expires=" + new Date(r).toGMTString()),
                    L.isString(n) && s.push("path=" + n),
                    L.isString(i) && s.push("domain=" + i),
                    !0 === o && s.push("secure"),
                    document.cookie = s.join("; ")
            },
            read(t) {
                let e = document.cookie.match(RegExp("(^|;\\s*)(" + t + ")=([^;]*)"));
                return e ? decodeURIComponent(e[3]) : null
            },
            remove(t) {
                this.write(t, "", Date.now() - 864e5)
            }
        } : {
            write() { },
            read: () => null,
            remove() { }
        };
        function t_(t, e) {
            return t && !/^([a-z][a-z\d+\-.]*:)?\/\//i.test(e) ? e ? t.replace(/\/?\/$/, "") + "/" + e.replace(/^\/+/, "") : t : e
        }
        var tS = tl.hasStandardBrowserEnv ? function () {
            let t;
            let e = /(msie|trident)/i.test(navigator.userAgent)
                , r = document.createElement("a");
            function n(t) {
                let n = t;
                return e && (r.setAttribute("href", n),
                    n = r.href),
                    r.setAttribute("href", n),
                {
                    href: r.href,
                    protocol: r.protocol ? r.protocol.replace(/:$/, "") : "",
                    host: r.host,
                    search: r.search ? r.search.replace(/^\?/, "") : "",
                    hash: r.hash ? r.hash.replace(/^#/, "") : "",
                    hostname: r.hostname,
                    port: r.port,
                    pathname: "/" === r.pathname.charAt(0) ? r.pathname : "/" + r.pathname
                }
            }
            return t = n(window.location.href),
                function (e) {
                    let r = L.isString(e) ? n(e) : e;
                    return r.protocol === t.protocol && r.host === t.host
                }
        }() : function () {
            return !0
        }
            , tk = function (t, e) {
                let r;
                let n = Array(t = t || 10)
                    , i = Array(t)
                    , o = 0
                    , s = 0;
                return e = void 0 !== e ? e : 1e3,
                    function (a) {
                        let l = Date.now()
                            , u = i[s];
                        r || (r = l),
                            n[o] = a,
                            i[o] = l;
                        let c = s
                            , h = 0;
                        for (; c !== o;)
                            h += n[c++],
                                c %= t;
                        if ((o = (o + 1) % t) === s && (s = (s + 1) % t),
                            l - r < e)
                            return;
                        let f = u && l - u;
                        return f ? Math.round(1e3 * h / f) : void 0
                    }
            };
        function tP(t, e) {
            let r = 0
                , n = tk(50, 250);
            return i => {
                let o = i.loaded
                    , s = i.lengthComputable ? i.total : void 0
                    , a = o - r
                    , l = n(a);
                r = o;
                let u = {
                    loaded: o,
                    total: s,
                    progress: s ? o / s : void 0,
                    bytes: a,
                    rate: l || void 0,
                    estimated: l && s && o <= s ? (s - o) / l : void 0,
                    event: i
                };
                u[e ? "download" : "upload"] = !0,
                    t(u)
            }
        }
        let tN = {
            http: null,
            xhr: "undefined" != typeof XMLHttpRequest && function (t) {
                return new Promise(function (e, r) {
                    let n, i, o = t.data, s = tv.from(t.headers).normalize(), { responseType: a, withXSRFToken: l } = t;
                    function u() {
                        t.cancelToken && t.cancelToken.unsubscribe(n),
                            t.signal && t.signal.removeEventListener("abort", n)
                    }
                    if (L.isFormData(o)) {
                        if (tl.hasStandardBrowserEnv || tl.hasStandardBrowserWebWorkerEnv)
                            s.setContentType(!1);
                        else if (!1 !== (i = s.getContentType())) {
                            let [t, ...e] = i ? i.split(";").map(t => t.trim()).filter(Boolean) : [];
                            s.setContentType([t || "multipart/form-data", ...e].join("; "))
                        }
                    }
                    let c = new XMLHttpRequest;
                    if (t.auth) {
                        let e = t.auth.username || ""
                            , r = t.auth.password ? unescape(encodeURIComponent(t.auth.password)) : "";
                        s.set("Authorization", "Basic " + btoa(e + ":" + r))
                    }
                    let h = t_(t.baseURL, t.url);
                    function f() {
                        if (!c)
                            return;
                        let n = tv.from("getAllResponseHeaders" in c && c.getAllResponseHeaders());
                        !function (t, e, r) {
                            let n = r.config.validateStatus;
                            !r.status || !n || n(r.status) ? t(r) : e(new z("Request failed with status code " + r.status, [z.ERR_BAD_REQUEST, z.ERR_BAD_RESPONSE][Math.floor(r.status / 100) - 4], r.config, r.request, r))
                        }(function (t) {
                            e(t),
                                u()
                        }, function (t) {
                            r(t),
                                u()
                        }, {
                            data: a && "text" !== a && "json" !== a ? c.response : c.responseText,
                            status: c.status,
                            statusText: c.statusText,
                            headers: n,
                            config: t,
                            request: c
                        }),
                            c = null
                    }
                    if (c.open(t.method.toUpperCase(), Z(h, t.params, t.paramsSerializer), !0),
                        c.timeout = t.timeout,
                        "onloadend" in c ? c.onloadend = f : c.onreadystatechange = function () {
                            c && 4 === c.readyState && (0 !== c.status || c.responseURL && 0 === c.responseURL.indexOf("file:")) && setTimeout(f)
                        }
                        ,
                        c.onabort = function () {
                            c && (r(new z("Request aborted", z.ECONNABORTED, t, c)),
                                c = null)
                        }
                        ,
                        c.onerror = function () {
                            r(new z("Network Error", z.ERR_NETWORK, t, c)),
                                c = null
                        }
                        ,
                        c.ontimeout = function () {
                            let e = t.timeout ? "timeout of " + t.timeout + "ms exceeded" : "timeout exceeded"
                                , n = t.transitional || te;
                            t.timeoutErrorMessage && (e = t.timeoutErrorMessage),
                                r(new z(e, n.clarifyTimeoutError ? z.ETIMEDOUT : z.ECONNABORTED, t, c)),
                                c = null
                        }
                        ,
                        tl.hasStandardBrowserEnv && (l && L.isFunction(l) && (l = l(t)),
                            l || !1 !== l && tS(h))) {
                        let e = t.xsrfHeaderName && t.xsrfCookieName && tA.read(t.xsrfCookieName);
                        e && s.set(t.xsrfHeaderName, e)
                    }
                    void 0 === o && s.setContentType(null),
                        "setRequestHeader" in c && L.forEach(s.toJSON(), function (t, e) {
                            c.setRequestHeader(e, t)
                        }),
                        L.isUndefined(t.withCredentials) || (c.withCredentials = !!t.withCredentials),
                        a && "json" !== a && (c.responseType = t.responseType),
                        "function" == typeof t.onDownloadProgress && c.addEventListener("progress", tP(t.onDownloadProgress, !0)),
                        "function" == typeof t.onUploadProgress && c.upload && c.upload.addEventListener("progress", tP(t.onUploadProgress)),
                        (t.cancelToken || t.signal) && (n = e => {
                            c && (r(!e || e.type ? new tE(null, t, c) : e),
                                c.abort(),
                                c = null)
                        }
                            ,
                            t.cancelToken && t.cancelToken.subscribe(n),
                            t.signal && (t.signal.aborted ? n() : t.signal.addEventListener("abort", n)));
                    let d = function (t) {
                        let e = /^([-+\w]{1,25})(:?\/\/|:)/.exec(t);
                        return e && e[1] || ""
                    }(h);
                    if (d && -1 === tl.protocols.indexOf(d)) {
                        r(new z("Unsupported protocol " + d + ":", z.ERR_BAD_REQUEST, t));
                        return
                    }
                    c.send(o || null)
                }
                )
            }
        };
        L.forEach(tN, (t, e) => {
            if (t) {
                try {
                    Object.defineProperty(t, "name", {
                        value: e
                    })
                } catch (t) { }
                Object.defineProperty(t, "adapterName", {
                    value: e
                })
            }
        }
        );
        let tC = t => `- ${t}`
            , tT = t => L.isFunction(t) || null === t || !1 === t;
        var tx = {
            getAdapter: t => {
                let e, r;
                let { length: n } = t = L.isArray(t) ? t : [t]
                    , i = {};
                for (let o = 0; o < n; o++) {
                    let n;
                    if (r = e = t[o],
                        !tT(e) && void 0 === (r = tN[(n = String(e)).toLowerCase()]))
                        throw new z(`Unknown adapter '${n}'`);
                    if (r)
                        break;
                    i[n || "#" + o] = r
                }
                if (!r) {
                    let t = Object.entries(i).map(([t, e]) => `adapter ${t} ` + (!1 === e ? "is not supported by the environment" : "is not available in the build"));
                    throw new z("There is no suitable adapter to dispatch the request " + (n ? t.length > 1 ? "since :\n" + t.map(tC).join("\n") : " " + tC(t[0]) : "as no adapter specified"), "ERR_NOT_SUPPORT")
                }
                return r
            }
            ,
            adapters: tN
        };
        function tR(t) {
            if (t.cancelToken && t.cancelToken.throwIfRequested(),
                t.signal && t.signal.aborted)
                throw new tE(null, t)
        }
        function tI(t) {
            return tR(t),
                t.headers = tv.from(t.headers),
                t.data = tb.call(t, t.transformRequest),
                -1 !== ["post", "put", "patch"].indexOf(t.method) && t.headers.setContentType("application/x-www-form-urlencoded", !1),
                tx.getAdapter(t.adapter || tc.adapter)(t).then(function (e) {
                    return tR(t),
                        e.data = tb.call(t, t.transformResponse, e),
                        e.headers = tv.from(e.headers),
                        e
                }, function (e) {
                    return !tw(e) && (tR(t),
                        e && e.response && (e.response.data = tb.call(t, t.transformResponse, e.response),
                            e.response.headers = tv.from(e.response.headers))),
                        Promise.reject(e)
                })
        }
        let tO = t => t instanceof tv ? t.toJSON() : t;
        function tM(t, e) {
            e = e || {};
            let r = {};
            function n(t, e, r) {
                return L.isPlainObject(t) && L.isPlainObject(e) ? L.merge.call({
                    caseless: r
                }, t, e) : L.isPlainObject(e) ? L.merge({}, e) : L.isArray(e) ? e.slice() : e
            }
            function i(t, e, r) {
                return L.isUndefined(e) ? L.isUndefined(t) ? void 0 : n(void 0, t, r) : n(t, e, r)
            }
            function o(t, e) {
                if (!L.isUndefined(e))
                    return n(void 0, e)
            }
            function s(t, e) {
                return L.isUndefined(e) ? L.isUndefined(t) ? void 0 : n(void 0, t) : n(void 0, e)
            }
            function a(r, i, o) {
                return o in e ? n(r, i) : o in t ? n(void 0, r) : void 0
            }
            let l = {
                url: o,
                method: o,
                data: o,
                baseURL: s,
                transformRequest: s,
                transformResponse: s,
                paramsSerializer: s,
                timeout: s,
                timeoutMessage: s,
                withCredentials: s,
                withXSRFToken: s,
                adapter: s,
                responseType: s,
                xsrfCookieName: s,
                xsrfHeaderName: s,
                onUploadProgress: s,
                onDownloadProgress: s,
                decompress: s,
                maxContentLength: s,
                maxBodyLength: s,
                beforeRedirect: s,
                transport: s,
                httpAgent: s,
                httpsAgent: s,
                cancelToken: s,
                socketPath: s,
                responseEncoding: s,
                validateStatus: a,
                headers: (t, e) => i(tO(t), tO(e), !0)
            };
            return L.forEach(Object.keys(Object.assign({}, t, e)), function (n) {
                let o = l[n] || i
                    , s = o(t[n], e[n], n);
                L.isUndefined(s) && o !== a || (r[n] = s)
            }),
                r
        }
        let tB = "1.6.7"
            , tD = {};
        ["object", "boolean", "number", "function", "string", "symbol"].forEach((t, e) => {
            tD[t] = function (r) {
                return typeof r === t || "a" + (e < 1 ? "n " : " ") + t
            }
        }
        );
        let tF = {};
        tD.transitional = function (t, e, r) {
            function n(t, e) {
                return "[Axios v" + tB + "] Transitional option '" + t + "'" + e + (r ? ". " + r : "")
            }
            return (r, i, o) => {
                if (!1 === t)
                    throw new z(n(i, " has been removed" + (e ? " in " + e : "")), z.ERR_DEPRECATED);
                return e && !tF[i] && (tF[i] = !0,
                    console.warn(n(i, " has been deprecated since v" + e + " and will be removed in the near future"))),
                    !t || t(r, i, o)
            }
        }
            ;
        var tU = {
            assertOptions: function (t, e, r) {
                if ("object" != typeof t)
                    throw new z("options must be an object", z.ERR_BAD_OPTION_VALUE);
                let n = Object.keys(t)
                    , i = n.length;
                for (; i-- > 0;) {
                    let o = n[i]
                        , s = e[o];
                    if (s) {
                        let e = t[o]
                            , r = void 0 === e || s(e, o, t);
                        if (!0 !== r)
                            throw new z("option " + o + " must be " + r, z.ERR_BAD_OPTION_VALUE);
                        continue
                    }
                    if (!0 !== r)
                        throw new z("Unknown option " + o, z.ERR_BAD_OPTION)
                }
            },
            validators: tD
        };
        let tL = tU.validators;
        class tz {
            constructor(t) {
                this.defaults = t,
                    this.interceptors = {
                        request: new tt,
                        response: new tt
                    }
            }
            async request(t, e) {
                try {
                    return await this._request(t, e)
                } catch (t) {
                    if (t instanceof Error) {
                        let e;
                        Error.captureStackTrace ? Error.captureStackTrace(e = {}) : e = Error();
                        let r = e.stack ? e.stack.replace(/^.+\n/, "") : "";
                        t.stack ? r && !String(t.stack).endsWith(r.replace(/^.+\n.+\n/, "")) && (t.stack += "\n" + r) : t.stack = r
                    }
                    throw t
                }
            }
            _request(t, e) {
                let r, n;
                "string" == typeof t ? (e = e || {}).url = t : e = t || {};
                let { transitional: i, paramsSerializer: o, headers: s } = e = tM(this.defaults, e);
                void 0 !== i && tU.assertOptions(i, {
                    silentJSONParsing: tL.transitional(tL.boolean),
                    forcedJSONParsing: tL.transitional(tL.boolean),
                    clarifyTimeoutError: tL.transitional(tL.boolean)
                }, !1),
                    null != o && (L.isFunction(o) ? e.paramsSerializer = {
                        serialize: o
                    } : tU.assertOptions(o, {
                        encode: tL.function,
                        serialize: tL.function
                    }, !0)),
                    e.method = (e.method || this.defaults.method || "get").toLowerCase();
                let a = s && L.merge(s.common, s[e.method]);
                s && L.forEach(["delete", "get", "head", "post", "put", "patch", "common"], t => {
                    delete s[t]
                }
                ),
                    e.headers = tv.concat(a, s);
                let l = []
                    , u = !0;
                this.interceptors.request.forEach(function (t) {
                    ("function" != typeof t.runWhen || !1 !== t.runWhen(e)) && (u = u && t.synchronous,
                        l.unshift(t.fulfilled, t.rejected))
                });
                let c = [];
                this.interceptors.response.forEach(function (t) {
                    c.push(t.fulfilled, t.rejected)
                });
                let h = 0;
                if (!u) {
                    let t = [tI.bind(this), void 0];
                    for (t.unshift.apply(t, l),
                        t.push.apply(t, c),
                        n = t.length,
                        r = Promise.resolve(e); h < n;)
                        r = r.then(t[h++], t[h++]);
                    return r
                }
                n = l.length;
                let f = e;
                for (h = 0; h < n;) {
                    let t = l[h++]
                        , e = l[h++];
                    try {
                        f = t(f)
                    } catch (t) {
                        e.call(this, t);
                        break
                    }
                }
                try {
                    r = tI.call(this, f)
                } catch (t) {
                    return Promise.reject(t)
                }
                for (h = 0,
                    n = c.length; h < n;)
                    r = r.then(c[h++], c[h++]);
                return r
            }
            getUri(t) {
                return Z(t_((t = tM(this.defaults, t)).baseURL, t.url), t.params, t.paramsSerializer)
            }
        }
        L.forEach(["delete", "get", "head", "options"], function (t) {
            tz.prototype[t] = function (e, r) {
                return this.request(tM(r || {}, {
                    method: t,
                    url: e,
                    data: (r || {}).data
                }))
            }
        }),
            L.forEach(["post", "put", "patch"], function (t) {
                function e(e) {
                    return function (r, n, i) {
                        return this.request(tM(i || {}, {
                            method: t,
                            headers: e ? {
                                "Content-Type": "multipart/form-data"
                            } : {},
                            url: r,
                            data: n
                        }))
                    }
                }
                tz.prototype[t] = e(),
                    tz.prototype[t + "Form"] = e(!0)
            });
        class tG {
            constructor(t) {
                let e;
                if ("function" != typeof t)
                    throw TypeError("executor must be a function.");
                this.promise = new Promise(function (t) {
                    e = t
                }
                );
                let r = this;
                this.promise.then(t => {
                    if (!r._listeners)
                        return;
                    let e = r._listeners.length;
                    for (; e-- > 0;)
                        r._listeners[e](t);
                    r._listeners = null
                }
                ),
                    this.promise.then = t => {
                        let e;
                        let n = new Promise(t => {
                            r.subscribe(t),
                                e = t
                        }
                        ).then(t);
                        return n.cancel = function () {
                            r.unsubscribe(e)
                        }
                            ,
                            n
                    }
                    ,
                    t(function (t, n, i) {
                        r.reason || (r.reason = new tE(t, n, i),
                            e(r.reason))
                    })
            }
            throwIfRequested() {
                if (this.reason)
                    throw this.reason
            }
            subscribe(t) {
                if (this.reason) {
                    t(this.reason);
                    return
                }
                this._listeners ? this._listeners.push(t) : this._listeners = [t]
            }
            unsubscribe(t) {
                if (!this._listeners)
                    return;
                let e = this._listeners.indexOf(t);
                -1 !== e && this._listeners.splice(e, 1)
            }
            static source() {
                let t;
                return {
                    token: new tG(function (e) {
                        t = e
                    }
                    ),
                    cancel: t
                }
            }
        }
        let tj = {
            Continue: 100,
            SwitchingProtocols: 101,
            Processing: 102,
            EarlyHints: 103,
            Ok: 200,
            Created: 201,
            Accepted: 202,
            NonAuthoritativeInformation: 203,
            NoContent: 204,
            ResetContent: 205,
            PartialContent: 206,
            MultiStatus: 207,
            AlreadyReported: 208,
            ImUsed: 226,
            MultipleChoices: 300,
            MovedPermanently: 301,
            Found: 302,
            SeeOther: 303,
            NotModified: 304,
            UseProxy: 305,
            Unused: 306,
            TemporaryRedirect: 307,
            PermanentRedirect: 308,
            BadRequest: 400,
            Unauthorized: 401,
            PaymentRequired: 402,
            Forbidden: 403,
            NotFound: 404,
            MethodNotAllowed: 405,
            NotAcceptable: 406,
            ProxyAuthenticationRequired: 407,
            RequestTimeout: 408,
            Conflict: 409,
            Gone: 410,
            LengthRequired: 411,
            PreconditionFailed: 412,
            PayloadTooLarge: 413,
            UriTooLong: 414,
            UnsupportedMediaType: 415,
            RangeNotSatisfiable: 416,
            ExpectationFailed: 417,
            ImATeapot: 418,
            MisdirectedRequest: 421,
            UnprocessableEntity: 422,
            Locked: 423,
            FailedDependency: 424,
            TooEarly: 425,
            UpgradeRequired: 426,
            PreconditionRequired: 428,
            TooManyRequests: 429,
            RequestHeaderFieldsTooLarge: 431,
            UnavailableForLegalReasons: 451,
            InternalServerError: 500,
            NotImplemented: 501,
            BadGateway: 502,
            ServiceUnavailable: 503,
            GatewayTimeout: 504,
            HttpVersionNotSupported: 505,
            VariantAlsoNegotiates: 506,
            InsufficientStorage: 507,
            LoopDetected: 508,
            NotExtended: 510,
            NetworkAuthenticationRequired: 511
        };
        Object.entries(tj).forEach(([t, e]) => {
            tj[e] = t
        }
        );
        let tY = function t(e) {
            let r = new tz(e)
                , n = a(tz.prototype.request, r);
            return L.extend(n, tz.prototype, r, {
                allOwnKeys: !0
            }),
                L.extend(n, r, null, {
                    allOwnKeys: !0
                }),
                n.create = function (r) {
                    return t(tM(e, r))
                }
                ,
                n
        }(tc);
        tY.Axios = tz,
            tY.CanceledError = tE,
            tY.CancelToken = tG,
            tY.isCancel = tw,
            tY.VERSION = tB,
            tY.toFormData = V,
            tY.AxiosError = z,
            tY.Cancel = tY.CanceledError,
            tY.all = function (t) {
                return Promise.all(t)
            }
            ,
            tY.spread = function (t) {
                return function (e) {
                    return t.apply(null, e)
                }
            }
            ,
            tY.isAxiosError = function (t) {
                return L.isObject(t) && !0 === t.isAxiosError
            }
            ,
            tY.mergeConfig = tM,
            tY.AxiosHeaders = tv,
            tY.formToJSON = t => tu(L.isHTMLForm(t) ? new FormData(t) : t),
            tY.getAdapter = tx.getAdapter,
            tY.HttpStatusCode = tj,
            tY.default = tY;
        var tK = tY
    },
    27948: function (t, e, r) {
        "use strict";
        r.r(e),
            r.d(e, {
                Bounce: function () {
                    return B
                },
                Flip: function () {
                    return U
                },
                Icons: function () {
                    return I
                },
                Slide: function () {
                    return D
                },
                ToastContainer: function () {
                    return z
                },
                Zoom: function () {
                    return F
                },
                collapseToast: function () {
                    return c
                },
                cssTransition: function () {
                    return h
                },
                toast: function () {
                    return T
                },
                useToast: function () {
                    return A
                },
                useToastContainer: function () {
                    return E
                }
            });
        var n = r(2265)
            , i = function () {
                for (var t, e, r = 0, n = "", i = arguments.length; r < i; r++)
                    (t = arguments[r]) && (e = function t(e) {
                        var r, n, i = "";
                        if ("string" == typeof e || "number" == typeof e)
                            i += e;
                        else if ("object" == typeof e) {
                            if (Array.isArray(e)) {
                                var o = e.length;
                                for (r = 0; r < o; r++)
                                    e[r] && (n = t(e[r])) && (i && (i += " "),
                                        i += n)
                            } else
                                for (n in e)
                                    e[n] && (i && (i += " "),
                                        i += n)
                        }
                        return i
                    }(t)) && (n && (n += " "),
                        n += e);
                return n
            };
        let o = t => "number" == typeof t && !isNaN(t)
            , s = t => "string" == typeof t
            , a = t => "function" == typeof t
            , l = t => s(t) || a(t) ? t : null
            , u = t => (0,
                n.isValidElement)(t) || s(t) || a(t) || o(t);
        function c(t, e, r) {
            void 0 === r && (r = 300);
            let { scrollHeight: n, style: i } = t;
            requestAnimationFrame(() => {
                i.minHeight = "initial",
                    i.height = n + "px",
                    i.transition = `all ${r}ms`,
                    requestAnimationFrame(() => {
                        i.height = "0",
                            i.padding = "0",
                            i.margin = "0",
                            setTimeout(e, r)
                    }
                    )
            }
            )
        }
        function h(t) {
            let { enter: e, exit: r, appendPosition: i = !1, collapse: o = !0, collapseDuration: s = 300 } = t;
            return function (t) {
                let { children: a, position: l, preventExitTransition: u, done: h, nodeRef: f, isIn: d, playToast: p } = t
                    , m = i ? `${e}--${l}` : e
                    , g = i ? `${r}--${l}` : r
                    , y = (0,
                        n.useRef)(0);
                return (0,
                    n.useLayoutEffect)(() => {
                        let t = f.current
                            , e = m.split(" ")
                            , r = n => {
                                n.target === f.current && (p(),
                                    t.removeEventListener("animationend", r),
                                    t.removeEventListener("animationcancel", r),
                                    0 === y.current && "animationcancel" !== n.type && t.classList.remove(...e))
                            }
                            ;
                        t.classList.add(...e),
                            t.addEventListener("animationend", r),
                            t.addEventListener("animationcancel", r)
                    }
                        , []),
                    (0,
                        n.useEffect)(() => {
                            let t = f.current
                                , e = () => {
                                    t.removeEventListener("animationend", e),
                                        o ? c(t, h, s) : h()
                                }
                                ;
                            d || (u ? e() : (y.current = 1,
                                t.className += ` ${g}`,
                                t.addEventListener("animationend", e)))
                        }
                            , [d]),
                    n.createElement(n.Fragment, null, a)
            }
        }
        function f(t, e) {
            return null != t ? {
                content: t.content,
                containerId: t.props.containerId,
                id: t.props.toastId,
                theme: t.props.theme,
                type: t.props.type,
                data: t.props.data || {},
                isLoading: t.props.isLoading,
                icon: t.props.icon,
                status: e
            } : {}
        }
        let d = new Map
            , p = []
            , m = new Set
            , g = t => m.forEach(e => e(t))
            , y = () => d.size > 0;
        function v(t, e) {
            var r;
            if (e)
                return !(null == (r = d.get(e)) || !r.isToastActive(t));
            let n = !1;
            return d.forEach(e => {
                e.isToastActive(t) && (n = !0)
            }
            ),
                n
        }
        function b(t, e) {
            u(t) && (y() || p.push({
                content: t,
                options: e
            }),
                d.forEach(r => {
                    r.buildToast(t, e)
                }
                ))
        }
        function w(t, e) {
            d.forEach(r => {
                null != e && null != e && e.containerId ? (null == e ? void 0 : e.containerId) === r.id && r.toggle(t, null == e ? void 0 : e.id) : r.toggle(t, null == e ? void 0 : e.id)
            }
            )
        }
        function E(t) {
            let { subscribe: e, getSnapshot: r, setProps: i } = (0,
                n.useRef)(function (t) {
                    let e = t.containerId || 1;
                    return {
                        subscribe(r) {
                            let i = function (t, e, r) {
                                let i = 1
                                    , c = 0
                                    , h = []
                                    , d = []
                                    , p = []
                                    , m = e
                                    , g = new Map
                                    , y = new Set
                                    , v = () => {
                                        p = Array.from(g.values()),
                                            y.forEach(t => t())
                                    }
                                    , b = t => {
                                        d = null == t ? [] : d.filter(e => e !== t),
                                            v()
                                    }
                                    , w = t => {
                                        let { toastId: e, onOpen: i, updateId: o, children: s } = t.props
                                            , l = null == o;
                                        t.staleId && g.delete(t.staleId),
                                            g.set(e, t),
                                            d = [...d, t.props.toastId].filter(e => e !== t.staleId),
                                            v(),
                                            r(f(t, l ? "added" : "updated")),
                                            l && a(i) && i((0,
                                                n.isValidElement)(s) && s.props)
                                    }
                                    ;
                                return {
                                    id: t,
                                    props: m,
                                    observe: t => (y.add(t),
                                        () => y.delete(t)),
                                    toggle: (t, e) => {
                                        g.forEach(r => {
                                            null != e && e !== r.props.toastId || a(r.toggle) && r.toggle(t)
                                        }
                                        )
                                    }
                                    ,
                                    removeToast: b,
                                    toasts: g,
                                    clearQueue: () => {
                                        c -= h.length,
                                            h = []
                                    }
                                    ,
                                    buildToast: (e, d) => {
                                        var p, y;
                                        if ((e => {
                                            let { containerId: r, toastId: n, updateId: i } = e
                                                , o = g.has(n) && null == i;
                                            return (r ? r !== t : 1 !== t) || o
                                        }
                                        )(d))
                                            return;
                                        let { toastId: E, updateId: A, data: _, staleId: S, delay: k } = d
                                            , P = () => {
                                                b(E)
                                            }
                                            , N = null == A;
                                        N && c++;
                                        let C = {
                                            ...m,
                                            style: m.toastStyle,
                                            key: i++,
                                            ...Object.fromEntries(Object.entries(d).filter(t => {
                                                let [e, r] = t;
                                                return null != r
                                            }
                                            )),
                                            toastId: E,
                                            updateId: A,
                                            data: _,
                                            closeToast: P,
                                            isIn: !1,
                                            className: l(d.className || m.toastClassName),
                                            bodyClassName: l(d.bodyClassName || m.bodyClassName),
                                            progressClassName: l(d.progressClassName || m.progressClassName),
                                            autoClose: !d.isLoading && (p = d.autoClose,
                                                y = m.autoClose,
                                                !1 === p || o(p) && p > 0 ? p : y),
                                            deleteToast() {
                                                let t = g.get(E)
                                                    , { onClose: e, children: i } = t.props;
                                                a(e) && e((0,
                                                    n.isValidElement)(i) && i.props),
                                                    r(f(t, "removed")),
                                                    g.delete(E),
                                                    --c < 0 && (c = 0),
                                                    h.length > 0 ? w(h.shift()) : v()
                                            }
                                        };
                                        C.closeButton = m.closeButton,
                                            !1 === d.closeButton || u(d.closeButton) ? C.closeButton = d.closeButton : !0 === d.closeButton && (C.closeButton = !u(m.closeButton) || m.closeButton);
                                        let T = e;
                                        (0,
                                            n.isValidElement)(e) && !s(e.type) ? T = (0,
                                                n.cloneElement)(e, {
                                                    closeToast: P,
                                                    toastProps: C,
                                                    data: _
                                                }) : a(e) && (T = e({
                                                    closeToast: P,
                                                    toastProps: C,
                                                    data: _
                                                }));
                                        let x = {
                                            content: T,
                                            props: C,
                                            staleId: S
                                        };
                                        m.limit && m.limit > 0 && c > m.limit && N ? h.push(x) : o(k) ? setTimeout(() => {
                                            w(x)
                                        }
                                            , k) : w(x)
                                    }
                                    ,
                                    setProps(t) {
                                        m = t
                                    },
                                    setToggle: (t, e) => {
                                        g.get(t).toggle = e
                                    }
                                    ,
                                    isToastActive: t => d.some(e => e === t),
                                    getSnapshot: () => m.newestOnTop ? p.reverse() : p
                                }
                            }(e, t, g);
                            d.set(e, i);
                            let c = i.observe(r);
                            return p.forEach(t => b(t.content, t.options)),
                                p = [],
                                () => {
                                    c(),
                                        d.delete(e)
                                }
                        },
                        setProps(t) {
                            var r;
                            null == (r = d.get(e)) || r.setProps(t)
                        },
                        getSnapshot() {
                            var t;
                            return null == (t = d.get(e)) ? void 0 : t.getSnapshot()
                        }
                    }
                }(t)).current;
            i(t);
            let c = (0,
                n.useSyncExternalStore)(e, r, r);
            return {
                getToastToRender: function (t) {
                    if (!c)
                        return [];
                    let e = new Map;
                    return c.forEach(t => {
                        let { position: r } = t.props;
                        e.has(r) || e.set(r, []),
                            e.get(r).push(t)
                    }
                    ),
                        Array.from(e, e => t(e[0], e[1]))
                },
                isToastActive: v,
                count: null == c ? void 0 : c.length
            }
        }
        function A(t) {
            var e, r;
            let [i, o] = (0,
                n.useState)(!1)
                , [s, a] = (0,
                    n.useState)(!1)
                , l = (0,
                    n.useRef)(null)
                , u = (0,
                    n.useRef)({
                        start: 0,
                        delta: 0,
                        removalDistance: 0,
                        canCloseOnClick: !0,
                        canDrag: !1,
                        didMove: !1
                    }).current
                , { autoClose: c, pauseOnHover: h, closeToast: f, onClick: p, closeOnClick: m } = t;
            function g() {
                o(!0)
            }
            function y() {
                o(!1)
            }
            function v(e) {
                let r = l.current;
                u.canDrag && r && (u.didMove = !0,
                    i && y(),
                    u.delta = "x" === t.draggableDirection ? e.clientX - u.start : e.clientY - u.start,
                    u.start !== e.clientX && (u.canCloseOnClick = !1),
                    r.style.transform = `translate3d(${"x" === t.draggableDirection ? `${u.delta}px, var(--y)` : `0, calc(${u.delta}px + var(--y))`},0)`,
                    r.style.opacity = "" + (1 - Math.abs(u.delta / u.removalDistance)))
            }
            function b() {
                document.removeEventListener("pointermove", v),
                    document.removeEventListener("pointerup", b);
                let e = l.current;
                if (u.canDrag && u.didMove && e) {
                    if (u.canDrag = !1,
                        Math.abs(u.delta) > u.removalDistance)
                        return a(!0),
                            t.closeToast(),
                            void t.collapseAll();
                    e.style.transition = "transform 0.2s, opacity 0.2s",
                        e.style.removeProperty("transform"),
                        e.style.removeProperty("opacity")
                }
            }
            null == (r = d.get((e = {
                id: t.toastId,
                containerId: t.containerId,
                fn: o
            }).containerId || 1)) || r.setToggle(e.id, e.fn),
                (0,
                    n.useEffect)(() => {
                        if (t.pauseOnFocusLoss)
                            return document.hasFocus() || y(),
                                window.addEventListener("focus", g),
                                window.addEventListener("blur", y),
                                () => {
                                    window.removeEventListener("focus", g),
                                        window.removeEventListener("blur", y)
                                }
                    }
                        , [t.pauseOnFocusLoss]);
            let w = {
                onPointerDown: function (e) {
                    if (!0 === t.draggable || t.draggable === e.pointerType) {
                        u.didMove = !1,
                            document.addEventListener("pointermove", v),
                            document.addEventListener("pointerup", b);
                        let r = l.current;
                        u.canCloseOnClick = !0,
                            u.canDrag = !0,
                            r.style.transition = "none",
                            "x" === t.draggableDirection ? (u.start = e.clientX,
                                u.removalDistance = r.offsetWidth * (t.draggablePercent / 100)) : (u.start = e.clientY,
                                    u.removalDistance = r.offsetHeight * (80 === t.draggablePercent ? 1.5 * t.draggablePercent : t.draggablePercent) / 100)
                    }
                },
                onPointerUp: function (e) {
                    let { top: r, bottom: n, left: i, right: o } = l.current.getBoundingClientRect();
                    "touchend" !== e.nativeEvent.type && t.pauseOnHover && e.clientX >= i && e.clientX <= o && e.clientY >= r && e.clientY <= n ? y() : g()
                }
            };
            return c && h && (w.onMouseEnter = y,
                t.stacked || (w.onMouseLeave = g)),
                m && (w.onClick = t => {
                    p && p(t),
                        u.canCloseOnClick && f()
                }
                ),
            {
                playToast: g,
                pauseToast: y,
                isRunning: i,
                preventExitTransition: s,
                toastRef: l,
                eventHandlers: w
            }
        }
        function _(t) {
            let { delay: e, isRunning: r, closeToast: o, type: s = "default", hide: l, className: u, style: c, controlledProgress: h, progress: f, rtl: d, isIn: p, theme: m } = t
                , g = l || h && 0 === f
                , y = {
                    ...c,
                    animationDuration: `${e}ms`,
                    animationPlayState: r ? "running" : "paused"
                };
            h && (y.transform = `scaleX(${f})`);
            let v = i("Toastify__progress-bar", h ? "Toastify__progress-bar--controlled" : "Toastify__progress-bar--animated", `Toastify__progress-bar-theme--${m}`, `Toastify__progress-bar--${s}`, {
                "Toastify__progress-bar--rtl": d
            })
                , b = a(u) ? u({
                    rtl: d,
                    type: s,
                    defaultClassName: v
                }) : i(v, u);
            return n.createElement("div", {
                className: "Toastify__progress-bar--wrp",
                "data-hidden": g
            }, n.createElement("div", {
                className: `Toastify__progress-bar--bg Toastify__progress-bar-theme--${m} Toastify__progress-bar--${s}`
            }), n.createElement("div", {
                role: "progressbar",
                "aria-hidden": g ? "true" : "false",
                "aria-label": "notification timer",
                className: b,
                style: y,
                [h && f >= 1 ? "onTransitionEnd" : "onAnimationEnd"]: h && f < 1 ? null : () => {
                    p && o()
                }
            }))
        }
        let S = 1
            , k = () => "" + S++;
        function P(t, e) {
            return b(t, e),
                e.toastId
        }
        function N(t, e) {
            return {
                ...e,
                type: e && e.type || t,
                toastId: e && (s(e.toastId) || o(e.toastId)) ? e.toastId : k()
            }
        }
        function C(t) {
            return (e, r) => P(e, N(t, r))
        }
        function T(t, e) {
            return P(t, N("default", e))
        }
        T.loading = (t, e) => P(t, N("default", {
            isLoading: !0,
            autoClose: !1,
            closeOnClick: !1,
            closeButton: !1,
            draggable: !1,
            ...e
        })),
            T.promise = function (t, e, r) {
                let n, { pending: i, error: o, success: l } = e;
                i && (n = s(i) ? T.loading(i, r) : T.loading(i.render, {
                    ...r,
                    ...i
                }));
                let u = {
                    isLoading: null,
                    autoClose: null,
                    closeOnClick: null,
                    closeButton: null,
                    draggable: null
                }
                    , c = (t, e, i) => {
                        if (null == e)
                            return void T.dismiss(n);
                        let o = {
                            type: t,
                            ...u,
                            ...r,
                            data: i
                        }
                            , a = s(e) ? {
                                render: e
                            } : e;
                        return n ? T.update(n, {
                            ...o,
                            ...a
                        }) : T(a.render, {
                            ...o,
                            ...a
                        }),
                            i
                    }
                    , h = a(t) ? t() : t;
                return h.then(t => c("success", l, t)).catch(t => c("error", o, t)),
                    h
            }
            ,
            T.success = C("success"),
            T.info = C("info"),
            T.error = C("error"),
            T.warning = C("warning"),
            T.warn = T.warning,
            T.dark = (t, e) => P(t, N("default", {
                theme: "dark",
                ...e
            })),
            T.dismiss = function (t) {
                var e, r;
                y() ? null == t || s(e = t) || o(e) ? d.forEach(e => {
                    e.removeToast(t)
                }
                ) : t && ("containerId" in t || "id" in t) && ((null == (r = d.get(t.containerId)) ? void 0 : r.removeToast(t.id)) || d.forEach(e => {
                    e.removeToast(t.id)
                }
                )) : p = p.filter(e => null != t && e.options.toastId !== t)
            }
            ,
            T.clearWaitingQueue = function (t) {
                void 0 === t && (t = {}),
                    d.forEach(e => {
                        !e.props.limit || t.containerId && e.id !== t.containerId || e.clearQueue()
                    }
                    )
            }
            ,
            T.isActive = v,
            T.update = function (t, e) {
                void 0 === e && (e = {});
                let r = ((t, e) => {
                    var r;
                    let { containerId: n } = e;
                    return null == (r = d.get(n || 1)) ? void 0 : r.toasts.get(t)
                }
                )(t, e);
                if (r) {
                    let { props: n, content: i } = r
                        , o = {
                            delay: 100,
                            ...n,
                            ...e,
                            toastId: e.toastId || t,
                            updateId: k()
                        };
                    o.toastId !== t && (o.staleId = t);
                    let s = o.render || i;
                    delete o.render,
                        P(s, o)
                }
            }
            ,
            T.done = t => {
                T.update(t, {
                    progress: 1
                })
            }
            ,
            T.onChange = function (t) {
                return m.add(t),
                    () => {
                        m.delete(t)
                    }
            }
            ,
            T.play = t => w(!0, t),
            T.pause = t => w(!1, t);
        let x = "undefined" != typeof window ? n.useLayoutEffect : n.useEffect
            , R = t => {
                let { theme: e, type: r, isLoading: i, ...o } = t;
                return n.createElement("svg", {
                    viewBox: "0 0 24 24",
                    width: "100%",
                    height: "100%",
                    fill: "colored" === e ? "currentColor" : `var(--toastify-icon-color-${r})`,
                    ...o
                })
            }
            , I = {
                info: function (t) {
                    return n.createElement(R, {
                        ...t
                    }, n.createElement("path", {
                        d: "M12 0a12 12 0 1012 12A12.013 12.013 0 0012 0zm.25 5a1.5 1.5 0 11-1.5 1.5 1.5 1.5 0 011.5-1.5zm2.25 13.5h-4a1 1 0 010-2h.75a.25.25 0 00.25-.25v-4.5a.25.25 0 00-.25-.25h-.75a1 1 0 010-2h1a2 2 0 012 2v4.75a.25.25 0 00.25.25h.75a1 1 0 110 2z"
                    }))
                },
                warning: function (t) {
                    return n.createElement(R, {
                        ...t
                    }, n.createElement("path", {
                        d: "M23.32 17.191L15.438 2.184C14.728.833 13.416 0 11.996 0c-1.42 0-2.733.833-3.443 2.184L.533 17.448a4.744 4.744 0 000 4.368C1.243 23.167 2.555 24 3.975 24h16.05C22.22 24 24 22.044 24 19.632c0-.904-.251-1.746-.68-2.44zm-9.622 1.46c0 1.033-.724 1.823-1.698 1.823s-1.698-.79-1.698-1.822v-.043c0-1.028.724-1.822 1.698-1.822s1.698.79 1.698 1.822v.043zm.039-12.285l-.84 8.06c-.057.581-.408.943-.897.943-.49 0-.84-.367-.896-.942l-.84-8.065c-.057-.624.25-1.095.779-1.095h1.91c.528.005.84.476.784 1.1z"
                    }))
                },
                success: function (t) {
                    return n.createElement(R, {
                        ...t
                    }, n.createElement("path", {
                        d: "M12 0a12 12 0 1012 12A12.014 12.014 0 0012 0zm6.927 8.2l-6.845 9.289a1.011 1.011 0 01-1.43.188l-4.888-3.908a1 1 0 111.25-1.562l4.076 3.261 6.227-8.451a1 1 0 111.61 1.183z"
                    }))
                },
                error: function (t) {
                    return n.createElement(R, {
                        ...t
                    }, n.createElement("path", {
                        d: "M11.983 0a12.206 12.206 0 00-8.51 3.653A11.8 11.8 0 000 12.207 11.779 11.779 0 0011.8 24h.214A12.111 12.111 0 0024 11.791 11.766 11.766 0 0011.983 0zM10.5 16.542a1.476 1.476 0 011.449-1.53h.027a1.527 1.527 0 011.523 1.47 1.475 1.475 0 01-1.449 1.53h-.027a1.529 1.529 0 01-1.523-1.47zM11 12.5v-6a1 1 0 012 0v6a1 1 0 11-2 0z"
                    }))
                },
                spinner: function () {
                    return n.createElement("div", {
                        className: "Toastify__spinner"
                    })
                }
            }
            , O = t => {
                let { isRunning: e, preventExitTransition: r, toastRef: o, eventHandlers: s, playToast: l } = A(t)
                    , { closeButton: u, children: c, autoClose: h, onClick: f, type: d, hideProgressBar: p, closeToast: m, transition: g, position: y, className: v, style: b, bodyClassName: w, bodyStyle: E, progressClassName: S, progressStyle: k, updateId: P, role: N, progress: C, rtl: T, toastId: x, deleteToast: R, isIn: O, isLoading: M, closeOnClick: B, theme: D } = t
                    , F = i("Toastify__toast", `Toastify__toast-theme--${D}`, `Toastify__toast--${d}`, {
                        "Toastify__toast--rtl": T
                    }, {
                        "Toastify__toast--close-on-click": B
                    })
                    , U = a(v) ? v({
                        rtl: T,
                        position: y,
                        type: d,
                        defaultClassName: F
                    }) : i(F, v)
                    , L = function (t) {
                        let { theme: e, type: r, isLoading: i, icon: o } = t
                            , s = null
                            , l = {
                                theme: e,
                                type: r
                            };
                        return !1 === o || (a(o) ? s = o({
                            ...l,
                            isLoading: i
                        }) : (0,
                            n.isValidElement)(o) ? s = (0,
                                n.cloneElement)(o, l) : i ? s = I.spinner() : r in I && (s = I[r](l))),
                            s
                    }(t)
                    , z = !!C || !h
                    , G = {
                        closeToast: m,
                        type: d,
                        theme: D
                    }
                    , j = null;
                return !1 === u || (j = a(u) ? u(G) : (0,
                    n.isValidElement)(u) ? (0,
                        n.cloneElement)(u, G) : function (t) {
                            let { closeToast: e, theme: r, ariaLabel: i = "close" } = t;
                            return n.createElement("button", {
                                className: `Toastify__close-button Toastify__close-button--${r}`,
                                type: "button",
                                onClick: t => {
                                    t.stopPropagation(),
                                        e(t)
                                }
                                ,
                                "aria-label": i
                            }, n.createElement("svg", {
                                "aria-hidden": "true",
                                viewBox: "0 0 14 16"
                            }, n.createElement("path", {
                                fillRule: "evenodd",
                                d: "M7.71 8.23l3.75 3.75-1.48 1.48-3.75-3.75-3.75 3.75L1 11.98l3.75-3.75L1 4.48 2.48 3l3.75 3.75L9.98 3l1.48 1.48-3.75 3.75z"
                            })))
                        }(G)),
                    n.createElement(g, {
                        isIn: O,
                        done: R,
                        position: y,
                        preventExitTransition: r,
                        nodeRef: o,
                        playToast: l
                    }, n.createElement("div", {
                        id: x,
                        onClick: f,
                        "data-in": O,
                        className: U,
                        ...s,
                        style: b,
                        ref: o
                    }, n.createElement("div", {
                        ...O && {
                            role: N
                        },
                        className: a(w) ? w({
                            type: d
                        }) : i("Toastify__toast-body", w),
                        style: E
                    }, null != L && n.createElement("div", {
                        className: i("Toastify__toast-icon", {
                            "Toastify--animate-icon Toastify__zoom-enter": !M
                        })
                    }, L), n.createElement("div", null, c)), j, n.createElement(_, {
                        ...P && !z ? {
                            key: `pb-${P}`
                        } : {},
                        rtl: T,
                        theme: D,
                        delay: h,
                        isRunning: e,
                        isIn: O,
                        closeToast: m,
                        hide: p,
                        type: d,
                        style: k,
                        className: S,
                        controlledProgress: z,
                        progress: C || 0
                    })))
            }
            , M = function (t, e) {
                return void 0 === e && (e = !1),
                {
                    enter: `Toastify--animate Toastify__${t}-enter`,
                    exit: `Toastify--animate Toastify__${t}-exit`,
                    appendPosition: e
                }
            }
            , B = h(M("bounce", !0))
            , D = h(M("slide", !0))
            , F = h(M("zoom"))
            , U = h(M("flip"))
            , L = {
                position: "top-right",
                transition: B,
                autoClose: 5e3,
                closeButton: !0,
                pauseOnHover: !0,
                pauseOnFocusLoss: !0,
                draggable: "touch",
                draggablePercent: 80,
                draggableDirection: "x",
                role: "alert",
                theme: "light"
            };
        function z(t) {
            let e = {
                ...L,
                ...t
            }
                , r = t.stacked
                , [o, s] = (0,
                    n.useState)(!0)
                , u = (0,
                    n.useRef)(null)
                , { getToastToRender: c, isToastActive: h, count: f } = E(e)
                , { className: d, style: p, rtl: m, containerId: g } = e;
            function y() {
                r && (s(!0),
                    T.play())
            }
            return x(() => {
                if (r) {
                    var t;
                    let r = u.current.querySelectorAll('[data-in="true"]')
                        , n = null == (t = e.position) ? void 0 : t.includes("top")
                        , i = 0
                        , s = 0;
                    Array.from(r).reverse().forEach((t, e) => {
                        t.classList.add("Toastify__toast--stacked"),
                            e > 0 && (t.dataset.collapsed = `${o}`),
                            t.dataset.pos || (t.dataset.pos = n ? "top" : "bot");
                        let r = i * (o ? .2 : 1) + (o ? 0 : 12 * e);
                        t.style.setProperty("--y", `${n ? r : -1 * r}px`),
                            t.style.setProperty("--g", "12"),
                            t.style.setProperty("--s", "" + (1 - (o ? s : 0))),
                            i += t.offsetHeight,
                            s += .025
                    }
                    )
                }
            }
                , [o, f, r]),
                n.createElement("div", {
                    ref: u,
                    className: "Toastify",
                    id: g,
                    onMouseEnter: () => {
                        r && (s(!1),
                            T.pause())
                    }
                    ,
                    onMouseLeave: y
                }, c((t, e) => {
                    let o = e.length ? {
                        ...p
                    } : {
                        ...p,
                        pointerEvents: "none"
                    };
                    return n.createElement("div", {
                        className: function (t) {
                            let e = i("Toastify__toast-container", `Toastify__toast-container--${t}`, {
                                "Toastify__toast-container--rtl": m
                            });
                            return a(d) ? d({
                                position: t,
                                rtl: m,
                                defaultClassName: e
                            }) : i(e, l(d))
                        }(t),
                        style: o,
                        key: `container-${t}`
                    }, e.map(t => {
                        let { content: e, props: i } = t;
                        return n.createElement(O, {
                            ...i,
                            stacked: r,
                            collapseAll: y,
                            isIn: h(i.toastId, i.containerId),
                            style: i.style,
                            key: `toast-${i.key}`
                        }, e)
                    }
                    ))
                }
                ))
        }
    },
    74810: function (t, e, r) {
        "use strict";
        r.d(e, {
            XR: function () {
                return n
            }
        });
        let n = t => (e, r, n) => {
            let i = n.subscribe;
            return n.subscribe = (t, e, r) => {
                let o = t;
                if (e) {
                    let i = (null == r ? void 0 : r.equalityFn) || Object.is
                        , s = t(n.getState());
                    o = r => {
                        let n = t(r);
                        if (!i(s, n)) {
                            let t = s;
                            e(s = n, t)
                        }
                    }
                        ,
                        (null == r ? void 0 : r.fireImmediately) && e(s, s)
                }
                return i(o)
            }
                ,
                t(e, r, n)
        }
    },
    95945: function (t, e, r) {
        "use strict";
        function n(t, e) {
            if (Object.is(t, e))
                return !0;
            if ("object" != typeof t || null === t || "object" != typeof e || null === e)
                return !1;
            if (t instanceof Map && e instanceof Map) {
                if (t.size !== e.size)
                    return !1;
                for (let [r, n] of t)
                    if (!Object.is(n, e.get(r)))
                        return !1;
                return !0
            }
            if (t instanceof Set && e instanceof Set) {
                if (t.size !== e.size)
                    return !1;
                for (let r of t)
                    if (!e.has(r))
                        return !1;
                return !0
            }
            let r = Object.keys(t);
            if (r.length !== Object.keys(e).length)
                return !1;
            for (let n of r)
                if (!Object.prototype.hasOwnProperty.call(e, n) || !Object.is(t[n], e[n]))
                    return !1;
            return !0
        }
        r.d(e, {
            X: function () {
                return n
            }
        })
    },
    65616: function (t, e, r) {
        "use strict";
        r.d(e, {
            F: function () {
                return h
            }
        });
        var n = r(2265)
            , i = r(65401);
        let o = t => {
            let e;
            let r = new Set
                , n = (t, n) => {
                    let i = "function" == typeof t ? t(e) : t;
                    if (!Object.is(i, e)) {
                        let t = e;
                        e = (null != n ? n : "object" != typeof i || null === i) ? i : Object.assign({}, e, i),
                            r.forEach(r => r(e, t))
                    }
                }
                , i = () => e
                , o = {
                    setState: n,
                    getState: i,
                    getInitialState: () => s,
                    subscribe: t => (r.add(t),
                        () => r.delete(t)),
                    destroy: () => {
                        console.warn("[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected."),
                            r.clear()
                    }
                }
                , s = e = t(n, i, o);
            return o
        }
            , s = t => t ? o(t) : o
            , { useDebugValue: a } = n
            , { useSyncExternalStoreWithSelector: l } = i
            , u = t => t
            , c = (t, e) => {
                let r = s(t)
                    , n = (t, n = e) => (function (t, e = u, r) {
                        let n = l(t.subscribe, t.getState, t.getServerState || t.getInitialState, e, r);
                        return a(n),
                            n
                    }
                    )(r, t, n);
                return Object.assign(n, r),
                    n
            }
            , h = (t, e) => t ? c(t, e) : c
    }
}]);
